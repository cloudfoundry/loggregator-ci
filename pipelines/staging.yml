groups:
- name: main
  jobs:
  - cf-deploy
  - volley-deploy
  - volley-teardown
  - blackbox-tests
  - firehose-reliability
  - start-incidents
- name: director-lifecycle
  jobs:
  - bbl-create
  - bbl-destroy

resources:
- name: 2m
  type: time
  source:
    interval: 2m

- name: 30m
  type: time
  source:
    interval: 30m

- name: 2h
  type: time
  source:
    interval: 2h

- name: daily
  type: time
  source:
    start: 8:00 PM
    stop: 9:00 PM
    location: America/Denver

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v6.9

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
      - .final_builds
      - releases

- name: loggregator-tools
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-tools

- name: ouroboros
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/ouroboros-release

- name: cf-syslog-drain-release-elect
  type: git
  source:
    uri: http://github.com/cloudfoundry/cf-syslog-drain-release.git
    branch: release-elect
    ignore_paths:
    - .final_builds
    - releases

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop

- name: loggregator-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci

- name: deployments-loggregator
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment

- name: bosh-bootloader
  type: git
  source:
    uri: https://github.com/loggregator/bosh-bootloader
    branch: master

jobs:
###############################################################################
# DIRECTOR LIFECYCLE
###############################################################################
- name: bbl-create
  public: false
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
    - get: bbl-state
      resource: deployments-loggregator
    - get: ops-files
      resource: bosh-deployment
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: bosh-bootloader
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/staging
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: staging-bbl
      LB_DOMAIN: staging.loggr.cf-app.com
      BBL_CONFIG_DIR: plan-patches/iso-segs-gcp
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true
  - task: configure-dns
    file: loggregator-ci/tasks/gcp-set-nameservers/task.yml
    input_mapping:
      bbl-state: updated-bbl-state
      environment: create-pool
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/service-account.key.json
      GCP_DNS_ZONE: loggr
      GCP_LB_DOMAIN: loggr.cf-app.com

- name: bbl-destroy
  public: false
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
  - task: delete-deployments
    file: loggregator-ci/tasks/bosh-delete-all-deployments/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/service-account.key.json
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

###############################################################################
# Deployments
###############################################################################
- name: cf-deploy
  serial: true
  serial_groups:
  - cf-deploy-blackbox-tests
  - cf-deploy-start-incidents
  - cf-deploy-firehose-reliability
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: loggregator
      resource: loggregator-release-elect
    - get: cf-syslog-drain
      resource: cf-syslog-drain-release-elect
    - get: loggregator-tools
  - aggregate:
    - task: upload-stemcell
      input_mapping:
        bbl-state: deployments-loggregator
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/staging
    - task: upload-loggregator-release
      input_mapping:
        bosh-release-dir: loggregator
        bbl-state: deployments-loggregator
      file: loggregator-ci/tasks/upload-release/task.yml
      params:
        BBL_STATE_DIR: gcp/staging
    - task: upload-cf-syslog-drain-release
      input_mapping:
        bosh-release-dir: cf-syslog-drain
        bbl-state: deployments-loggregator
      file: loggregator-ci/tasks/upload-release/task.yml
      params:
        BBL_STATE_DIR: gcp/staging
    - task: create-turbulence-vars
      input_mapping:
        bbl-state: deployments-loggregator
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
        inputs:
        - name: bbl-state
        - name: cf-deployment
        outputs:
        - name: vars-files
        params:
          DATADOG_API_KEY: {{datadog-dev-api-key}}
          DATADOG_APP_KEY: {{datadog-dev-app-key}}
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            cd bbl-state/gcp/staging

            cat <<EOF > ../../../vars-files/turbulence.yml

            director_client: $(bbl director-username)
            director_client_secret: $(bbl director-password)
            director_ip: $(bbl director-address | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}')
            director_ssl: "$(bbl director-ca-cert | awk '{printf "%s\\n", $0}')"
            turbulence_api_ip: 10.0.31.200
            datadog_api_key: $DATADOG_API_KEY
            datadog_app_key: $DATADOG_APP_KEY

            EOF
    - task: copy-ops-files
      input_mapping:
        bbl-state: deployments-loggregator
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        inputs:
        - name: bbl-state
        - name: cf-deployment
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            cp cf-deployment/operations/experimental/use-bosh-dns.yml ops-files/
            cp cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml ops-files/
            cp cf-deployment/operations/use-compiled-releases.yml ops-files/
            cp bbl-state/gcp/staging/ops-files/*.yml ops-files/

            cat <<EOT >> ops-files/export-links.yml
            - type: replace
              path: /instance_groups/name=log-api/jobs/name=loggregator_trafficcontroller/provides?
              value:
                trafficcontroller: {as: trafficcontroller, shared: true}
            - type: replace
              path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy/provides?
              value:
                reverse_log_proxy: {as: reverse_log_proxy, shared: true}
            EOT
  - task: cf-deploy
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
      SYSTEM_DOMAIN: staging.loggr.cf-app.com
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
      VARS_FILES: "turbulence.yml"
      OPS_FILES: |
        clients.yml
        turbulence.yml
        allow-insecure-syslog-drains.yml
        export-links.yml
        use-compiled-releases.yml
        cf-versions.yml
        use-bosh-dns.yml
        use-bosh-dns-for-containers.yml
  - aggregate:
    - put: deployments-loggregator
      params:
        repository: updated-vars-store
        rebase: true
    - task: bosh-cleanup
      input_mapping:
        bbl-state: deployments-loggregator
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: gcp/staging
    - task: setup-cf
      input_mapping:
        vars-store: updated-vars-store
      file: loggregator-ci/tasks/staging/setup-cf.yml
      params:
        SYSTEM_DOMAIN: staging.loggr.cf-app.com
        VARS_STORE_FILE: gcp/staging/deployment-vars.yml
        ORG: cf-lamb
        SPACE: development
    - task: setup-event
      file: loggregator-ci/tasks/staging/setup-datadog-event.yml
      params:
        DATADOG_APP_KEY: {{datadog-dev-app-key}}

- name: volley-deploy
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: loggregator-ci
    - get: deployments-loggregator
    - get: ouroboros
      trigger: true
  - task: upload-release
    input_mapping:
      bosh-release-dir: ouroboros
      bbl-state: deployments-loggregator
    file: loggregator-ci/tasks/upload-release/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
  - task: deploy-ouroboros
    input_mapping:
      bbl-state: deployments-loggregator
      updated-vars-store: deployments-loggregator
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: ouroboros
      - name: updated-vars-store
      outputs:
      - name: final-vars-store
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -ex

          STATE_DIR=$PWD/bbl-state/gcp/staging

          pushd $STATE_DIR
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          pushd ouroboros
            bosh -d ouroboros -n deploy templates/ouroboros-template.yml \
              -o templates/no-ouroboros-ops.yml \
              -l $STATE_DIR/deployment-vars.yml \
              --vars-store updated-vars-store/gcp/staging/ouroboros-vars.yml
          popd

          rsync -ac updated-vars-store/ final-vars-store
  - aggregate:
    - put: deployments-loggregator
      params:
        repository: final-vars-store
        rebase: true
    - task: bosh-cleanup
      input_mapping:
        bbl-state: deployments-loggregator
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: gcp/staging

- name: volley-teardown
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: deployments-loggregator
  - task: teardown-ouroboros
    input_mapping:
      bbl-state: deployments-loggregator
      updated-vars-store: deployments-loggregator
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      DEPLOYMENT_NAME: ouroboros
      BBL_STATE_DIR: gcp/staging
  - task: bosh-cleanup
    input_mapping:
      bbl-state: deployments-loggregator
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/staging

###############################################################################
# Tests
###############################################################################
- name: blackbox-tests
  serial: true
  serial_groups:
  - cf-deploy-blackbox-tests
  plan:
  - aggregate:
    - get: deployments-loggregator
    - get: loggregator-tools
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
    - get: loggregator-ci
    - get: 30m
      trigger: true
  - aggregate:
    - do:
      - task: get-release-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: release-elect
          outputs:
          - name: release-info
          run:
            path: bash
            args:
            - -c
            - |
              #/bin/bash
              set -ex

              cd release-elect
              git rev-parse HEAD > ../release-info/version
      - task: cf-logs
        file: loggregator-ci/tasks/staging/cf-logs-smoke-test.yml
        input_mapping:
          vars-store: deployments-loggregator
        params:
          PREFIX: "staging."
          CYCLES: 10000
          DELAY: "2"
          DELAY_UNIT: "us"
          MESSAGE: "FIFTEEN-MINUTE"
          APP_NAME: "floodspinner"
          WAIT: 60
          API_ENDPOINT: api.staging.loggr.cf-app.com
          USERNAME: admin
          DATADOG_API_KEY: {{datadog-dev-api-key}}
          VARS_STORE_FILE: gcp/staging/deployment-vars.yml
    - task: http-drain
      file: loggregator-ci/tasks/cf-syslog-drain-smoke-test-with-vars.yml
      input_mapping:
        vars-store: deployments-loggregator
      params:
        CF_ORG: cf-lamb
        CF_SPACE: development
        CF_APP_DOMAIN: staging.loggr.cf-app.com
        CF_SYSTEM_DOMAIN: staging.loggr.cf-app.com
        CF_USERNAME: admin
        DATADOG_API_KEY: {{datadog-loggregator-api-key}}
        DRAIN_VERSION: "2.0"
        DRAIN_TYPE: "https"
        JOB_NAME: "https-teardown"
        TEARDOWN: false
        VARS_STORE_FILE: gcp/staging/deployment-vars.yml
      timeout: 20m
    - task: tcp-drain
      file: loggregator-ci/tasks/cf-syslog-drain-smoke-test-with-vars.yml
      input_mapping:
        vars-store: deployments-loggregator
      params:
        CF_ORG: cf-lamb
        CF_SPACE: development
        CF_APP_DOMAIN: tcp.staging.loggr.cf-app.com
        CF_SYSTEM_DOMAIN: staging.loggr.cf-app.com
        CF_USERNAME: admin
        DATADOG_API_KEY: {{datadog-loggregator-api-key}}
        DRAIN_VERSION: "2.0"
        DRAIN_TYPE: "syslog"
        JOB_NAME: "syslog-teardown"
        TEARDOWN: true
        VARS_STORE_FILE: gcp/staging/deployment-vars.yml
      timeout: 20m

- name: firehose-reliability
  serial_groups:
  - cf-deploy-firehose-reliability
  plan:
  - aggregate:
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
      params:
        submodules: none
    - get: loggregator
      resource: loggregator-release-elect
    - get: vars-store
      resource: deployments-loggregator
    - get: loggregator-ci
    - get: 2m
      trigger: true
  - task: get-cf-creds
    config:
    file: loggregator-ci/tasks/get-cf-admin-credentials.yml
    params:
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
  - task: loggregator-elect
    file: loggregator-ci/tasks/staging/firehose-reliability-test.yml
    params:
      APP_DOMAIN: "loggregator-firehose-reliability.staging.loggr.cf-app.com"
      APP_NAME: "loggregator-firehose-reliability"
      CF_API: "api.staging.loggr.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      ORG: cf-lamb
      SPACE: development
      USERNAME: admin
      CLIENT_ID: {{staging-firehose-reliability-client-id}}
      CLIENT_SECRET: {{staging-firehose-reliability-client-secret}}
      SKIP_CERT_VERIFY: true
      WORKER_INSTANCE_COUNT: 2
    timeout: 2m

- name: start-incidents
  serial: true
  serial_groups:
  - cf-deploy-start-incidents
  plan:
  - get: 2h
  - aggregate:
    - get: vars-store
      resource: deployments-loggregator
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
    - get: loggregator-ci
  - aggregate:
    - task: start-incidents
      file: loggregator-ci/tasks/staging/schedule-turbulence.yml
      params:
        TURBULENCE_API_URL: https://35.193.175.97:6868 # Public IP for `turbulence_api` job. Found in GCP console.
        VARS_FILE_PATH: "gcp/staging/deployment-vars.yml"

