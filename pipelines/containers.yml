resources:

- name: ubuntu-base
  type: docker-image
  source:
    repository: loggregator/ubuntu-base
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: go-image
  type: docker-image
  source:
    repository: loggregator/go17
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: go-image-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci
    branch: master
    paths:
    - docker-images/go17

- name: protoc-image
  type: docker-image
  source:
    repository: loggregator/protoc
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: protoc-image-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci
    branch: master
    paths:
    - docker-images/protoc

- name: bosh20-image
  type: docker-image
  source:
    repository: loggregator/bosh20
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: bosh20-image-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci
    branch: master
    paths:
    - docker-images/bosh20

- name: golang-1.7-tarball
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.7(\.\d+)?)\.linux-amd64\.tar.gz'

- name: bosh10-image-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci
    branch: master
    paths:
    - docker-images/bosh10

- name: bosh10-image
  type: docker-image
  source:
    repository: loggregator/bosh10
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

jobs:
- name: build-go-image
  public: true
  plan:
  - aggregate:
    - get: ubuntu-base
      trigger: true
    - get: image-dockerfile
      resource: go-image-dockerfile
      trigger: true
    - get: additional-files
      resource: golang-1.7-tarball
      trigger: true
  - task: prepare-image-build
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/ubuntu-base
          tag: latest
      platform: linux
      inputs:
      - name: image-dockerfile
      - name: additional-files
      outputs:
      - name: build-image
      params:
        IMAGE_NAME: go17
      run:
        path: bash
        args:
        - -c
        - {{prepare-docker-image}}
  - put: go-image
    params:
      build: build-image/build
      tag: build-image/tag
      tag_as_latest: true
      cache: true
      cache_tag: latest

- name: build-protoc-image
  public: true
  plan:
  - aggregate:
    - get: go-image
      trigger: true
      passed:
      - build-go-image
    - get: image-dockerfile
      resource: protoc-image-dockerfile
      trigger: true
  - task: prepare-image-build
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/ubuntu-base
          tag: latest
      platform: linux
      inputs:
      - name: image-dockerfile
      outputs:
      - name: build-image
      params:
        IMAGE_NAME: protoc
      run:
        path: bash
        args:
        - -c
        - {{prepare-docker-image}}
  - put: protoc-image
    params:
      build: build-image/build
      tag: build-image/tag
      tag_as_latest: true
      cache: true
      cache_tag: latest

- name: build-bosh20-image
  public: true
  plan:
  - aggregate:
    - get: go-image
      trigger: true
      passed:
      - build-go-image
    - get: image-dockerfile
      resource: bosh20-image-dockerfile
      trigger: true
  - task: prepare-image-build
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/ubuntu-base
          tag: latest
      platform: linux
      inputs:
      - name: image-dockerfile
      outputs:
      - name: build-image
      params:
        IMAGE_NAME: bosh20
      run:
        path: bash
        args:
        - -c
        - {{prepare-docker-image}}
  - put: bosh20-image
    params:
      build: build-image/build
      tag: build-image/tag
      tag_as_latest: true
      cache: true
      cache_tag: latest

- name: bosh10
  plan:
    - get: bosh10-image-dockerfile
      trigger: true
    - put: bosh10-image
      params:
        build: bosh10-image-dockerfile/docker-images/bosh10
        tag_as_latest: true
        cache: true
        cache_tag: latest
