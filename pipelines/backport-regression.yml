resources:
  - name: deployments-loggregator
    type: git
    source: &deployments_loggregator
      uri: git@github.com:cloudfoundry/deployments-loggregator.git
      branch: master
      private_key: {{deployments-loggregator-key}}

  - name: deployments-loggregator-with-changes
    type: git
    source: *deployments_loggregator

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: develop

  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: v2.1

  - name: loggregator-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: develop
      private_key: {{loggregator-key}}
      ignore_paths:
      - .final_builds
      - releases

  - name: loggregator-77
    type: bosh-io-release
    source:
      repository: cloudfoundry/loggregator

  - name: loggregator-77-patched
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: back-ports/1.10
      private_key: {{loggregator-key}}
      ignore_paths:
      - .final_builds
      - releases

  - name: loggregator-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/loggregator-ci

  - name: 5m
    type: time
    source: {interval: 5m}

jobs:
- name: loggregator-77-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/loggregator-77-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-77-bbl
      LB_DOMAIN: loggregator-77.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-77-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-77-bbl
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-77-patched-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/loggregator-77-patched-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-77-patched-bbl
      LB_DOMAIN: loggregator-77-patched.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-77-patched-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-77-patched-bbl
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-77-deploy
  serial: true
  plan:
    - aggregate:
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: vars-store
        resource: deployments-loggregator
      - get: release
        resource: loggregator-77
        version:
          version: "77"
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-77-bbl
    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: { repository: ubuntu }
        inputs:
        - name: bbl-state
        - name: cf-deployment
        - name: release
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
            cp bbl-state/gcp/loggregator-77-bbl/ops-files/*.yml ops-files/

            version=$(cat release/version)
            sha=$(cat release/sha1)

            cat <<EOT >> ops-files/loggregator-version.yml
            - type: replace
              path: /releases/name=loggregator
              value:
                name: loggregator
                url: https://bosh.io/d/github.com/cloudfoundry/loggregator?v=$version
                version: "$version"
                sha1: "$sha"
            EOT
    - task: cf-deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-77-bbl
        SYSTEM_DOMAIN: loggregator-77.cf-app.com
        VARS_STORE_FILE: gcp/loggregator-77-bbl/deployment-vars.yml
        OPS_FILES: "clients.yml use-4-azs-for-router.yml loggregator-version.yml"
    - put: deployments-loggregator-with-changes
      params:
        repository: updated-vars-store
        rebase: true

- name: loggregator-77-patched-deploy
  serial: true
  serial_groups: ["loggregator-77-patched"]
  plan:
    - aggregate:
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: release
        resource: loggregator-77-patched
      - get: vars-store
        resource: deployments-loggregator
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-77-patched-bbl
    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: { repository: ubuntu }
        inputs:
        - name: bbl-state
        - name: cf-deployment
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
            cp bbl-state/gcp/loggregator-77-patched-bbl/ops-files/*.yml ops-files/

    - task: cf-deploy
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-77-patched-bbl
        SYSTEM_DOMAIN: loggregator-77-patched.cf-app.com
        VARS_STORE_FILE: gcp/loggregator-77-patched-bbl/deployment-vars.yml
        OPS_FILES: "clients.yml use-4-azs-for-router.yml"
    - put: deployments-loggregator-with-changes
      params:
        repository: updated-vars-store
        rebase: true

- name: cf-setup
  serial: true
  plan:
    - aggregate:
      - get: vars-store
        resource: deployments-loggregator-with-changes
      - get: loggregator
        resource: loggregator-develop
      - get: loggregator-77
        passed:
          - loggregator-77-deploy
        resource: loggregator-77
        version:
          version: "77"
      - get: loggregator-77-patched
        passed:
          - loggregator-77-patched-deploy
        resource: loggregator-77-patched
      - get: loggregator-ci
    - aggregate:
      - task: setup-loggregator-77
        file: loggregator-ci/tasks/release-elect-regression/setup-cf.yml
        params:
          SYSTEM_DOMAIN: loggregator-77.cf-app.com
          VARS_STORE_FILE: gcp/loggregator-77-bbl/deployment-vars.yml
          ORG: cf-lamb
          SPACE: development
      - task: setup-loggregator-77-patched
        file: loggregator-ci/tasks/release-elect-regression/setup-cf.yml
        params:
          SYSTEM_DOMAIN: loggregator-77-patched.cf-app.com
          VARS_STORE_FILE: gcp/loggregator-77-patched-bbl/deployment-vars.yml
          ORG: cf-lamb
          SPACE: development

- name: setup-datadog
  serial: true
  serial_groups: ["loggregator-77", "loggregator-77-patched"]
  plan:
    - aggregate:
      - get: control
        resource: loggregator-77
        passed:
        - cf-setup
        version:
          version: "77"
      - get: variable
        resource: loggregator-77-patched
        passed:
        - cf-setup
      - get: loggregator-ci
    - task: setup-dashboard
      file: loggregator-ci/tasks/setup-control-vs-variable-dashboard.yml
      params:
        DATADOG_API_KEY: {{datadog-dev-api-key}}
        DATADOG_APP_KEY: {{datadog-dev-app-key}}
        CONTROL_SYSTEM_DOMAIN: loggregator-77.cf-app.com
        VARIABLE_SYSTEM_DOMAIN: loggregator-77-patched.cf-app.com

- name: smoke-tests
  serial: true
  plan:
    - aggregate:
      - get: loggregator-77
        resource: loggregator-77
        passed:
        - setup-datadog
        version:
          version: "77"
      - get: loggregator-77-patched
        resource: loggregator-77-patched
        passed:
        - setup-datadog
      - get: loggregator-ci
    - get: 5m
      trigger: true
    - aggregate:
      - do:
        - task: get-loggregator-77-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/bosh20
            inputs:
              - name: loggregator-77
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cp loggregator-77/version release-info/version
        - task: smoke-loggregator-77
          file: loggregator-ci/tasks/release-elect-regression/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-77.cf-app.com
            USERNAME: admin
            PASSWORD: {{loggregator-77-password}}
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
      - do:
        - task: get-loggregator-77-patched-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/bosh20
            inputs:
              - name: loggregator-77-patched
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cd loggregator-77-patched
                git rev-parse HEAD > ../release-info/version
        - task: loggregator-77-patched
          file: loggregator-ci/tasks/release-elect-regression/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-77-patched.cf-app.com
            USERNAME: admin
            PASSWORD: {{loggregator-77-patched-password}}
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
