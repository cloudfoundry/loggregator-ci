resources:
- name: loggregator-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci

- name: deployments-loggregator
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-loggregator
    private_key: {{deployments-loggregator-key}}

- name: log-cache-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/log-cache-release
    branch: master

- name: secrets-prod
  type: git
  source:
    uri: git@github.com:pivotal-cloudops/secrets-prod.git
    private_key: {{ci_concourse_github_key}}

jobs:
- name: log-cache-deploy
  serial: true
  plan:
  - aggregate:
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: secrets-prod
    - get: log-cache-release
      trigger: true
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      inputs:
      - name: deployments-loggregator
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          cp deployments-loggregator/pws/ops-files/log-cache.yml ops-files/

  - task: upload-log-cache
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: log-cache-release
      - name: secrets-prod
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux
          log_cache_dir="$PWD/log-cache-release"

          pushd secrets-prod/ci
            export BOSH_CLIENT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_client_id`
            export BOSH_CLIENT_SECRET=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_client_secret`
            export BOSH_CA_CERT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_ca_cert`
            export BOSH_ENVIRONMENT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_target`
          popd

          pushd $log_cache_dir
            bosh create-release --name=log-cache --force
            bosh upload-release --rebase
          popd
  - task: log-cache-deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: secrets-prod
      - name: log-cache-release
      - name: ops-files
      params:
        SYSTEM_DOMAIN: coconut.cf-app.com
        DEPLOYMENT_NAME: log-cache
        MANIFEST_FILE: manifests/log-cache.yml
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux
          log_cache_dir="$PWD/log-cache-release"

          pushd secrets-prod/ci
            export BOSH_CLIENT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_client_id`
            export BOSH_CLIENT_SECRET=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_client_secret`
            export BOSH_CA_CERT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_ca_cert`
            export BOSH_ENVIRONMENT=`bosh int ci_bosh_secrets.yml --path=/prod_bosh_target`
          popd

          bosh \
          deploy "${log_cache_dir}/$MANIFEST_FILE" \
          --deployment "$DEPLOYMENT_NAME" \
          --non-interactive \
          --ops-file ops-files/log-cache.yml
