resources:
- name: datadog-firehose-nozzle-release
  type: git
  source:
    uri: git@github.com:datadog/datadog-firehose-nozzle-release.git
    branch: master
    private_key: {{datadog-firehose-nozzle-release-key}}

- name: deployments-loggregator
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

jobs:
- name: tests
  public: true
  serial: true
  plan:
  - get: datadog-firehose-nozzle-release
    trigger: true
  - task: run-unit-tests
    config:
      image_resource:
        type: docker-image
        source:
        - repository: loggregator/base
      platform: linux
      inputs:
      - name: datadog-firehose-nozzle-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash -e

            set -x

            cd datadog-firehose-nozzle-release/src/datadog-firehose-nozzle/

            # set up GOPATH and fetch dependencies
            export GOPATH=$(pwd)
            export PATH=$PATH:$GOPATH/bin

            go version
            go get -d -v -t ./...
            go get -u github.com/golang/lint/golint

            cd src/github.com/DataDog/datadog-firehose-nozzle/
            bin/test

- name: deploy
  serial: true
  plan:
  - aggregate:
    - get: gcp-stemcell
      trigger: false
    - get: datadog-firehose-nozzle-release
      passed:
      - tests
      trigger: true
    - get: deployments-loggregator
      trigger: false
  - task: create-release
    config:
      image_resource:
        type: docker-image
        source:
        - repository: loggregator/base
      platform: linux
      inputs:
      - name: datadog-firehose-nozzle-release
      outputs:
      - name: datadog-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -ex

            cd datadog-firehose-nozzle-release

            bosh -n create-release --force --tarball ../datadog-release/release.tgz

  - task: deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: datadog-release
      - name: deployments-loggregator
      - name: datadog-firehose-nozzle-release
      params:
        MANIFEST_FILE: datadog-firehose-nozzle-release/templates/datadog-bosh2.yml
        MANIFEST_VARS: deployments-loggregator/gcp/coconut/datadog-vars.yml
        DEPLOYMENT_NAME: datadog
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -e -x

            source ~/.bashrc

            pushd deployments-loggregator/gcp/bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -n upload-release datadog-release/*.tgz --rebase
            bosh -n -d ${DEPLOYMENT_NAME} deploy ${MANIFEST_FILE} -l ${MANIFEST_VARS}
