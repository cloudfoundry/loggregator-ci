resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v3.5

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: loggregator-capacity-planning-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-capacity-planning-release
    branch: master

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master

# This is here because concourse has a bug in which putting to a git resource
# creates a new version that can trigger jobs even if the commit has [ci skip]
# present.
- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: datadog-firehose-nozzle-release
  type: git
  source: &datadog-firehose-nozzle-release
    uri: git@github.com:cloudfoundry-incubator/datadog-firehose-nozzle-release.git
    branch: master
    private_key: {{datadog-firehose-nozzle-release-key}}

jobs:
- name: bbl-create
  public: false
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/loggregator-capacity-planning
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-capacity-planning
      LB_DOMAIN: loggregator-capacity-planning.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: destroy-environment
  public: false
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - aggregate:
    - task: delete-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-capacity-planning
        DEPLOYMENT_NAME: datadog
    - task: delete-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-capacity-planning
        DEPLOYMENT_NAME: cf
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-capacity-planning
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-capacity-planning-deploy
  serial: true
  plan:
    - aggregate:
      - get: loggregator-ci
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: vars-store
        resource: deployments-loggregator
      - get: vars-files
        resource: deployments-loggregator
      - get: loggregator-capacity-planning-release
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-capacity-planning
    - task: build-settings
      file: loggregator-ci/tasks/capacity-planning/build-settings.yml
      params:
        API_VERSION: v2
        CLIENT_ID: capacity_planning_authenticator
        DIEGO_CELL_COUNT: 2
        DOPPLER_COUNT: 1
        EVENT_COUNTER_COUNT: 2
        LOG_API_COUNT: 1
        LOG_EMITTER_COUNT: 2
        LOG_EMITTER_INSTANCE_COUNT: 2
        LOG_SIZE: 1000
        METRIC_EMITTER_COUNT: 2
        ORG: capacity-planning
        ROUTER_COUNT: 4
        SPACE: capacity-planning
        SYSTEM_DOMAIN: loggregator-capacity-planning.cf-app.com
        START_RPS: 800
        END_RPS: 1600
        STEPS: 8
        TEST_EXECUTION_MINUTES: 15
    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
        inputs:
        - name: bbl-state
        - name: cf-deployment
        - name: deployment-settings
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            SETTINGS_FILE="$PWD/deployment-settings/settings.json"

            DOPPLER_COUNT=$(cat $SETTINGS_FILE | jq .DOPPLER_COUNT --raw-output)
            LOG_API_COUNT=$(cat $SETTINGS_FILE | jq .LOG_API_COUNT --raw-output)
            DIEGO_CELL_COUNT=$(cat $SETTINGS_FILE | jq .DIEGO_CELL_COUNT --raw-output)
            ROUTER_COUNT=$(cat $SETTINGS_FILE | jq .ROUTER_COUNT --raw-output)

            cp cf-deployment/operations/experimental/enable-loggregator-v2-diego.yml ops-files/
            cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
            cp bbl-state/gcp/loggregator-capacity-planning/ops-files/*.yml ops-files/

            cat <<EOT >> ops-files/capacity-planning-config.yml
            - type: replace
              path: /instance_groups/name=doppler/instances
              value: $DOPPLER_COUNT
            - type: replace
              path: /instance_groups/name=router/instances
              value: $ROUTER_COUNT
            - type: replace
              path: /instance_groups/name=log-api/instances
              value: $LOG_API_COUNT
            - type: replace
              path: /instance_groups/name=diego-cell/instances
              value: $DIEGO_CELL_COUNT
            - type: replace
              path: /releases/name=loggregator
              value:
                name: loggregator
                url: https://bosh.io/d/github.com/cloudfoundry/loggregator
                version: latest
            EOT
    - task: cf-deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      params:
        BBL_STATE_DIR: gcp/loggregator-capacity-planning
        SYSTEM_DOMAIN: loggregator-capacity-planning.cf-app.com
        VARS_STORE_FILE: gcp/loggregator-capacity-planning/deployment-vars.yml
        OPS_FILES: "clients.yml use-4-azs-for-router.yml capacity-planning-config.yml instance-types.yml"
    - put: deployments-loggregator-with-changes
      params:
        repository: updated-vars-store
        rebase: true
    - task: create-org-and-space
      file: loggregator-ci/tasks/create-org-and-space.yml
      params:
        VARS_STORE_FILE: gcp/loggregator-capacity-planning/deployment-vars.yml
        ORG: capacity-planning
        SPACE: capacity-planning
        SYSTEM_DOMAIN: loggregator-capacity-planning.cf-app.com
    - task: automated-rampup-test
      file: loggregator-ci/tasks/capacity-planning/automated-rampup-test.yml
    - put: deployments-loggregator-with-changes
      params:
        repository: updated-capacity-planning-vars-store
        rebase: true

- name: datadog-nozzle-deploy
  serial: true
  plan:
  - aggregate:
    - get: gcp-stemcell
      trigger: false
    - get: datadog-firehose-nozzle-release
      trigger: false
    - get: deployments-loggregator
      trigger: false
  - task: create-release
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: datadog-firehose-nozzle-release
      outputs:
      - name: datadog-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -ex

            cd datadog-firehose-nozzle-release
            bosh -n create-release --tarball ../datadog-release/release.tgz
  - task: deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: datadog-release
      - name: deployments-loggregator
      - name: datadog-firehose-nozzle-release
      params:
        MANIFEST_FILE: datadog-firehose-nozzle-release/templates/datadog-bosh2.yml
        MANIFEST_VARS: deployments-loggregator/gcp/loggregator-capacity-planning/datadog-vars.yml
        DEPLOYMENT_NAME: datadog
        METRIC_PREFIX: capacity-planning.datadog.nozzle.
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -e -x

            source ~/.bashrc

            pushd deployments-loggregator/gcp/loggregator-capacity-planning
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -n upload-release datadog-release/*.tgz --rebase
            bosh -n -d ${DEPLOYMENT_NAME} deploy ${MANIFEST_FILE} -l ${MANIFEST_VARS} \
              -o deployments-loggregator/gcp/loggregator-capacity-planning/ops-files/datadog.yml

