resources:
- name: cf-syslog-drain-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry/scalable-syslog
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

# This is here because concourse has a bug in which putting to a git resource
# creates a new version that can trigger jobs even if the commit has [ci skip]
# present.
- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

jobs:
- name: tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release
      trigger: false
    - get: scalable-syslog
      trigger: true
  - task: run-tests
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: cf-syslog-drain-release
      - name: scalable-syslog
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -e -x

          rm -rf cf-syslog-drain-release/src/code.cloudfoundry.org/scalable-syslog/{*,.git}
          cp -r scalable-syslog/. cf-syslog-drain-release/src/code.cloudfoundry.org/scalable-syslog/

          pushd cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go install github.com/onsi/ginkgo/ginkgo
            go test ./src/code.cloudfoundry.org/scalable-syslog/... -race
          popd

- name: bump-release-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release
      trigger: false
    - get: scalable-syslog
      passed:
      - tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: cf-syslog-drain-release
      - name: scalable-syslog
      outputs:
      - name: updated-cf-syslog-drain-release
      params:
        PARENT: cf-syslog-drain-release
        OUTPUT: updated-cf-syslog-drain-release
        CHILD: scalable-syslog
        CHILD_PATH: src/code.cloudfoundry.org/scalable-syslog
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-cf-syslog-drain-release
      outputs:
      - name: synced-cf-syslog-drain-release
      params:
        OUTPUT: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -e -x

          pushd updated-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"

            ./scripts/sync-package-specs
          popd

          cp -r updated-cf-syslog-drain-release/. $OUTPUT/
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      outputs:
      - name: bumped-cf-syslog-drain-release
      params:
        SOURCE: synced-cf-syslog-drain-release
        PATHS: src/code.cloudfoundry.org/scalable-syslog packages/
        COMMIT_MESSAGE: "Bump scalable-syslog"
        OUTPUT: bumped-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: cf-syslog-drain-release
    params:
      repository: bumped-cf-syslog-drain-release
      rebase: true

- name: cf-syslog-drain-standalone-deploy
  serial: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release
      passed:
      - bump-release-submodule
      trigger: true
    - get: deployments-loggregator
      trigger: false
    - get: consul-release
      trigger: false
  - task: upload-cf-syslog-drain
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
        - name: cf-syslog-drain-release
        - name: consul-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux
            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            for release in $(find consul-release -name '*.tgz'); do
              bosh upload-release $release
            done

            pushd cf-syslog-drain-release
                bosh create-release
                bosh upload-release --rebase
            popd
  - task: deploy-cf-syslog-drain
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: cf-syslog-drain-release
      outputs:
      - name: updated-deployments-loggregator
      params:
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            ss_dir="$PWD/cf-syslog-drain-release"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"

            bosh -n -d cf-syslog-drain-standalone deploy \
              --vars-store "$deployment_dir/cf-syslog-drain-standalone-vars.yml" \
              --ops-file "$ss_dir/manifests/fake-ops.yml" \
              --ops-file "$deployment_dir/ops-files/cf-syslog-drain/standalone.yml" \
              "$ss_dir/manifests/cf-syslog-drain.yml"

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut-bbl/cf-syslog-drain-standalone-vars.yml
        COMMIT_MESSAGE: "Update cf-syslog-drain vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

- name: cf-syslog-drain-deploy
  serial: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release
      passed:
      - bump-release-submodule
      trigger: true
    - get: deployments-loggregator
      trigger: false
    - get: consul-release
      trigger: false
  - task: upload-cf-syslog-drain
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
        - name: cf-syslog-drain-release
        - name: consul-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux
            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            for release in $(find consul-release -name '*.tgz'); do
              bosh upload-release $release
            done

            pushd cf-syslog-drain-release
                bosh create-release
                bosh upload-release --rebase
            popd
  - task: deploy-cf-syslog-drain
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: cf-syslog-drain-release
      outputs:
      - name: updated-deployments-loggregator
      params:
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            ss_dir="$PWD/cf-syslog-drain-release"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"
            bbl_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"

            bosh -n -d cf-syslog-drain deploy \
              --vars-store "$deployment_dir/cf-syslog-drain-vars.yml" \
              --ops-file "$bbl_dir/ops-files/cf-syslog-drain/coconut.yml" \
              --ops-file "$bbl_dir/ops-files/cf-syslog-drain/datadog-agent.yml" \
              --vars-file "$bbl_dir/deployment-vars.yml" \
              -v "system_domain=coconut.cf-app.com" \
              "$ss_dir/manifests/cf-syslog-drain.yml"

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut-bbl/cf-syslog-drain-vars.yml
        COMMIT_MESSAGE: "Update cf-syslog-drain vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

- name: promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: cf-syslog-drain-release
      trigger: true
      passed: ["cf-syslog-drain-deploy", "cf-syslog-drain-standalone-deploy"]
    - get: release-elect
      resource: cf-syslog-drain-release-release-elect
    - get: loggregator-ci
  - put: cf-syslog-drain-release-release-elect
    params:
      repository: develop
