groups:
- name: main
  jobs:
  - start-pipeline
  - loggregator-latest-deploy
  - loggregator-elect-deploy
  - loggregator-latest-v2-deploy
  - loggregator-elect-v2-deploy
  - setup
  - smoke-tests
  - start-incidents
  - firehose-reliability
- name: director-lifecycle
  jobs:
  - loggregator-latest-bbl-create
  - loggregator-latest-bbl-destroy
  - loggregator-elect-bbl-create
  - loggregator-elect-bbl-destroy
  - loggregator-latest-v2-bbl-create
  - loggregator-latest-v2-bbl-destroy
  - loggregator-elect-v2-bbl-create
  - loggregator-elect-v2-bbl-destroy

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: loggregator-release-elect
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: release-elect
      private_key: {{loggregator-key}}
      ignore_paths:
        - .final_builds
        - releases

  - name: loggregator-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: develop
      private_key: {{loggregator-key}}
      ignore_paths:
      - .final_builds
      - releases

  - name: loggregator-latest
    type: bosh-io-release
    source:
      repository: cloudfoundry/loggregator

  - name: scalable-syslog-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/scalable-syslog-release

  - name: scalable-syslog-release-elect
    type: git
    source:
      uri: http://github.com/cloudfoundry/scalable-syslog-release.git
      branch: release-elect
      ignore_paths:
      - .final_builds
      - releases

  - name: scalable-syslog-develop
    type: git
    source:
      uri: http://github.com/cloudfoundry/scalable-syslog-release.git
      branch: develop
      ignore_paths:
      - .final_builds
      - releases

  - name: scalable-syslog-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: scalable-syslog-release
      access_token: {{access-token}}

  - name: consul-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/consul-release

  - name: deployments-loggregator
    type: git
    source: &deployments_loggregator
      uri: git@github.com:cloudfoundry/deployments-loggregator.git
      branch: master
      private_key: {{deployments-loggregator-key}}

  - name: deployments-loggregator-with-changes
    type: git
    source: *deployments_loggregator

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: develop

  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: v3.1

  # cf-deployment-concourse-tasks v3.1 has an issue where it fails to update
  # the load balancers on GCP. This is a temproary work around for the v2
  # testing.
  - name: cf-deployment-concourse-tasks-v2
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: v3.13

  - name: loggregator-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/loggregator-ci

  - name: pipeline-lock
    type: pool
    source:
      uri: git@github.com:cloudfoundry/loggregator-locks.git
      branch: master
      pool: release-elect-regression
      private_key: {{cf-loggregator-oauth-bot-key}}

  - name: 10m
    type: time
    source: {interval: 10m}

  - name: 5m
    type: time
    source: {interval: 5m}

  - name: daily
    type: time
    source:
      start: 8:00 PM
      stop: 9:00 PM
      location: America/Denver

  - name: every-morning
    type: time
    source:
      start: 8:00 AM
      stop: 9:00 AM
      location: America/Denver

  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack-bot-url}}

jobs:
- name: loggregator-elect-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/science/loggregator-elect
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-elect-bbl
      LB_DOMAIN: loggregator-elect.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-elect-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/science/loggregator-elect
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-latest-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/science/loggregator-latest
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-latest-bbl
      LB_DOMAIN: loggregator-latest.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-latest-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/science/loggregator-latest
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-elect-v2-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    resource: cf-deployment-concourse-tasks-v2
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/science/loggregator-elect-v2
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-elect-v2-bbl
      LB_DOMAIN: loggregator-elect-v2.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-elect-v2-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    resource: cf-deployment-concourse-tasks-v2
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/science/loggregator-elect-v2
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-latest-v2-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    resource: cf-deployment-concourse-tasks-v2
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/science/loggregator-latest-v2
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-latest-v2-bbl
      LB_DOMAIN: loggregator-latest-v2.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-latest-v2-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    resource: cf-deployment-concourse-tasks-v2
  - get: bbl-state
    resource: deployments-loggregator
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/science/loggregator-latest-v2
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: start-pipeline
  serial: true
  plan:
    - get: daily
      trigger: true
    - get: pipeline-lock
    - put: pipeline-lock
      params:
        claim: pipeline

- name: loggregator-elect-deploy
  serial: true
  serial_groups: ["loggregator-elect"]
  plan:
    - aggregate:
      - get: pipeline-lock
        passed: ["start-pipeline"]
        trigger: true
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: release
        resource: loggregator-release-elect
      - get: vars-store
        resource: deployments-loggregator
      - get: vars-files
        resource: deployments-loggregator
      - get: consul-release
      - get: scalable-syslog-release-elect
    - do:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-elect
      - task: copy-ops-files
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: ubuntu }
          inputs:
          - name: bbl-state
          - name: cf-deployment
          outputs:
          - name: ops-files
          run:
            path: /bin/bash
            args:
            - "-c"
            - |
              #!/bin/bash
              set -ex

              cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
              cp cf-deployment/operations/tcp-routing-gcp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-rlp.yml ops-files/
              cp bbl-state/gcp/science/loggregator-elect/ops-files/*.yml ops-files/

      - task: cf-deploy
        file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-elect
          SYSTEM_DOMAIN: loggregator-elect.cf-app.com
          VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
          VARS_FILES: "gcp/science/loggregator-elect/datadog-vars.yml gcp/science/loggregator-elect/turbulence-vars.yml"
          OPS_FILES: "clients.yml use-4-azs-for-router.yml tcp-routing-gcp.yml enable-rlp.yml metron-health.yml turbulence-cf.yml"
      - task: deploy-scalable-syslog
        config:
          image_resource:
            type: docker-image
            source:
              repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          platform: linux
          inputs:
          - name: scalable-syslog-release-elect
          - name: consul-release
          - name: updated-vars-store
          outputs:
          - name: updated-deployments-loggregator
          params:
          run:
            path: bash
            args:
              - -c
              - |
                #!/bin/bash
                set -eux

                pushd updated-vars-store/gcp/science/loggregator-elect
                  export BOSH_CLIENT=`bbl director-username`
                  export BOSH_CLIENT_SECRET=`bbl director-password`
                  export BOSH_CA_CERT=`bbl director-ca-cert`
                  export BOSH_ENVIRONMENT=`bbl director-address`
                popd

                for release in $(find consul-release -name '*.tgz'); do
                  bosh upload-release $release
                done

                pushd scalable-syslog-release-elect
                  bosh create-release --force
                  bosh upload-release --rebase
                popd

                ss_dir="$PWD/scalable-syslog-release-elect"
                bbl_dir="updated-vars-store/gcp/science/loggregator-elect"

                bosh -n -d scalablesyslog deploy \
                  --vars-store "$bbl_dir/scalablesyslog-vars.yml" \
                  --ops-file "$ss_dir/manifests/cf-deployment-ops.yml" \
                  --ops-file "$bbl_dir/ops-files/allow-insecure-syslog-drains.yml" \
                  --ops-file "$bbl_dir/ops-files/turbulence-scalable-syslog.yml" \
                  --vars-file "$bbl_dir/deployment-vars.yml" \
                  --vars-file "$bbl_dir/turbulence-vars.yml" \
                  -v "system_domain=loggregator-elect.cf-app.com" \
                  "$ss_dir/manifests/scalable-syslog.yml"

                pushd updated-vars-store
                  git config user.email "cf-loggregator@pivotal.io"
                  git config user.name "Loggregator CI"
                  git add . --all
                  git commit -m "Updated scalable syslog deployment vars

                  [ci-skip]" || true
                popd

                rsync -ac updated-vars-store/ updated-deployments-loggregator
      - put: deployments-loggregator-with-changes
        params:
          repository: updated-deployments-loggregator
          rebase: true
      on_failure: &slack-failure-alert
        put: slack-alert
        params:
          text: |
            The `science` pipeline has failed. Please resolve any issues and ensure the pipeline lock was released. Check it out at:
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: loggregator-elect-v2-deploy
  serial: true
  serial_groups: ["loggregator-elect-v2"]
  plan:
    - aggregate:
      - get: pipeline-lock
        passed: ["start-pipeline"]
        trigger: true
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
        resource: cf-deployment-concourse-tasks-v2
      - get: release
        resource: loggregator-release-elect
      - get: vars-store
        resource: deployments-loggregator
      - get: vars-files
        resource: deployments-loggregator
      - get: consul-release
      - get: scalable-syslog-release-elect
    - do:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-elect-v2
      - task: copy-ops-files
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: ubuntu }
          inputs:
          - name: bbl-state
          - name: cf-deployment
          outputs:
          - name: ops-files
          run:
            path: /bin/bash
            args:
            - "-c"
            - |
              #!/bin/bash
              set -ex

              cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
              cp cf-deployment/operations/tcp-routing-gcp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-rlp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-loggregator-v2-diego-cell.yml ops-files/
              cp bbl-state/gcp/science/loggregator-elect-v2/ops-files/*.yml ops-files/

      - task: cf-deploy
        file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-elect-v2
          SYSTEM_DOMAIN: loggregator-elect-v2.cf-app.com
          VARS_STORE_FILE: gcp/science/loggregator-elect-v2/deployment-vars.yml
          OPS_FILES: "clients.yml use-4-azs-for-router.yml tcp-routing-gcp.yml enable-rlp.yml metron-health.yml enable-loggregator-v2-diego-cell.yml"
      - task: deploy-scalable-syslog
        config:
          image_resource:
            type: docker-image
            source:
              repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          platform: linux
          inputs:
          - name: scalable-syslog-release-elect
          - name: consul-release
          - name: updated-vars-store
          outputs:
          - name: updated-deployments-loggregator
          params:
          run:
            path: bash
            args:
              - -c
              - |
                #!/bin/bash
                set -eux

                pushd updated-vars-store/gcp/science/loggregator-elect-v2
                  export BOSH_CLIENT=`bbl director-username`
                  export BOSH_CLIENT_SECRET=`bbl director-password`
                  export BOSH_CA_CERT=`bbl director-ca-cert`
                  export BOSH_ENVIRONMENT=`bbl director-address`
                popd

                for release in $(find consul-release -name '*.tgz'); do
                  bosh upload-release $release
                done

                pushd scalable-syslog-release-elect
                  bosh create-release --force
                  bosh upload-release --rebase
                popd

                ss_dir="$PWD/scalable-syslog-release-elect"
                bbl_dir="updated-vars-store/gcp/science/loggregator-elect-v2"

                bosh -n -d scalablesyslog deploy \
                  --vars-store "$bbl_dir/scalablesyslog-vars.yml" \
                  --ops-file "$ss_dir/manifests/cf-deployment-ops.yml" \
                  --ops-file "$bbl_dir/ops-files/allow-insecure-syslog-drains.yml" \
                  --vars-file "$bbl_dir/deployment-vars.yml" \
                  -v "system_domain=loggregator-elect-v2.cf-app.com" \
                  "$ss_dir/manifests/scalable-syslog.yml"

                pushd updated-vars-store
                  git config user.email "cf-loggregator@pivotal.io"
                  git config user.name "Loggregator CI"
                  git add . --all
                  git commit -m "Updated scalable syslog deployment vars

                  [ci-skip]" || true
                popd

                rsync -ac updated-vars-store/ updated-deployments-loggregator
      - put: deployments-loggregator-with-changes
        params:
          repository: updated-deployments-loggregator
          rebase: true
      on_failure: &slack-failure-alert
        put: slack-alert
        params:
          text: |
            The `science` pipeline has failed. Please resolve any issues and ensure the pipeline lock was released. Check it out at:
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: loggregator-latest-deploy
  serial: true
  serial_groups: ["loggregator-latest"]
  plan:
    - aggregate:
      - get: pipeline-lock
        passed: ["start-pipeline"]
        trigger: true
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: vars-store
        resource: deployments-loggregator
      - get: release
        resource: loggregator-latest
      - get: vars-files
        resource: deployments-loggregator
      - get: consul-release
      - get: scalable-syslog-develop
      - get: scalable-syslog-github-release
    - do:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-latest
      - task: copy-ops-files
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: ubuntu }
          inputs:
          - name: bbl-state
          - name: cf-deployment
          - name: release
          outputs:
          - name: ops-files
          run:
            path: /bin/bash
            args:
            - "-c"
            - |
              #!/bin/bash
              set -ex

              cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
              cp cf-deployment/operations/tcp-routing-gcp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-rlp.yml ops-files/
              cp bbl-state/gcp/science/loggregator-latest/ops-files/*.yml ops-files/

              version=$(cat release/version)
              sha=$(cat release/sha1)

              cat <<EOT >> ops-files/loggregator-version.yml
              - type: replace
                path: /releases/name=loggregator
                value:
                  name: loggregator
                  url: https://bosh.io/d/github.com/cloudfoundry/loggregator?v=$version
                  version: "$version"
                  sha1: "$sha"
              EOT
      - task: cf-deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-latest
          SYSTEM_DOMAIN: loggregator-latest.cf-app.com
          VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
          VARS_FILES: "gcp/science/loggregator-latest/datadog-vars.yml gcp/science/loggregator-latest/turbulence-vars.yml"
          OPS_FILES: "clients.yml use-4-azs-for-router.yml loggregator-version.yml tcp-routing-gcp.yml enable-rlp.yml metron-health.yml turbulence-cf.yml"
      - task: deploy-scalable-syslog
        config:
          image_resource:
            type: docker-image
            source:
              repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          platform: linux
          inputs:
          - name: scalable-syslog-github-release
          - name: scalable-syslog-develop
          - name: consul-release
          - name: updated-vars-store
          outputs:
          - name: updated-deployments-loggregator
          params:
          run:
            path: bash
            args:
              - -c
              - |
                #!/bin/bash
                set -eux

                pushd updated-vars-store/gcp/science/loggregator-latest
                  export BOSH_CLIENT=`bbl director-username`
                  export BOSH_CLIENT_SECRET=`bbl director-password`
                  export BOSH_CA_CERT=`bbl director-ca-cert`
                  export BOSH_ENVIRONMENT=`bbl director-address`
                popd

                for release in $(find consul-release -name '*.tgz'); do
                  bosh upload-release $release
                done

                pushd scalable-syslog-github-release
                  bosh upload-release *.tgz
                popd

                pushd scalable-syslog-develop
                  tag=$(cat ../scalable-syslog-github-release/tag)
                  git checkout $tag
                popd

                ss_dir="$PWD/scalable-syslog-develop"
                bbl_dir="updated-vars-store/gcp/science/loggregator-latest"

                bosh -n -d scalablesyslog deploy \
                  --vars-store "$bbl_dir/scalablesyslog-vars.yml" \
                  --ops-file "$ss_dir/manifests/cf-deployment-ops.yml" \
                  --ops-file "$bbl_dir/ops-files/allow-insecure-syslog-drains.yml" \
                  --ops-file "$bbl_dir/ops-files/turbulence-scalable-syslog.yml" \
                  --vars-file "$bbl_dir/deployment-vars.yml" \
                  --vars-file "$bbl_dir/turbulence-vars.yml" \
                  -v "system_domain=loggregator-latest.cf-app.com" \
                  "$ss_dir/manifests/scalable-syslog.yml"

                pushd updated-vars-store
                  git config user.email "cf-loggregator@pivotal.io"
                  git config user.name "Loggregator CI"
                  git add . --all
                  git commit -m "Updated scalable syslog deployment vars

                  [ci-skip]" || true
                popd

                rsync -ac updated-vars-store/ updated-deployments-loggregator
      - put: deployments-loggregator-with-changes
        params:
          repository: updated-deployments-loggregator
          rebase: true
      on_failure: *slack-failure-alert

- name: loggregator-latest-v2-deploy
  serial: true
  serial_groups: ["loggregator-latest-v2"]
  plan:
    - aggregate:
      - get: pipeline-lock
        passed: ["start-pipeline"]
        trigger: true
      - get: bbl-state
        resource: deployments-loggregator
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
        resource: cf-deployment-concourse-tasks-v2
      - get: vars-store
        resource: deployments-loggregator
      - get: release
        resource: loggregator-latest
      - get: vars-files
        resource: deployments-loggregator
      - get: consul-release
      - get: scalable-syslog-develop
      - get: scalable-syslog-github-release
    - do:
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-latest-v2
      - task: copy-ops-files
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: ubuntu }
          inputs:
          - name: bbl-state
          - name: cf-deployment
          - name: release
          outputs:
          - name: ops-files
          run:
            path: /bin/bash
            args:
            - "-c"
            - |
              #!/bin/bash
              set -ex

              cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
              cp cf-deployment/operations/tcp-routing-gcp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-rlp.yml ops-files/
              cp cf-deployment/operations/experimental/enable-loggregator-v2-diego-cell.yml ops-files/
              cp bbl-state/gcp/science/loggregator-latest-v2/ops-files/*.yml ops-files/

              version=$(cat release/version)
              sha=$(cat release/sha1)

              cat <<EOT >> ops-files/loggregator-version.yml
              - type: replace
                path: /releases/name=loggregator
                value:
                  name: loggregator
                  url: https://bosh.io/d/github.com/cloudfoundry/loggregator?v=$version
                  version: "$version"
                  sha1: "$sha"
              EOT
      - task: cf-deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        params:
          BBL_STATE_DIR: gcp/science/loggregator-latest-v2
          SYSTEM_DOMAIN: loggregator-latest-v2.cf-app.com
          VARS_STORE_FILE: gcp/science/loggregator-latest-v2/deployment-vars.yml
          OPS_FILES: "clients.yml use-4-azs-for-router.yml loggregator-version.yml tcp-routing-gcp.yml enable-rlp.yml metron-health.yml enable-loggregator-v2-diego-cell.yml"
      - task: deploy-scalable-syslog
        config:
          image_resource:
            type: docker-image
            source:
              repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          platform: linux
          inputs:
          - name: scalable-syslog-github-release
          - name: scalable-syslog-develop
          - name: consul-release
          - name: updated-vars-store
          outputs:
          - name: updated-deployments-loggregator
          params:
          run:
            path: bash
            args:
              - -c
              - |
                #!/bin/bash
                set -eux

                pushd updated-vars-store/gcp/science/loggregator-latest-v2
                  export BOSH_CLIENT=`bbl director-username`
                  export BOSH_CLIENT_SECRET=`bbl director-password`
                  export BOSH_CA_CERT=`bbl director-ca-cert`
                  export BOSH_ENVIRONMENT=`bbl director-address`
                popd

                for release in $(find consul-release -name '*.tgz'); do
                  bosh upload-release $release
                done

                pushd scalable-syslog-github-release
                  bosh upload-release *.tgz
                popd

                pushd scalable-syslog-develop
                  tag=$(cat ../scalable-syslog-github-release/tag)
                  git checkout $tag
                popd

                ss_dir="$PWD/scalable-syslog-develop"
                bbl_dir="updated-vars-store/gcp/science/loggregator-latest-v2"

                bosh -n -d scalablesyslog deploy \
                  --vars-store "$bbl_dir/scalablesyslog-vars.yml" \
                  --ops-file "$ss_dir/manifests/cf-deployment-ops.yml" \
                  --ops-file "$bbl_dir/ops-files/allow-insecure-syslog-drains.yml" \
                  --vars-file "$bbl_dir/deployment-vars.yml" \
                  -v "system_domain=loggregator-latest-v2.cf-app.com" \
                  "$ss_dir/manifests/scalable-syslog.yml"

                pushd updated-vars-store
                  git config user.email "cf-loggregator@pivotal.io"
                  git config user.name "Loggregator CI"
                  git add . --all
                  git commit -m "Updated scalable syslog deployment vars

                  [ci-skip]" || true
                popd

                rsync -ac updated-vars-store/ updated-deployments-loggregator
      - put: deployments-loggregator-with-changes
        params:
          repository: updated-deployments-loggregator
          rebase: true
      on_failure: *slack-failure-alert


- name: setup
  serial: true
  serial_groups: ["loggregator-elect", "loggregator-latest", "loggregator-elect-v2", "loggregator-latest-v2"]
  plan:
    - aggregate:
      - get: pipeline-lock
        passed: ["loggregator-latest-deploy", "loggregator-elect-deploy", "loggregator-latest-v2-deploy", "loggregator-elect-v2-deploy"]
        trigger: true
      - get: vars-store
        resource: deployments-loggregator-with-changes
      - get: loggregator
        resource: loggregator-develop
      - get: release-elect
        passed:
          - loggregator-elect-deploy
        resource: loggregator-release-elect
      - get: release-latest
        passed:
          - loggregator-latest-deploy
        resource: loggregator-latest
      - get: loggregator-ci
    - do:
      - aggregate:
        - task: setup-loggregator-elect
          file: loggregator-ci/tasks/science/setup-cf.yml
          params:
            SYSTEM_DOMAIN: loggregator-elect.cf-app.com
            VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
            ORG: cf-lamb
            SPACE: development
        - task: setup-loggregator-latest
          file: loggregator-ci/tasks/science/setup-cf.yml
          params:
            SYSTEM_DOMAIN: loggregator-latest.cf-app.com
            VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
            ORG: cf-lamb
            SPACE: development
        - task: setup-loggregator-elect-v2
          file: loggregator-ci/tasks/science/setup-cf.yml
          params:
            SYSTEM_DOMAIN: loggregator-elect-v2.cf-app.com
            VARS_STORE_FILE: gcp/science/loggregator-elect-v2/deployment-vars.yml
            ORG: cf-lamb
            SPACE: development
        - task: setup-loggregator-latest-v2
          file: loggregator-ci/tasks/science/setup-cf.yml
          params:
            SYSTEM_DOMAIN: loggregator-latest-v2.cf-app.com
            VARS_STORE_FILE: gcp/science/loggregator-latest-v2/deployment-vars.yml
            ORG: cf-lamb
            SPACE: development
        - task: setup-event
          file: loggregator-ci/tasks/science/setup-datadog-event.yml
          params:
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            DATADOG_APP_KEY: {{datadog-dev-app-key}}
            LATEST_SYSTEM_DOMAIN: loggregator-latest.cf-app.com
            ELECT_SYSTEM_DOMAIN: loggregator-elect.cf-app.com
      - put: pipeline-lock
        params:
          release: pipeline-lock
      timeout: 5m
      on_failure: *slack-failure-alert

- name: smoke-tests
  serial: true
  serial_groups: ["locking"]
  plan:
    - get: pipeline-lock
    - put: pipeline-lock
      params:
        claim: "pipeline"
    - aggregate:
      - get: scalable-syslog-release
      - get: vars-store
        resource: deployments-loggregator-with-changes
      - get: release-elect
        resource: loggregator-release-elect
        passed: ["setup"]
      - get: release-latest
        resource: loggregator-latest
        passed: ["setup"]
      - get: loggregator-ci
    - get: 5m
      trigger: true
    - aggregate:
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/base
            inputs:
              - name: release-elect
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cd release-elect
                git rev-parse HEAD > ../release-info/version
        - task: loggregator-elect
          file: loggregator-ci/tasks/science/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-elect.cf-app.com
            USERNAME: admin
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
            VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
            VERSION_TAG: elect
      - task: http-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: loggregator-elect.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-elect.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "https"
          JOB_NAME: "https-teardown"
          TEARDOWN: false
          VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
        timeout: 15m
      - task: tcp-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: tcp.loggregator-elect.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-elect.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "syslog"
          JOB_NAME: "syslog-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
        timeout: 15m
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/base
            inputs:
              - name: release-latest
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cp release-latest/version release-info/version
        - task: loggregator-latest
          file: loggregator-ci/tasks/science/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-latest.cf-app.com
            USERNAME: admin
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
            VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
            VERSION_TAG: latest
      - task: http-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: loggregator-latest.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-latest.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "https"
          JOB_NAME: "https-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
        timeout: 15m
      - task: tcp-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: tcp.loggregator-latest.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-latest.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "syslog"
          JOB_NAME: "syslog-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
        timeout: 15m
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/base
            inputs:
              - name: release-elect
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cd release-elect
                git rev-parse HEAD > ../release-info/version
        - task: loggregator-elect
          file: loggregator-ci/tasks/science/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-elect-v2.cf-app.com
            USERNAME: admin
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
            VARS_STORE_FILE: gcp/science/loggregator-elect-v2/deployment-vars.yml
            VERSION_TAG: elect
      - task: http-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: loggregator-elect-v2.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-elect-v2.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "https"
          JOB_NAME: "https-teardown"
          TEARDOWN: false
          VARS_STORE_FILE: gcp/science/loggregator-elect-v2/deployment-vars.yml
        timeout: 15m
      - task: tcp-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: tcp.loggregator-elect-v2.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-elect-v2.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "syslog"
          JOB_NAME: "syslog-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-elect-v2/deployment-vars.yml
        timeout: 15m
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/base
            inputs:
              - name: release-latest
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cp release-latest/version release-info/version
        - task: loggregator-latest
          file: loggregator-ci/tasks/science/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-latest-v2.cf-app.com
            USERNAME: admin
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
            VARS_STORE_FILE: gcp/science/loggregator-latest-v2/deployment-vars.yml
            VERSION_TAG: latest
      - task: http-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: loggregator-latest-v2.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-latest-v2.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "https"
          JOB_NAME: "https-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-latest-v2/deployment-vars.yml
        timeout: 15m
      - task: tcp-drain
        file: loggregator-ci/tasks/scalable-syslog-smoke-test-with-vars.yml
        params:
          CF_ORG: cf-lamb
          CF_SPACE: development
          CF_APP_DOMAIN: tcp.loggregator-latest-v2.cf-app.com
          CF_SYSTEM_DOMAIN: loggregator-latest-v2.cf-app.com
          CF_USERNAME: admin
          DATADOG_API_KEY: {{datadog-loggregator-api-key}}
          DRAIN_VERSION: "2.0"
          DRAIN_TYPE: "syslog"
          JOB_NAME: "syslog-teardown"
          VARS_STORE_FILE: gcp/science/loggregator-latest-v2/deployment-vars.yml
        timeout: 15m
      timeout: 10m
      ensure:
        put: pipeline-lock
        params:
          release: pipeline-lock

- name: firehose-reliability
  serial_groups: ["locking"]
  plan:
  - aggregate:
    - get: pipeline-lock
    - put: pipeline-lock
      params:
        claim: "pipeline"
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["setup"]
      params:
        submodules: none
    - get: release-latest
      resource: loggregator-latest
      passed: ["setup"]
      params:
        submodules: none
    - get: loggregator
      resource: loggregator-release-elect
    - get: vars-store
      resource: deployments-loggregator
    - get: loggregator-ci
    - get: 10m
      trigger: true
  - task: get-cf-creds
    config:
    file: loggregator-ci/tasks/get-cf-admin-credentials.yml
    params:
      VARS_STORE_FILE: gcp/science/loggregator-latest/deployment-vars.yml
  - task: loggregator-latest
    file: loggregator-ci/tasks/science/firehose-reliability-test.yml
    params:
      APP_DOMAIN: "loggregator-firehose-reliability.loggregator-latest.cf-app.com"
      APP_NAME: "loggregator-firehose-reliability"
      CF_API: "api.loggregator-latest.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      ORG: cf-lamb
      SPACE: development
      USERNAME: admin
      CLIENT_ID: {{science-firehose-reliability-client-id}}
      CLIENT_SECRET: {{science-firehose-reliability-client-secret}}
      SKIP_CERT_VERIFY: true
    timeout: 10m
  - task: get-cf-creds
    config:
    file: loggregator-ci/tasks/get-cf-admin-credentials.yml
    params:
      VARS_STORE_FILE: gcp/science/loggregator-elect/deployment-vars.yml
  - task: loggregator-elect
    file: loggregator-ci/tasks/science/firehose-reliability-test.yml
    params:
      APP_DOMAIN: "loggregator-firehose-reliability.loggregator-elect.cf-app.com"
      APP_NAME: "loggregator-firehose-reliability"
      CF_API: "api.loggregator-elect.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      ORG: cf-lamb
      SPACE: development
      USERNAME: admin
      CLIENT_ID: {{science-firehose-reliability-client-id}}
      CLIENT_SECRET: {{science-firehose-reliability-client-secret}}
      SKIP_CERT_VERIFY: true
    timeout: 10m
  ensure:
    put: pipeline-lock
    params:
      release: pipeline-lock
  on_failure: *slack-failure-alert

- name: start-incidents
  serial: true
  serial_groups: ["locking"]
  plan:
    - get: pipeline-lock
    - put: pipeline-lock
      params:
        claim: "pipeline"
    - get: every-morning
      trigger: true
    - aggregate:
      - get: vars-store
        resource: deployments-loggregator-with-changes
      - get: release-elect
        resource: loggregator-release-elect
        passed: ["setup"]
      - get: release-latest
        resource: loggregator-latest
        passed: ["setup"]
      - get: loggregator-ci
    - aggregate:
      - task: start-incidents-loggregator-elect
        file: loggregator-ci/tasks/science/schedule-turbulence.yml
        params:
          TURBULENCE_API_URL: https://104.198.199.110:6868
          VARS_FILE_PATH: "gcp/science/loggregator-elect/deployment-vars.yml"
      - task: start-incidents-loggregator-latest
        file: loggregator-ci/tasks/science/schedule-turbulence.yml
        params:
          TURBULENCE_API_URL: https://130.211.157.150:6868
          VARS_FILE_PATH: "gcp/science/loggregator-latest/deployment-vars.yml"
  ensure:
    put: pipeline-lock
    params:
      release: pipeline-lock
  on_failure: *slack-failure-alert
