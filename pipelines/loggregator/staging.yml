groups:
- name: main
  jobs:
  - cf-deploy
  - blackbox-tests
  - firehose-reliability
  - start-incidents
- name: director-lifecycle
  jobs:
  - bbl-create
  - bbl-destroy

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v4.5

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
      - .final_builds
      - releases

- name: loggregator-tools
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-tools

- name: cf-syslog-drain-release-elect
  type: git
  source:
    uri: http://github.com/cloudfoundry/cf-syslog-drain-release.git
    branch: release-elect
    ignore_paths:
    - .final_builds
    - releases

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master

- name: loggregator-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci

- name: 10m
  type: time
  source:
    interval: 10m

- name: 20m
  type: time
  source:
    interval: 20m

- name: 2h
  type: time
  source:
    interval: 2h

- name: daily
  type: time
  source:
    start: 8:00 PM
    stop: 9:00 PM
    location: America/Denver

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

jobs:
- name: cf-deploy
  serial: true
  serial_groups: ["cf-deploy"]
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: loggregator
      resource: loggregator-release-elect
    - get: cf-syslog-drain
      resource: cf-syslog-drain-release-elect
    - get: loggregator-tools
  - task: upload-stemcell
    input_mapping:
      bbl-state: deployments-loggregator
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
  - task: upload-releases
    input_mapping:
      bbl-state: deployments-loggregator
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: loggregator
      - name: cf-syslog-drain
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash

          set -ex

          pushd bbl-state/gcp/staging
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          releases="loggregator cf-syslog-drain"
          for rel in $releases; do
            pushd $rel
              bosh create-release
              bosh upload-release --rebase
            popd
          done
  - task: copy-ops-files
    input_mapping:
      bbl-state: deployments-loggregator
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ubuntu
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -ex

          cp bbl-state/gcp/staging/ops-files/*.yml ops-files/
  - task: cf-deploy
    input_mapping:
      bbl-state: deployments-loggregator
      vars-files: deployments-loggregator
      vars-store: deployments-loggregator
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
      SYSTEM_DOMAIN: staging.loggr.cf-app.com
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
      VARS_FILES: "gcp/staging/turbulence-vars.yml"
      OPS_FILES: "clients.yml turbulence.yml allow-insecure-syslog-drains.yml cf-versions.yml"
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-vars-store
      rebase: true
  - aggregate:
    - task: setup-cf
      input_mapping:
        vars-store: deployments-loggregator
      file: loggregator-ci/tasks/staging/setup-cf.yml
      params:
        SYSTEM_DOMAIN: staging.loggr.cf-app.com
        VARS_STORE_FILE: gcp/staging/deployment-vars.yml
        ORG: cf-lamb
        SPACE: development
    - task: setup-event
      file: loggregator-ci/tasks/staging/setup-datadog-event.yml
      params:
        DATADOG_APP_KEY: {{datadog-dev-app-key}}

- name: blackbox-tests
  serial: true
  serial_groups: ["cf-deploy"]
  plan:
  - aggregate:
    - get: deployments-loggregator-with-changes
    - get: loggregator-tools
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
    - get: loggregator-ci
    - get: 20m
      trigger: true
  - task: get-release-version
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: release-elect
      outputs:
      - name: release-info
      run:
        path: bash
        args:
        - -c
        - |
          #/bin/bash
          set -ex

          cd release-elect
          git rev-parse HEAD > ../release-info/version
  - task: cf-logs
    file: loggregator-ci/tasks/staging/cf-logs-smoke-test.yml
    input_mapping:
      vars-store: deployments-loggregator-with-changes
    params:
      PREFIX: "staging."
      CYCLES: 10000
      DELAY: "2"
      DELAY_UNIT: "us"
      MESSAGE: "FIFTEEN-MINUTE"
      APP_NAME: "floodspinner"
      WAIT: 60
      API_ENDPOINT: api.staging.loggr.cf-app.com
      USERNAME: admin
      DATADOG_API_KEY: {{datadog-dev-api-key}}
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
  - task: http-drain
    file: loggregator-ci/tasks/cf-syslog-drain-smoke-test-with-vars.yml
    input_mapping:
      vars-store: deployments-loggregator-with-changes
    params:
      CF_ORG: cf-lamb
      CF_SPACE: development
      CF_APP_DOMAIN: staging.loggr.cf-app.com
      CF_SYSTEM_DOMAIN: staging.loggr.cf-app.com
      CF_USERNAME: admin
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      DRAIN_VERSION: "2.0"
      DRAIN_TYPE: "https"
      JOB_NAME: "https-teardown"
      TEARDOWN: false
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
    timeout: 20m
  - task: tcp-drain
    file: loggregator-ci/tasks/cf-syslog-drain-smoke-test-with-vars.yml
    input_mapping:
      vars-store: deployments-loggregator-with-changes
    params:
      CF_ORG: cf-lamb
      CF_SPACE: development
      CF_APP_DOMAIN: tcp.staging.loggr.cf-app.com
      CF_SYSTEM_DOMAIN: staging.loggr.cf-app.com
      CF_USERNAME: admin
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      DRAIN_VERSION: "2.0"
      DRAIN_TYPE: "syslog"
      JOB_NAME: "syslog-teardown"
      TEARDOWN: true
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
    timeout: 20m

- name: firehose-reliability
  serial_groups: ["cf-deploy"]
  plan:
  - aggregate:
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
      params:
        submodules: none
    - get: loggregator
      resource: loggregator-release-elect
    - get: vars-store
      resource: deployments-loggregator
    - get: loggregator-ci
    - get: 10m
      trigger: true
  - task: get-cf-creds
    config:
    file: loggregator-ci/tasks/get-cf-admin-credentials.yml
    params:
      VARS_STORE_FILE: gcp/staging/deployment-vars.yml
  - task: loggregator-elect
    file: loggregator-ci/tasks/staging/firehose-reliability-test.yml
    params:
      APP_DOMAIN: "loggregator-firehose-reliability.staging.loggr.cf-app.com"
      APP_NAME: "loggregator-firehose-reliability"
      CF_API: "api.staging.loggr.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      ORG: cf-lamb
      SPACE: development
      USERNAME: admin
      CLIENT_ID: {{staging-firehose-reliability-client-id}}
      CLIENT_SECRET: {{staging-firehose-reliability-client-secret}}
      SKIP_CERT_VERIFY: true
      WORKER_INSTANCE_COUNT: 2
    timeout: 10m

- name: start-incidents
  serial: true
  serial_groups: ["cf-deploy"]
  plan:
  - get: 2h
    trigger: true
  - aggregate:
    - get: vars-store
      resource: deployments-loggregator-with-changes
    - get: release-elect
      resource: loggregator-release-elect
      passed: ["cf-deploy"]
    - get: loggregator-ci
  - aggregate:
    - task: start-incidents
      file: loggregator-ci/tasks/staging/schedule-turbulence.yml
      params:
        TURBULENCE_API_URL: https://35.192.156.252:6868 # Public IP for `turbulence_api` job. Found in GCP console.
        VARS_FILE_PATH: "gcp/staging/deployment-vars.yml"

- name: bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
  - get: deployments-loggregator
  - task: bbl-up
    input_mapping:
      ops-files: deployments-loggregator
      bbl-state: deployments-loggregator
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/staging
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: staging
      LB_DOMAIN: staging.loggr.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - task: delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/staging
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
