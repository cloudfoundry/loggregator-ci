groups:
- name: main
  jobs:
  - cfcr-deploy
  - cf-deploy
  - deploy-datadog-accumulator
  - log-cache-blackbox
  - cfcr-destroy
  - cf-destroy
- name: director-lifecycle
  jobs:
  - bbl-create
  - bbl-destroy

resources:
- name: 10m
  type: time
  source: {interval: 10m}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v6.0

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment

- name: cfcr-compiled-deployment
  type: git
  source:
    uri: https://github.com/starkandwayne/cfcr-compiled-deployment
    branch: master

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop

- name: log-cache-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/log-cache-release
    branch: develop

- name: loggregator
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-release
    branch: release-elect

- name: loggregator-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator-ci

- name: loggregator-tools
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-tools

- name: statsd-injector-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/statsd-injector-release
    branch: master

- name: cf-syslog-drain-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-syslog-drain-release
    branch: release-elect

- name: deployments-loggregator
  type: git
  source:
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: weekday-before-work
  type: time
  source:
    start: 7:00 AM
    stop: 8:00 AM
    location: America/Denver
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: weekday-after-work
  type: time
  source:
    start: 6:00 PM
    stop: 7:00 PM
    location: America/Denver
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: loggregator-agent-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

jobs:
- name: bbl-create
  public: false
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - get: ops-files
    resource: bosh-deployment
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: bbl-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/playground/service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/playground
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: playground
      LB_DOMAIN: playground.loggr.cf-app.com
      OPS_FILES: "local-dns.yml"
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: bbl-destroy
  public: false
  plan:
  - get: cf-deployment-concourse-tasks
  - get: bbl-state
    resource: deployments-loggregator
  - get: loggregator-ci
  - task: delete-deployments
    file: loggregator-ci/tasks/bosh-delete-all-deployments/task.yml
    params:
      BBL_STATE_DIR: gcp/playground
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/playground
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/playground/service-account.key.json
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: cfcr-deploy
  public: false
  serial: true
  plan:
  - get: weekday-before-work
    trigger: true
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: cfcr-compiled-deployment
      trigger: true
    - get: bbl-state
      resource: deployments-loggregator
    - get: vars-store
      resource: deployments-loggregator
    - get: ops-files
      resource: cfcr-compiled-deployment
    - get: vars-files
      resource: deployments-loggregator
  - task: upload-stemcell
    params:
      BBL_STATE_DIR: gcp/playground
      STEMCELL_VERSION: "3541.10"
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          pushd bbl-state/${BBL_STATE_DIR}
            eval "$(bbl print-env)"
          popd
          set -ex
          bosh upload-stemcell \
            https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-trusty-go_agent?v=${STEMCELL_VERSION}
  - task: cfcr-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: cfcr-compiled-deployment
    params:
      BBL_STATE_DIR: gcp/playground
      SYSTEM_DOMAIN: playground.loggr.cf-app.com
      USE_VARS_STORE: false
      MANIFEST_FILE: cfcr.yml

- name: cf-deploy
  public: false
  serial_groups: ["deployment"]
  plan:
  - get: weekday-before-work
    trigger: true
  - aggregate:
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: loggregator
    - get: cf-syslog-drain-release
    - get: statsd-injector-release
    - get: log-cache-release
    - get: loggregator-agent-release
    - get: loggregator-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/playground
  - task: upload-releases
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: loggregator
      - name: statsd-injector-release
      - name: cf-syslog-drain-release
      - name: log-cache-release
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash

          set -ex

          pushd bbl-state/gcp/playground
            eval $(bbl print-env)
            export BOSH_CA_CERT=$(bbl director-ca-cert)
          popd

          releases="loggregator cf-syslog-drain-release statsd-injector-release log-cache-release"
          for rel in $releases; do
            pushd $rel
              bosh create-release
              bosh upload-release --rebase
            popd
          done
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: cf-deployment
      - name: log-cache-release
      - name: loggregator-agent-release
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cp cf-deployment/operations/scale-to-one-az.yml ops-files/
          cp cf-deployment/operations/experimental/use-bosh-dns.yml ops-files/
          cp cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml ops-files/
          cp cf-deployment/operations/use-compiled-releases.yml ops-files/
          cp bbl-state/gcp/playground/ops-files/*.yml ops-files/
          cp log-cache-release/manifests/operations/deploy-in-cf.yml ops-files/add-log-cache.yml
          cp loggregator-agent-release/manifests/operations/cf-deployment-addon.yml ops-files/use-loggregator-agent.yml

          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              version: latest
          - type: replace
            path: /releases/name=diego
            value:
              name: diego
              version: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/version)
              url: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/url)
              sha1: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/sha1)
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          - type: replace
            path: /instance_groups/name=doppler/instances
            value: 2
          - type: replace
            path: /instance_groups/name=log-cache/instances
            value: 6
          EOT
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/playground
      SYSTEM_DOMAIN: playground.loggr.cf-app.com
      VARS_STORE_FILE: gcp/playground/deployment-vars.yml
      OPS_FILES: |
        clients.yml
        scale-to-one-az.yml
        diego.yml
        use-compiled-releases.yml
        add-log-cache.yml
        on-the-fly.yml
        use-bosh-dns.yml
        use-bosh-dns-for-containers.yml
        use-loggregator-agent.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      SYSTEM_DOMAIN: playground.loggr.cf-app.com
      VARS_STORE_FILE: gcp/playground/deployment-vars.yml
  - task: create-blackbox-space
    file: loggregator-ci/tasks/create-org-and-space/task.yml
    input_mapping:
      vars-store: bbl-state
    params:
      VARS_STORE_FILE: gcp/playground/deployment-vars.yml
      ORG: system
      SPACE: blackbox-testing
      SYSTEM_DOMAIN: playground.loggr.cf-app.com
  - task: create-accumulators-space
    file: loggregator-ci/tasks/create-org-and-space/task.yml
    input_mapping:
      vars-store: bbl-state
    params:
      VARS_STORE_FILE: gcp/playground/deployment-vars.yml
      ORG: system
      SPACE: accumulators
      SYSTEM_DOMAIN: playground.loggr.cf-app.com
  - put: deployments-loggregator
    params:
      repository: updated-vars-store
      rebase: true
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/playground

- name: cfcr-destroy
  serial_groups: ["deployment"]
  public: false
  plan:
  - get: weekday-after-work
    trigger: true
  - aggregate:
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment-concourse-tasks
  - aggregate:
    - task: cfcr-deployment-destroy
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/playground
        DEPLOYMENT_NAME: cfcr

- name: cf-destroy
  serial_groups: ["deployment"]
  public: false
  plan:
  - get: weekday-after-work
    trigger: true
  - aggregate:
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment-concourse-tasks
  - aggregate:
    - task: cf-deployment-destroy
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/playground
        DEPLOYMENT_NAME: cf
    - task: cf-syslog-drain-destroy
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/playground
        DEPLOYMENT_NAME: cf-syslog-drain

- name: deploy-datadog-accumulator
  public: false
  serial: true
  plan:
  - aggregate:
    - get: loggregator-tools
    - get: loggregator-ci
  - task: deploy-datadog-accumulator
    file: loggregator-ci/tasks/datadog-accumulator/task.yml
    params:
      APP_NAME: "datadog-accumulator"
      SYSTEM_DOMAIN: "playground.loggr.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      DATADOG_TAGS: accumulator-playground
      ORG: system
      SPACE: accumulators
      SKIP_SSL_VALIDATION: true
      USERNAME: {{playground-username}}
      PASSWORD: {{playground-password}}
      LOG_CACHE_HTTP_ADDR: http://log-cache.playground.loggr.cf-app.com
      LOG_CACHE_GROUP_NAME: playground-datadog-accumulator
      UAA_CLIENT: {{playground-uaa-client}}
      UAA_CLIENT_SECRET: {{playground-uaa-client-secret}}

- name: log-cache-blackbox
  public: false
  serial: true
  plan:
  - aggregate:
    - get: loggregator-tools
    - get: loggregator-ci
    - get: 10m
      trigger: true
  - task: log-cache-blackbox-tests
    file: loggregator-ci/tasks/log-cache-blackbox/task.yml
    params:
      APP_ADDR: "log-cache-blackbox.playground.loggr.cf-app.com"
      APP_NAME: "log-cache-blackbox"
      SYSTEM_DOMAIN: "playground.loggr.cf-app.com"
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      LOG_CACHE_URL: http://log-cache.playground.loggr.cf-app.com
      ORG: system
      SPACE: blackbox-testing
      SKIP_SSL_VALIDATION: true
      USERNAME: {{playground-username}}
      PASSWORD: {{playground-password}}
      UAA_CLIENT: {{playground-uaa-client}}
      UAA_CLIENT_SECRET: {{playground-uaa-client-secret}}
