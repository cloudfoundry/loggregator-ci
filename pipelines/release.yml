resources:
- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci.git
    private_key: {{loggregator-key}}

- name: loggregator-develop
  type: git
  source: &loggregator_develop
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-master
  type: git
  source:
    disable_ci_skip: true
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: master
    private_key: {{loggregator-key}}

- name: loggregator-backport
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: &backport-branch v89.x
    private_key: {{loggregator-key}}

- name: loggregator-final-release-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-final-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: master
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-final-release-backport
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: *backport-branch
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: loggregator-release
    access_token: {{access-token}}
    drafts: true

- name: cf-release-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-syslog-drain-release-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-final-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-final-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: cf-syslog-drain-release
    access_token: {{access-token}}
    drafts: true

- name: bosh-hm-forwarder-version
  type: semver
  source:
    initial_version: 1.0.0
    bucket: bosh-hm-forwarder-release-blobs
    key: version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: bosh-hm-forwarder-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-hm-forwarder-release
    branch: master
    private_key: {{bosh-hm-forwarder-key}}

- name: bosh-hm-forwarder-final-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-hm-forwarder-release
    branch: master
    private_key: {{bosh-hm-forwarder-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: bosh-hm-forwarder-release-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-hm-forwarder-release
    access_token: {{access-token}}
    drafts: true

- name: statsd-injector-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector-final-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: statsd-injector-release-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: statsd-injector-release
    access_token: {{access-token}}
    drafts: true

- name: loggregator-capacity-planning-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-capacity-planning-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-bench-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-bench-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: ouroboros-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/ouroboros-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: reference-nozzle-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/reference-nozzle-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-drain-cli
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/cf-drain-cli
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-drain-cli-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: cf-drain-cli
    access_token: {{access-token}}
    drafts: true

jobs:
- name: bump-golang
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-develop
    - get: loggregator-capacity-planning-release
    - get: loggregator-bench-release
    - get: cf-syslog-drain-release-develop
    - get: statsd-injector-release
    - get: ouroboros-release
    - get: bosh-hm-forwarder-release
    - get: reference-nozzle-release
  - aggregate:
    - do:
      - task: bump-loggregator-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: loggregator-develop
        output_mapping:
          updated-release-repo: updated-loggregator-release
        params:
          VERSION: &golang-version 1.9.2
          INCLUDE_WINDOWS: true
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: loggregator-release-blobs
      - task: commit-loggregator-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-loggregator-release
        output_mapping:
          committed-repo: committed-loggregator-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: loggregator-develop
        params:
          repository: committed-loggregator-release
          rebase: false
    - do:
      - task: bump-loggregator-capacity-planning-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: loggregator-capacity-planning-release
        output_mapping:
          updated-release-repo: updated-loggregator-capacity-planning-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: loggregator-release-blobs
      - task: commit-loggregator-capacity-planning-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-loggregator-capacity-planning-release
        output_mapping:
          committed-repo: committed-loggregator-capacity-planning-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: loggregator-capacity-planning-release
        params:
          repository: committed-loggregator-capacity-planning-release
          rebase: false
    - do:
      - task: bump-loggregator-bench-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: loggregator-bench-release
        output_mapping:
          updated-release-repo: updated-loggregator-bench-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{loggregator-bench-s3-access-key-id}}
          SECRET_ACCESS_KEY: {{loggregator-bench-s3-secret-access-key}}
          BUCKET_NAME: loggregator-bench-release-blobs
      - task: commit-loggregator-bench-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-loggregator-bench-release
        output_mapping:
          committed-repo: committed-loggregator-bench-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: loggregator-bench-release
        params:
          repository: committed-loggregator-bench-release
          rebase: false
    - do:
      - task: bump-cf-syslog-drain-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: cf-syslog-drain-release-develop
        output_mapping:
          updated-release-repo: updated-cf-syslog-drain-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: cf-syslog-drain-release-blobs
      - task: commit-cf-syslog-drain-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-cf-syslog-drain-release
        output_mapping:
          committed-repo: committed-cf-syslog-drain-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: cf-syslog-drain-release-develop
        params:
          repository: committed-cf-syslog-drain-release
          rebase: false
    - do:
      - task: bump-statsd-injector-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: statsd-injector-release
        output_mapping:
          updated-release-repo: updated-statsd-injector-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: statsd-injector-release-blobs
      - task: commit-statsd-injector-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-statsd-injector-release
        output_mapping:
          committed-repo: committed-statsd-injector-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: statsd-injector-release
        params:
          repository: committed-statsd-injector-release
          rebase: false
    - do:
      - task: bump-ouroboros-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: ouroboros-release
        output_mapping:
          updated-release-repo: updated-ouroboros-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: loggregator-release-blobs
      - task: commit-ouroboros-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-ouroboros-release
        output_mapping:
          committed-repo: committed-ouroboros-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: ouroboros-release
        params:
          repository: committed-ouroboros-release
          rebase: false
    - do:
      - task: bump-bosh-hm-forwarder-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: bosh-hm-forwarder-release
        output_mapping:
          updated-release-repo: updated-bosh-hm-forwarder-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: bosh-hm-forwarder-release-blobs
      - task: commit-bosh-hm-forwarder-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-bosh-hm-forwarder-release
        output_mapping:
          committed-repo: committed-bosh-hm-forwarder-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: bosh-hm-forwarder-release
        params:
          repository: committed-bosh-hm-forwarder-release
          rebase: false
    - do:
      - task: bump-reference-nozzle-release
        file: loggregator-ci/tasks/bump-golang/task.yml
        input_mapping:
          release-repo: reference-nozzle-release
        output_mapping:
          updated-release-repo: updated-reference-nozzle-release
        params:
          VERSION: *golang-version
          ACCESS_KEY_ID: {{s3-access-key-id}}
          SECRET_ACCESS_KEY: {{s3-secret-access-key}}
          BUCKET_NAME: reference-nozzle-release-blobs
      - task: commit-reference-nozzle-release
        file: loggregator-ci/tasks/commit/task.yml
        input_mapping:
          release-repo: updated-reference-nozzle-release
        output_mapping:
          committed-repo: committed-reference-nozzle-release
        params:
          COMMIT_MESSAGE: "Bump golang version"
      - put: reference-nozzle-release
        params:
          repository: committed-reference-nozzle-release
          rebase: false

- name: loggregator-create-final-release
  serial: true
  plan:
  - aggregate:
    - get: loggregator-develop
      trigger: false
    - get: loggregator-master
      resource: loggregator-master
  - task: create-final-release
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      params:
        S3_ACCESS_KEY: {{s3-access-key}}
        S3_SECRET_KEY: {{s3-secret-key}}
        SSH_KEY: {{loggregator-key}}
        NEW_VERSION: 101.4
      inputs:
      - name: loggregator-develop
      - name: loggregator-master
      outputs:
      - name: github-release
      - name: create-final-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            # establish version/tag strings
            new_version="$NEW_VERSION"
            tag_name="v$new_version"

            # write out github release files
            echo "Loggregator $new_version" > github-release/name
            echo $tag_name > github-release/tag
            echo "TBD" > github-release/body

            # setup git for committing
            git config --global user.email "cf-loggregator@pivotal.io"
            git config --global user.name "Loggregator CI"

            # setup ssh for reading from github
            eval "$(ssh-agent -s)"
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
            ssh-add <(echo "$SSH_KEY")

            # build final release on master
            pushd loggregator-master
              # this is needed to land commits on master since the commit for
              # master is checked out as a detatched head when the git
              # resource clones it down
              git checkout master

              # setup private.yml used by `create-release --final`
              cat << EOF > config/private.yml
            ---
            blobstore:
              provider: s3
              options:
                bucket_name: loggregator-release-blobs
                access_key_id: $S3_ACCESS_KEY
                secret_access_key: $S3_SECRET_KEY
                credentials_source: static
            EOF

              # create final release and commit artifcats
              bosh -n create-release --sha2 --final \
                --tarball ../github-release/release.tgz \
                --version $new_version
              git add .
              git commit -m "Create final release\


            [ci skip]"

              final_release_abbrev=$(git rev-parse --abbrev-ref HEAD)
              final_release_sha=$(git rev-parse HEAD)
              git tag "$tag_name" $final_release_sha
            popd

            # merge final release artifacts with develop
            pushd loggregator-develop
              # this is needed to land commits on develop since the commit for
              # develop is checked out as a detatched head when the git
              # resource clones it down
              git checkout develop

              git remote add -f master-repo ../loggregator-master
              git pull
              git merge -v -m "Merge final release artifacts\


            [ci skip]" "master-repo/$final_release_abbrev"
            popd

            # copy repos into output
            cp -r loggregator-develop loggregator-master create-final-release
  - put: loggregator-final-release-master
    params:
      repository: create-final-release/loggregator-master
      rebase: false
  - put: loggregator-final-release-develop
    params:
      repository: create-final-release/loggregator-develop
      rebase: false
  - put: loggregator-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: loggregator-create-backport-release
  serial: true
  plan:
  - get: loggregator-backport
    trigger: false
  - task: create-backport
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      params:
        S3_ACCESS_KEY: {{s3-access-key}}
        S3_SECRET_KEY: {{s3-secret-key}}
        SSH_KEY: {{loggregator-key}}
        NEW_VERSION: 89.4
        BRANCH_NAME: *backport-branch
      inputs:
      - name: loggregator-backport
      outputs:
      - name: github-release
      - name: create-final-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            # establish version/tag strings
            new_version="$NEW_VERSION"
            tag_name="v$new_version"
            backport_branch="$BRANCH_NAME"

            # write out github release files
            echo "Loggregator $new_version" > github-release/name
            echo $tag_name > github-release/tag
            echo "TBD" > github-release/body

            # setup git for committing
            git config --global user.email "cf-loggregator@pivotal.io"
            git config --global user.name "Loggregator CI"

            # setup ssh for reading from github
            eval "$(ssh-agent -s)"
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
            ssh-add <(echo "$SSH_KEY")

            # build final release on backport branchd
            pushd loggregator-backport
              git checkout "$backport_branch"

              # setup private.yml used by `create-release --final`
              cat << EOF > config/private.yml
            ---
            blobstore:
              provider: s3
              options:
                bucket_name: loggregator-release-blobs
                access_key_id: $S3_ACCESS_KEY
                secret_access_key: $S3_SECRET_KEY
                credentials_source: static
            EOF

              # create final release and commit artifcats
              bosh -n create-release --sha2 --final \
                --tarball ../github-release/release.tgz \
                --version $new_version
              git add .
              git commit -m "Create final release"

              final_release_abbrev=$(git rev-parse --abbrev-ref HEAD)
              final_release_sha=$(git rev-parse HEAD)
              git tag "$tag_name" $final_release_sha
            popd

            # copy repos into output
            cp -r loggregator-backport create-final-release
  - put: loggregator-final-release-backport
    params:
      repository: create-final-release/loggregator-backport
      rebase: false
  - put: loggregator-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: loggregator-bump-cf-release
  plan:
    - get: loggregator-master
      resource: loggregator-final-release-master
      passed: ["loggregator-create-final-release"]
    - get: cf-release
      resource: cf-release-develop
    - task: bump-submodule
      config:
        image_resource:
          type: docker-image
          source:
            repository: loggregator/bosh10
        platform: linux
        inputs:
        - name: loggregator-master
        - name: cf-release
        outputs:
        - name: cf-release-bump
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              pushd loggregator-master
                LOGGREGATOR_SHA=$(git rev-parse HEAD)
              popd

              pushd cf-release/src/loggregator
                echo "Moving Loggregator in cf-release to ${LOGGREGATOR_SHA}"
                git checkout ${LOGGREGATOR_SHA}
                git submodule update --init --recursive
              popd

              pushd cf-release
                echo "Running ./scripts/test"
                ./scripts/test

                echo "Configuring Git"
                git config --global user.email "cf-loggregator@pivotal.io"
                git config --global user.name "Loggregator CI"
                git config --global alias.ci commit

                echo "Bumping loggregator SHA in cf-release"
                echo "New loggregator SHA is ${LOGGREGATOR_SHA}"
                git add src/loggregator

                echo "Commiting with shortlog"
                ./scripts/commit_with_shortlog
              popd

              rsync -ca cf-release/ cf-release-bump/

    - put: cf-release-develop
      params:
        rebase: true
        repository: cf-release-bump

- name: cf-syslog-drain-create-final-release
  serial: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release-develop
    - get: cf-syslog-drain-release-master
  - task: create-final-release
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      params:
        S3_ACCESS_KEY: {{s3-access-key-id}}
        S3_SECRET_KEY: {{s3-secret-access-key}}
        SSH_KEY: {{cf-loggregator-oauth-bot-key}}
        NEW_VERSION: 5.1
      inputs:
      - name: cf-syslog-drain-release-develop
      - name: cf-syslog-drain-release-master
      outputs:
      - name: github-release
      - name: create-final-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            # establish version/tag strings
            new_version="$NEW_VERSION"
            tag_name="v$new_version"

            # write out github release files
            echo "CF Syslog Drain Release $new_version" > github-release/name
            echo $tag_name > github-release/tag
            echo "TBD" > github-release/body

            # setup git for committing
            git config --global user.email "cf-loggregator@pivotal.io"
            git config --global user.name "Loggregator CI"

            # setup ssh for reading from github
            eval "$(ssh-agent -s)"
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
            ssh-add <(echo "$SSH_KEY")

            # build final release on master
            pushd cf-syslog-drain-release-master
              # this is needed to land commits on master since the commit for
              # master is checked out as a detatched head when the git
              # resource clones it down
              git checkout master

              # setup private.yml used by `create-release --final`
              cat << EOF > config/private.yml
            ---
            blobstore:
              provider: s3
              options:
                bucket_name: cf-syslog-drain-release-blobs
                access_key_id: $S3_ACCESS_KEY
                secret_access_key: $S3_SECRET_KEY
                credentials_source: static
            EOF

              # create final release and commit artifcats
              bosh -n create-release --sha2 --final \
                --tarball ../github-release/release.tgz \
                --version $new_version
              git add .
              git commit -m "Create final release\


            [ci skip]"

              final_release_abbrev=$(git rev-parse --abbrev-ref HEAD)
              final_release_sha=$(git rev-parse HEAD)
              git tag "$tag_name" $final_release_sha
            popd

            # merge final release artifacts with develop
            pushd cf-syslog-drain-release-develop
              # this is needed to land commits on develop since the commit for
              # develop is checked out as a detatched head when the git
              # resource clones it down
              git checkout develop

              git remote add -f master-repo ../cf-syslog-drain-release-master
              git pull
              git merge -v -m "Merge final release artifacts\


            [ci skip]" "master-repo/$final_release_abbrev"
            popd

            # copy repos into output
            cp -r cf-syslog-drain-release-develop cf-syslog-drain-release-master create-final-release
  - put: cf-syslog-drain-release-final-master
    params:
      repository: create-final-release/cf-syslog-drain-release-master
      rebase: false
  - put: cf-syslog-drain-release-final-develop
    params:
      repository: create-final-release/cf-syslog-drain-release-develop
      rebase: false
  - put: cf-syslog-drain-release-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: bosh-hm-forwarder-create-final-release
  serial: true
  public: true
  plan:
  - aggregate:
    - get: bosh-hm-forwarder-version
      params:
        bump: patch
    - get: bosh-hm-forwarder-release
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: bosh-hm-forwarder-version
      - name: bosh-hm-forwarder-release
      outputs:
      - name: final-bosh-hm-forwarder-release
      - name: github-release
      params:
        RELEASE: bosh-hm-forwarder-release
        S3_BUCKET: bosh-hm-forwarder-release-blobs
        S3_ACCESS_KEY: {{s3-access-key-id}}
        S3_SECRET_KEY: {{s3-secret-access-key}}
        OUTPUT: final-bosh-hm-forwarder-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -e -x

          new_version=$(cat bosh-hm-forwarder-version/version)
          tag_name="v$new_version"

          # write out github release files
          echo "Bosh HM Forwarder $new_version" > github-release/name
          echo $tag_name > github-release/tag
          echo "TBD" > github-release/body

          pushd $RELEASE
            cat << EOF > config/private.yml
          ---
          blobstore:
            provider: s3
            options:
              bucket_name: $S3_BUCKET
              access_key_id: $S3_ACCESS_KEY
              secret_access_key: $S3_SECRET_KEY
          EOF

            bosh -n create-release --sha2 --final \
              --tarball ../github-release/release.tgz \
              --version "$new_version"
            git config user.email "cf-loggregator@pivotal.io"
            git config user.name "Loggregator CI"
            git add .
            git commit -m "Create final release\


            [ci skip]"
          popd

          cp -r "${RELEASE}/." "${OUTPUT}/"
  - put: bosh-hm-forwarder-version
    params:
      file: bosh-hm-forwarder-version/version
  - put: bosh-hm-forwarder-final-release
    params:
      repository: final-bosh-hm-forwarder-release
      rebase: false
      tag: bosh-hm-forwarder-version/version
      tag_prefix: v
  - put: bosh-hm-forwarder-release-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: statsd-injector-create-final-release
  serial: true
  plan:
  - aggregate:
    - get: statsd-injector-release
  - task: create-final-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: statsd-injector-release
      outputs:
      - name: final-statsd-injector-release
      - name: github-release
      params:
        NEW_VERSION: 1.1.0
        RELEASE: statsd-injector-release
        S3_BUCKET: statsd-injector-release-blobs
        S3_ACCESS_KEY: {{s3-access-key-id}}
        S3_SECRET_KEY: {{s3-secret-access-key}}
        OUTPUT: final-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -e -x

          tag_name="v$NEW_VERSION"
          echo $tag_name > github-release/tag

          # write out github release files
          echo "Statsd Injector $NEW_VERSION" > github-release/name
          echo $tag_name > github-release/tag
          echo "TBD" > github-release/body

          pushd $RELEASE
            cat << EOF > config/private.yml
          ---
          blobstore:
            provider: s3
            options:
              bucket_name: $S3_BUCKET
              access_key_id: $S3_ACCESS_KEY
              secret_access_key: $S3_SECRET_KEY
          EOF

            bosh -n create-release --sha2 --final \
              --tarball ../github-release/release.tgz \
              --version "$NEW_VERSION"
            git config user.email "cf-loggregator@pivotal.io"
            git config user.name "Loggregator CI"
            git add .
            git commit -m "Create final release\


            [ci skip]"
          popd

          cp -r "${RELEASE}/." "${OUTPUT}/"
  - put: statsd-injector-final-release
    params:
      repository: final-statsd-injector-release
      rebase: false
      tag: github-release/tag
  - put: statsd-injector-release-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: cf-drain-cli
  serial: true
  plan:
  - aggregate:
    - get: cf-drain-cli
      trigger: false
  - task: create-binaries
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      params:
        VERSION_MAJOR: 0
        VERSION_MINOR: 2
      inputs:
      - name: cf-drain-cli
      outputs:
      - name: output-repo
      - name: github-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            # establish version/tag strings
            version="{\"Major\":$VERSION_MAJOR,\"Minor\":$VERSION_MINOR}"
            semver="v$VERSION_MAJOR.$VERSION_MINOR"

            # write out github release files
            echo "CF Drain CLI $semver" > github-release/name
            echo $semver> github-release/tag
            echo "TBD" > github-release/body

            # setup go path
            cfdrain=$PWD/cf-drain-cli
            mkdir -p go
            pushd go
              export GOPATH=$PWD
              go get code.cloudfoundry.org/cf-drain-cli
              rm -rf src/code.cloudfoundry.org/cf-drain-cli
              cp -r $cfdrain src/code.cloudfoundry.org/cf-drain-cli
            popd

            # build binaries
            mkdir -p github-release/builds
            output=$PWD/github-release/builds
            pushd $GOPATH/src/code.cloudfoundry.org/cf-drain-cli
              GOOS=linux go build -ldflags "-X main.version=$version" -o $output/cf-drain-cli-linux
              GOOS=darwin go build -ldflags "-X main.version=$version" -o $output/cf-drain-cli-darwin
              GOOS=windows go build -ldflags "-X main.version=$version" -o $output/cf-drain-cli-windows
            popd

            pushd $cfdrain
              # add git tag
              git config --global user.email "cf-loggregator@pivotal.io"
              git config --global user.name "Loggregator CI"
              git tag "$semver"
            popd
            cp -r $cfdrain output-repo/
  - put: cf-drain-cli
    params:
      repository: output-repo/cf-drain-cli
      rebase: false
  - put: cf-drain-cli-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/builds/*
