groups:
- name: all
  jobs:
  - cf-deploy
  - cfar-lats
  - cats
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-deploy
  - service-metrics-tests
  - service-metrics-bump-submodule
  - service-metrics-deploy
  - service-metrics-system-tests
  - service-metrics-promotion
  - service-metrics-master-promotion

  - cf-deploy-loggregator
  - cfar-lats-loggregator
  - cats-loggregator
  - loggregator-deploy
  - loggregator-agent-master-promotion
  - loggregator-agent-tests
  - loggregator-agent-windows-tests
  - loggregator-agent-bump-submodule
  - loggregator-bump-submodule
  - loggregator-master-promotion
  - loggregator-agent-promotion
  - deploy-datadog-nozzle
  - deploy-syslog-telemetry
  - lats
  - loggregator-tests
  - loggregator-promotion

  - cf-syslog-drain-bump-submodule
  - cf-syslog-drain-tests
  - cf-syslog-drain-master-promotion
  - cats-cf-syslog-drain
  - cf-syslog-drain-promotion
  - deploy-on-demand-broker
  - cfar-lats-cf-syslog-drain
  - cf-drain-cli-tests
  - cf-deploy-cf-syslog-drain
  - cf-drain-cli-promotion

- name: cf-syslog-drain
  jobs:
  - cf-syslog-drain-bump-submodule
  - cf-syslog-drain-tests
  - cf-syslog-drain-master-promotion
  - cats-cf-syslog-drain
  - cf-syslog-drain-promotion
  - deploy-on-demand-broker
  - cfar-lats-cf-syslog-drain
  - cf-drain-cli-tests
  - cf-deploy-cf-syslog-drain
  - cf-drain-cli-promotion
- name: loggregator
  jobs:
  - cf-deploy-loggregator
  - cfar-lats-loggregator
  - cats-loggregator
  - loggregator-deploy
  - loggregator-agent-master-promotion
  - loggregator-agent-tests
  - loggregator-agent-windows-tests
  - loggregator-agent-bump-submodule
  - loggregator-bump-submodule
  - loggregator-master-promotion
  - loggregator-agent-promotion
  - deploy-datadog-nozzle
  - deploy-syslog-telemetry
  - lats
  - loggregator-tests
  - loggregator-promotion

- name: director-lifecycle
  jobs:
  - coconut-bbl-up
  - coconut-bbl-destroy
- name: statsd-injector
  jobs:
  - statsd-injector-tests
  - statsd-injector-bump-submodule
- name: noisy-neighbor-nozzle
  jobs:
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-deploy
- name: service-metrics-injector
  jobs:
  - service-metrics-tests
  - service-metrics-bump-submodule
  - service-metrics-deploy
  - service-metrics-system-tests
  - service-metrics-promotion
  - service-metrics-master-promotion

resources:
- name: 5m
  type: time
  source:
    interval: 5m

- name: 10m
  type: time
  source:
    interval: 10m

- name: 20m
  type: time
  source:
    interval: 20m

- name: bosh-bootloader
  type: git
  source:
    uri: https://github.com/loggregator/bosh-bootloader
    branch: master

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment

- name: bumper-tool
  type: git
  source:
    uri: https://github.com/loggregator/bumper

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-acceptance-tests-iso
  type: git
  source:
    branch: logging-iso-tests
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop
    private_key: ((loggregator-key))

- name: cf-deployment-release-candidate
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: release-candidate
    private_key: {{loggregator-key}}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    tag_filter: v7.*

- name: cf-drain-cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-drain-cli
    branch: develop

- name: cf-drain-cli-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-drain-cli
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: cf-syslog-drain-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: ((cf-loggregator-oauth-bot-key))
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))
    disable_ci_skip: true

- name: cf-syslog-drain-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: release-elect
    private_key: ((cf-loggregator-oauth-bot-key))
    ignore_paths:
    - .final_builds
    - releases

- name: cfar-logging-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cfar-logging-acceptance-tests.git

- name: datadog-firehose-nozzle-release
  type: git
  source:
    uri: https://github.com/DataDog/datadog-firehose-nozzle-release.git

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: go-loggregator
  type: git
  source:
    uri: https://github.com/cloudfoundry/go-loggregator
    branch: master

- name: logging-acceptance-tests-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/logging-acceptance-tests-release
    branch: master

- name: logging-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/loggregator/logging-deployment.git

- name: loggregator-agent
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent.git
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))

- name: loggregator-agent-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: release-elect
    private_key: ((cf-loggregator-oauth-bot-key))

- name: loggregator-agent-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))
    disable_ci_skip: true

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: ((loggregator-key))
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: master
    private_key: ((loggregator-key))
    disable_ci_skip: true

- name: loggregator-src
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: master
    private_key: ((loggregator-key))

- name: noisy-neighbor-nozzle
  type: git
  source:
    uri: https://github.com/cloudfoundry/noisy-neighbor-nozzle

- name: on-demand-service-broker-release
  type: git
  source:
    uri: https://github.com/pivotal-cf/on-demand-service-broker-release
    branch: v0.20.0

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry/scalable-syslog
    private_key: ((cf-loggregator-oauth-bot-key))
    branch: master

- name: service-metrics
  type: git
  source:
    uri: https://github.com/cloudfoundry/service-metrics
    branch: master

- name: service-metrics-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/service-metrics-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: service-metrics-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/service-metrics-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    disable_ci_skip: true

- name: service-metrics-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/service-metrics-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: statsd-injector
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

jobs:
###############################################################################
# DIRECTOR LIFECYCLE
###############################################################################
- name: coconut-bbl-up
  public: false
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bosh-bootloader
    - get: bbl-state
      resource: deployments-loggregator
    - get: ops-files
      resource: bosh-deployment
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: bosh-bootloader
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/coconut-bbl/service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/coconut-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: coconut-bbl
      LB_DOMAIN: coconut.cf-app.com
      BBL_CONFIG_DIR: plan-patches/iso-segs-gcp
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: coconut-bbl-destroy
  public: false
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
  - task: delete-deployments
    file: loggregator-ci/tasks/bosh-delete-all-deployments/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      BBL_GCP_SERVICE_ACCOUNT_KEY: gcp/coconut-bbl/service-account.key.json
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

###############################################################################
# LOGGREGATOR
###############################################################################
- name: loggregator-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-src
      trigger: true
    - get: 20m
      trigger: true
  - aggregate:
    - task: run-tests
      timeout: 20m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test -race $(go list ./... | grep -v integration_tests) \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - task: run-integration-tests
      timeout: 20m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test ./integration_tests/... -race \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - do:
      - task: build-windows-test-binary
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: loggregator-src
          outputs:
          - name: binaries
          - name: test-binaries
          run:
            path: bash
            args:
            - -c
            - |
              #!/bin/bash
              set -ex

              ci_root=$PWD
              mkdir -p workspace/src/code.cloudfoundry.org/loggregator
              cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

              function munge {
                echo $1 | tr '/' '_'
              }

              pushd workspace
                export GOOS=windows
                export GOPATH="$PWD"
                export PATH="$GOPATH/bin:$PATH"

                pushd src/code.cloudfoundry.org/loggregator
                  go get -t -d ./...
                  for pkg in $(go list ./agent/...); do
                    go test -c -o $ci_root/test-binaries/$(munge $pkg)_test.exe $pkg &
                  done
                  go build -o $ci_root/binaries/agent.exe code.cloudfoundry.org/loggregator/agent &
                popd
              popd
              wait
      - task: run-windows-tests
        config:
          platform: windows
          inputs:
          - name: binaries
          - name: test-binaries
          run:
            path: powershell
            args:
            - "-command"
            - |
              trap {
                write-error $_
                exit 1
              }

              $env:SKIP_BUILD = "true"
              $env:AGENT_BUILD_PATH = "binaries\agent.exe"

              # Run all test binaries
              Get-ChildItem -Filter test-binaries\*.exe | ForEach {
                &$_.Fullname /s
                if ($LastExitCode -ne 0) {
                  throw "test failed"
                }
              }

- name: loggregator-agent-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: loggregator-agent
    params:
      IMPORT_PATH: code.cloudfoundry.org/loggregator-agent

- name: loggregator-agent-windows-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-agent
      trigger: true
  - task: build-windows-test-binary
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: loggregator-agent
      outputs:
      - name: binaries
      - name: test-binaries
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -ex

          ci_root=$PWD
          mkdir -p workspace/src/code.cloudfoundry.org/loggregator-agent
          cp -r loggregator-agent/. workspace/src/code.cloudfoundry.org/loggregator-agent/

          function munge {
            echo $1 | tr '/' '_'
          }

          pushd workspace
            export GOOS=windows
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"

            pushd src/code.cloudfoundry.org/loggregator-agent/cmd
              go get -t -d ./...
              for pkg in $(go list ./... | grep -vE prom-scraper\|syslog-binding-cache\|udp-forwarder); do
                go test -c -o $ci_root/test-binaries/$(munge $pkg)_test.exe $pkg &
              done
            popd
          popd
          wait
  - task: run-windows-tests
    config:
      platform: windows
      inputs:
      - name: binaries
      - name: test-binaries
      run:
        path: powershell
        args:
        - "-command"
        - |
          trap {
            write-error $_
            exit 1
          }

          $env:SKIP_BUILD = "true"

          # Run all test binaries
          Get-ChildItem -Filter test-binaries\*.exe | ForEach {
            &$_.Fullname /s
            if ($LastExitCode -ne 0) {
              throw "test failed"
            }
          }

- name: loggregator-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-release
      trigger: true
    - get: loggregator-src
      trigger: true
      passed: ["loggregator-tests"]
    - get: go-loggregator
      trigger: true
  - task: update-loggregator
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-release
      source-repo: loggregator-src
    output_mapping:
      bumped-release-repo: bumped-loggregator-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator
  - task: update-go-loggregator
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: bumped-loggregator-release
      source-repo: go-loggregator
    output_mapping:
      bumped-release-repo: bumped-go-loggregator
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/go-loggregator
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-go-loggregator
    output_mapping:
      updated-release-repo: synced-loggregator-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test ~integration
    - task: run-integration-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test integration
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-release
    output_mapping:
      committed-repo: committed-loggregator-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/loggregator
        src/code.cloudfoundry.org/go-loggregator
        packages
  - put: loggregator-release
    params:
      repository: committed-loggregator-release
      rebase: true

- name: loggregator-agent-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent-release
      trigger: true
    - get: loggregator-agent
      trigger: true
      passed: ["loggregator-agent-tests"]
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-agent-release
      source-repo: loggregator-agent
    output_mapping:
      bumped-release-repo: bumped-loggregator-agent-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator-agent
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-agent-release
    output_mapping:
      updated-release-repo: synced-loggregator-agent-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-agent-release
      params:
        SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-agent-release
    output_mapping:
      committed-repo: committed-loggregator-agent-release
    params:
      PATHS: "src/code.cloudfoundry.org/loggregator-agent packages"
  - put: loggregator-agent-release
    params:
      repository: committed-loggregator-agent-release
      rebase: true

- name: loggregator-deploy
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: loggregator-release
      trigger: true
      passed: ["cf-deploy-loggregator"]
    - get: loggregator-agent-release
      trigger: true
      passed: ["loggregator-agent-bump-submodule"]
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: logging-acceptance-tests-release
      trigger: true
    - get: cf-deployment-concourse-tasks
  - task: upload-loggregator-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: loggregator-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
  - task: upload-loggregator-agent-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: loggregator-agent-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
  - task: upload-lats
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: logging-acceptance-tests-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
  - task: deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: loggregator-release
      ops-files: loggregator-release
      bbl-state: deployments-loggregator
      vars-files: deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
      SYSTEM_DOMAIN: ten.loggr.cf-app.com
      MANIFEST_FILE: manifests/loggregator.yml
      OPS_FILES: manifests/operations/exclude-rlp-gateway.yml

  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v3.19.0
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /releases/name=loggregator-agent
            value:
              name: loggregator-agent
              version: latest
          - type: replace
            path: /releases/name=bpm
            value:
              name: bpm
              version: latest
          - type: replace
            path: /variables/name=loggregator_agent/options/ca
            value: /bosh-ten/loggregator/loggregator_ca
          EOT
  - task: lats-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: logging-acceptance-tests-release
      ops-files: ops-files
      bbl-state: deployments-loggregator
      vars-files: deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
      SYSTEM_DOMAIN: ten.loggr.cf-app.com
      MANIFEST_FILE: manifests/lats.yml
      OPS_FILES: on-the-fly.yml
      REGENERATE_CREDENTIALS: true

- name: loggregator-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-release
      trigger: true
      passed: ["lats", "cats-loggregator", "cfar-lats-loggregator"]
    - get: loggregator-release-release-elect
  - put: loggregator-release-release-elect
    params:
      repository: develop

- name: loggregator-agent-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-agent-release
      trigger: true
      passed: ["cats-loggregator", "cfar-lats-loggregator", "lats"]
    - get: loggregator-agent-release-elect
  - put: loggregator-agent-release-elect
    params:
      repository: develop

- name: loggregator-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: 5m
      trigger: true
    - get: loggregator-release-release-elect
      passed: ["loggregator-promotion"]
      trigger: true
    - get: loggregator-agent-release-elect
      passed: ["loggregator-agent-promotion"]
      trigger: true
    - get: loggregator-release-master
    - get: bumper-tool
    - get: loggregator-ci
  - task: bumper
    file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      source: loggregator-release-release-elect
      dest: loggregator-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/loggregator,src/code.cloudfoundry.org/go-loggregator,src/code.cloudfoundry.org/loggregator-agent
  - put: loggregator-release-master
    params:
      repository: merged-dest

- name: loggregator-agent-master-promotion
  serial: true
  plan:
  - aggregate:
    - get: 5m
      trigger: true
    - get: loggregator-agent-release-elect
      passed: ["loggregator-agent-promotion"]
      trigger: true
    - get: loggregator-agent-release-master
    - get: bumper-tool
    - get: loggregator-ci
  - task: bumper
    file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      source: loggregator-agent-release-elect
      dest: loggregator-agent-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/go-loggregator
  - put: loggregator-agent-release-master
    params:
      repository: merged-dest

- name: lats
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: deployments-loggregator
    - get: logging-acceptance-tests-release
      trigger: true
    - get: loggregator-release
      passed: ["loggregator-deploy"]
      trigger: true
    - get: loggregator-agent-release
      passed: ["loggregator-deploy"]
      trigger: true
  - task: run-lats
    file: loggregator-ci/tasks/run-errand/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
      DEPLOYMENT_NAME: lats
      ERRAND: lats
      KEEP_ALIVE: true
    input_mapping:
      bbl-state: deployments-loggregator

- name: cf-deploy-loggregator
  serial: true
  serial_groups:
  - cf-deploy-loggregator
  - bosh-cf-cats-loggregator
  - bosh-cfar-lats-loggregator
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: loggregator-release
      trigger: true
      passed: ["loggregator-bump-submodule"]
    - get: loggregator-agent-release
      trigger: true
      passed: ["loggregator-agent-bump-submodule"]
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: deployments-loggregator
  - aggregate:
    - task: upload-loggregator-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-release
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
    - task: upload-loggregator-agent-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-agent-release
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
  - do:
    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
            tag: v3.19.0
        inputs:
        - name: bbl-state
        - name: cf-deployment
        - name: loggregator-agent-release
        - name: loggregator-release
        - name: deployments-loggregator
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            set -e

            cp cf-deployment/operations/scale-to-one-az.yml ops-files/
            cp cf-deployment/operations/use-compiled-releases.yml ops-files/
            cp cf-deployment/operations/experimental/use-compiled-releases-windows.yml ops-files/
            cp cf-deployment/operations/windows1803-cell.yml ops-files/
            cp cf-deployment/operations/use-latest-windows1803-stemcell.yml ops-files/
            cp cf-deployment/operations/enable-service-discovery.yml ops-files/

            cp loggregator-agent-release/manifests/operations/cf-add-forwarder-agent.yml ops-files/
            cp loggregator-agent-release/manifests/operations/cf-syslog-agent-skip-cert-verify.yml ops-files/
            cp loggregator-agent-release/manifests/operations/cf-deployment-addon.yml ops-files/
            cp deployments-loggregator/gcp/ci-pool/ten/ops-files/clients.yml ops-files/
            cp loggregator-agent-release/manifests/operations/cf-deployment-add-system-metrics-agent.yml ops-files/

            cat <<EOT >> ops-files/on-the-fly.yml
            - type: replace
              path: /releases/name=loggregator
              value:
                name: loggregator
                version: latest
            - type: replace
              path: /releases/name=loggregator-agent
              value:
                name: loggregator-agent
                version: latest
            - type: replace
              path: /update/max_in_flight
              value: 5
            - type: replace
              path: /instance_groups/name=doppler/instances
              value: 2
            - type: replace
              path: /instance_groups/name=adapter/jobs/name=adapter/properties/scalablesyslog?/adapter?/syslog_skip_cert_verify?
              value: true
            EOT
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
    - task: cf-deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
        SYSTEM_DOMAIN: ten.loggr.cf-app.com
        OPS_FILES: |
          scale-to-one-az.yml
          use-compiled-releases.yml
          use-compiled-releases-windows.yml
          windows1803-cell.yml
          use-latest-windows1803-stemcell.yml
          enable-service-discovery.yml
          on-the-fly.yml
          cf-deployment-addon.yml
          cf-add-forwarder-agent.yml
          cf-syslog-agent-skip-cert-verify.yml
          clients.yml
          cf-deployment-add-system-metrics-agent.yml
    - task: enable-feature-flags
      file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
      attempts: 3
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
        SYSTEM_DOMAIN: ten.loggr.cf-app.com
        ENABLED_FEATURE_FLAGS: diego_docker
    - task: create-smoke-test-space
      file: loggregator-ci/tasks/create-org-and-space/task.yml
      params:
        BBL_STATE_DIR: gcp/ci-pool/ten
        ORG: system
        SPACE: smoke-tests
        SYSTEM_DOMAIN: ten.loggr.cf-app.com

- name: deploy-datadog-nozzle
  serial: true
  plan:
  - aggregate:
    - get: datadog-firehose-nozzle-release
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: upload-release
    file: loggregator-ci/tasks/upload-release/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
      CREATE_RELEASE: false
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: datadog-firehose-nozzle-release
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/ten
      DEPLOYMENT_NAME: datadog
      MANIFEST_FILE: templates/datadog-bosh2.yml
      OPS_FILES: gcp/ci-pool/ten/ops-files/datadog.yml
      VARS_FILES: gcp/ci-pool/ten/vars-files/datadog.yml
      VARS_STORE_FILE: null
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release: datadog-firehose-nozzle-release
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      vars-store: deployments-loggregator

- name: deploy-syslog-telemetry
  serial: true
  serial_groups:
  - cf-deploy
  plan:
  - aggregate:
    - get: logging-deployment
    - get: cf-drain-cli
    - get: loggregator-ci
      passed: ["cf-deploy-loggregator"]
      trigger: true
  - aggregate:
    - task: add-syslog-v2-telemetry
      file: logging-deployment/ci/tasks/push-logging-telemetry/task.yml
      params:
        ORG: system
        SPACE: smoke-tests
        SYSTEM_DOMAIN: ten.loggr.cf-app.com
        USERNAME: {{ten-username}}
        PASSWORD: {{ten-password}}
        SKIP_SSL_VALIDATION: true
        APP_PREFIX: syslog-v2-telemetry
        DATADOG_API_KEY: {{datadog-loggregator-api-key}}
    - task: add-syslog-v3-telemetry
      file: logging-deployment/ci/tasks/push-logging-telemetry/task.yml
      params:
        ORG: system
        SPACE: smoke-tests
        SYSTEM_DOMAIN: ten.loggr.cf-app.com
        USERNAME: {{ten-username}}
        PASSWORD: {{ten-password}}
        SKIP_SSL_VALIDATION: true
        APP_PREFIX: syslog-v3-telemetry
        DATADOG_API_KEY: {{datadog-loggregator-api-key}}
        SCHEME_SUFFIX: "-v3"

- name: cats-loggregator
  serial: true
  serial_groups:
  - bosh-cf-cats-loggregator
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: deployments-loggregator
      - get: cf-acceptance-tests
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy-loggregator"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy-loggregator"]
      - get: loggregator-ci
    - task: update-config
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: deployments-loggregator
        integration-configs: deployments-loggregator
      params:
        CATS_INTEGRATION_CONFIG_FILE: gcp/ci-pool/cats-config.json
        BBL_STATE_DIR: gcp/ci-pool/ten
        SYSTEM_DOMAIN: ten.loggr.cf-app.com
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
      params:
        NODES: 9
        CONFIG_FILE_PATH: gcp/ci-pool/cats-config.json

- name: cfar-lats-loggregator
  serial: true
  serial_groups:
  - bosh-cfar-lats-loggregator
  plan:
    - aggregate:
      - get: cfar-logging-acceptance-tests
        trigger: true
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy-loggregator"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy-loggregator"]
      - get: loggregator-ci
      - get: cf-drain-cli
    - task: run-cfar-lats
      file: loggregator-ci/tasks/cfar-lats/task.yml
      params:
        CF_ADMIN_USER: {{ten-username}}
        CF_ADMIN_PASSWORD: {{ten-password}}
        CF_DOMAIN: ten.loggr.cf-app.com
        SKIP_SSL_VALIDATION: true

###############################################################################
# CF SYSLOG DRAIN
###############################################################################
- name: cf-syslog-drain-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: scalable-syslog
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: scalable-syslog
    params:
      IMPORT_PATH: code.cloudfoundry.org/scalable-syslog

- name: cf-drain-cli-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-drain-cli
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: cf-drain-cli
    params:
      IMPORT_PATH: code.cloudfoundry.org/cf-drain-cli

- name: cf-syslog-drain-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: go-loggregator
    - get: cf-syslog-drain-release
      trigger: true
    - get: scalable-syslog
      passed: ["cf-syslog-drain-tests"]
      trigger: true
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: cf-syslog-drain-release
      source-repo: scalable-syslog
    output_mapping:
      bumped-release-repo: updated-cf-syslog-drain-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/scalable-syslog
  - task: update-go-loggregator-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: updated-cf-syslog-drain-release
      source-repo: go-loggregator
    output_mapping:
      bumped-release-repo: bumped-go-loggregator-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/go-loggregator
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-go-loggregator-release
    output_mapping:
      updated-release-repo: synced-cf-syslog-drain-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race code.cloudfoundry.org/scalable-syslog/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-cf-syslog-drain-release
    output_mapping:
      committed-repo: committed-cf-syslog-drain-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/scalable-syslog
        src/code.cloudfoundry.org/go-loggregator
        packages
  - put: cf-syslog-drain-release
    params:
      repository: committed-cf-syslog-drain-release
      rebase: true

- name: cf-syslog-drain-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: cf-syslog-drain-release
      trigger: true
      passed: ["cats-cf-syslog-drain", "cfar-lats-cf-syslog-drain"]
    - get: cf-syslog-drain-release-release-elect
  - put: cf-syslog-drain-release-release-elect
    params:
      repository: develop

- name: cf-syslog-drain-master-promotion
  serial: true
  plan:
  - get: 5m
    trigger: true
  - aggregate:
    - get: cf-syslog-drain-release-release-elect
      passed: ["cf-syslog-drain-promotion"]
      trigger: true
    - get: cf-syslog-drain-release-master
    - get: bumper-tool
    - get: loggregator-ci
  - task: bumper
    file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      source: cf-syslog-drain-release-release-elect
      dest: cf-syslog-drain-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/scalable-syslog
  - put: cf-syslog-drain-release-master
    params:
      repository: merged-dest

- name: cf-drain-cli-promotion
  serial: true
  plan:
  - get: 5m
    trigger: true
  - aggregate:
    - get: cf-drain-cli
      passed: ["cfar-lats-cf-syslog-drain"]
      trigger: true
    - get: cf-drain-cli-master
    - get: bumper-tool
    - get: loggregator-ci
  - task: bumper
    file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      source: cf-drain-cli
      dest: cf-drain-cli-master
    params:
      SOURCE_BRANCH: develop
      DEST_BRANCH: master
  - put: cf-drain-cli-master
    params:
      repository: merged-dest

- name: cf-deploy-cf-syslog-drain
  serial: true
  serial_groups:
  - cf-deploy-cf-syslog-drain
  - bosh-cf-cats-cf-syslog-drain
  - bosh-cfar-lats-cf-syslog-drain
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-syslog-drain-release
      trigger: true
      passed: ["cf-syslog-drain-bump-submodule"]
    - get: cf-drain-cli
      trigger: true
      passed: ["cf-drain-cli-tests"]
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: deployments-loggregator
    - get: service-metrics-release
    - get: on-demand-service-broker-release
      params:
        submodules:
        - src/github.com/pivotal-cf/on-demand-services-sdk
        - src/github.com/pivotal-cf/on-demand-service-broker
        - src/github.com/pivotal-cf/brokerapi
  - task: upload-syslog-drain-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bosh-release-dir: cf-syslog-drain-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
  - task: upload-on-demand-service-broker-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bosh-release-dir: on-demand-service-broker-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
  - task: upload-service-metrics-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bosh-release-dir: service-metrics-release
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5.20.0
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      - name: vars-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          pushd bbl-state/gcp/ci-pool/eight
            eval "$(bbl print-env)"
          popd

          cp cf-deployment/operations/scale-to-one-az.yml ops-files/
          cp cf-deployment/operations/enable-service-discovery.yml ops-files/

          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          - type: replace
            path: /instance_groups/name=adapter/jobs/name=adapter/properties/scalablesyslog?/adapter?/syslog_skip_cert_verify?
            value: true
          EOT
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
      SYSTEM_DOMAIN: eight.loggr.cf-app.com
      OPS_FILES: |
        scale-to-one-az.yml
        on-the-fly.yml
        enable-service-discovery.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
      SYSTEM_DOMAIN: eight.loggr.cf-app.com
      ENABLED_FEATURE_FLAGS: diego_docker

- name: deploy-on-demand-broker
  serial: true
  serial_groups:
  - cf-deploy
  - bosh-cf-cats
  - bosh-cfar-lats
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: cf-syslog-drain-release
      trigger: true
      passed: ["cf-deploy-cf-syslog-drain"]
    - get: cf-drain-cli
      trigger: true
      passed: ["cf-deploy-cf-syslog-drain"]
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: deployments-loggregator
    - get: service-metrics-release
    - get: on-demand-service-broker-release
      params:
        submodules:
        - src/github.com/pivotal-cf/on-demand-services-sdk
        - src/github.com/pivotal-cf/on-demand-service-broker
        - src/github.com/pivotal-cf/brokerapi
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5.20.0
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      - name: vars-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          pushd bbl-state/gcp/ci-pool/eight
            eval "$(bbl print-env)"
          popd

          cp bbl-state/gcp/ci-pool/eight/service-metrics-broker-vars.yml vars-files

          service_metrics_version=$(bosh releases | grep service-metrics | grep -v service-metrics-adapter | head -n1 | awk '{print $2}' | cut -d '*' -f 1)
          cat <<EOT >> vars-files/service-metrics-version.yml
          service-metrics-release-version: $service_metrics_version
          EOT

          odb_version=$(bosh releases | grep on-demand-service-broker | head -n1 | awk '{print $2}' | cut -d '*' -f 1)
          cat <<EOT >> ops-files/service-metrics.yml
          - type: remove
            path: /variables/name=loggregator_ca
          - type: replace
            path: /variables/name=service_metrics/options/ca
            value: /bosh-eight/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/ca
            value: /bosh-eight/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/alternative_names
            value:
              - metron
              - agent
              - logalhost
              - 127.0.0.1
          - type: replace
            path: /releases/name=on-demand-service-broker/version
            value: $odb_version
          EOT

  - task: deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      cf-deployment: service-metrics-release
      ops-files: ops-files
      bbl-state: deployments-loggregator
      vars-files: vars-files
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
      SYSTEM_DOMAIN: eight.loggr.cf-app.com
      MANIFEST_FILE: manifests/sample-service-metrics.yml
      VARS_FILES: |
        service-metrics-broker-vars.yml
        service-metrics-version.yml
      OPS_FILES: |
        service-metrics.yml
  - task: wait-for-service-broker
    timeout: 10m
    file: loggregator-ci/tasks/wait-for-service-broker/task.yml
    params:
      ENV_URL: sample-odb.eight.loggr.cf-app.com
  - task: register-service-broker
    file: loggregator-ci/tasks/run-errand/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
      DEPLOYMENT_NAME: sample-service-metrics
      ERRAND: register-broker
  - task: upgrade-all-service-instances
    file: loggregator-ci/tasks/run-errand/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/ci-pool/eight
      DEPLOYMENT_NAME: sample-service-metrics
      ERRAND: upgrade-all-service-instances

- name: cats-cf-syslog-drain
  serial: true
  serial_groups:
  - bosh-cf-cats-cf-syslog-drain
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: deployments-loggregator
      - get: cf-acceptance-tests
      - get: cf-syslog-drain-release
        passed: ["cf-deploy-cf-syslog-drain"]
        trigger: true
      - get: loggregator-ci
    - task: update-config
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: deployments-loggregator
        integration-configs: deployments-loggregator
      params:
        CATS_INTEGRATION_CONFIG_FILE: gcp/ci-pool/cats-config.json
        BBL_STATE_DIR: gcp/ci-pool/eight
        SYSTEM_DOMAIN: eight.loggr.cf-app.com
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
      params:
        NODES: 9
        CONFIG_FILE_PATH: gcp/ci-pool/cats-config.json

- name: cfar-lats-cf-syslog-drain
  serial: true
  serial_groups:
  - bosh-cfar-lats-cf-syslog-drain
  plan:
    - aggregate:
      - get: cfar-logging-acceptance-tests
        trigger: true
      - get: cf-syslog-drain-release
        passed: ["cf-deploy-cf-syslog-drain"]
        trigger: true
      - get: loggregator-ci
      - get: cf-drain-cli
        passed: ["deploy-on-demand-broker"]
        trigger: true
    - task: run-cfar-lats
      file: loggregator-ci/tasks/cfar-lats/task.yml
      params:
        CF_ADMIN_USER: {{eight-username}}
        CF_ADMIN_PASSWORD: {{eight-password}}
        CF_DOMAIN: eight.loggr.cf-app.com
        SKIP_SSL_VALIDATION: true

###############################################################################
# STATSD INJECTOR
###############################################################################
- name: statsd-injector-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: statsd-injector
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: statsd-injector
    params:
      IMPORT_PATH: github.com/cloudfoundry/statsd-injector

- name: statsd-injector-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: statsd-injector-release
      trigger: true
    - get: statsd-injector
      passed: ["statsd-injector-tests"]
      trigger: true
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: statsd-injector-release
      source-repo: statsd-injector
    output_mapping:
      bumped-release-repo: bumped-statsd-injector-release
    params:
      SUBMODULE_PATH: src/github.com/cloudfoundry/statsd-injector
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-statsd-injector-release
    output_mapping:
      updated-release-repo: synced-statsd-injector-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-statsd-injector-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race github.com/cloudfoundry/statsd-injector/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit/task.yml
    input_mapping:
      release-repo: synced-statsd-injector-release
    output_mapping:
      committed-repo: committed-statsd-injector-release
    params:
      COMMIT_MESSAGE: "Bump statsd-injector"
  - put: statsd-injector-release
    params:
      repository: committed-statsd-injector-release
      rebase: true

###############################################################################
# NOISY NEIGHBOR NOZZLE
###############################################################################
- name: noisy-neighbor-nozzle-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: noisy-neighbor-nozzle
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: noisy-neighbor-nozzle
    params:
      IMPORT_PATH: code.cloudfoundry.org/noisy-neighbor-nozzle
- name: noisy-neighbor-nozzle-deploy
  serial: true
  plan:
  - aggregate:
    - get: noisy-neighbor-nozzle
      passed: [noisy-neighbor-nozzle-tests]
      trigger: true
    - get: loggregator-ci
  - task: noisy-neighbor-nozzle-deploy
    file: loggregator-ci/tasks/noisy-neighbor-nozzle-deploy/task.yml
    params:
      SYSTEM_DOMAIN: "coconut.cf-app.com"
      APP_DOMAIN: "coconut.cf-app.com"
      ORG: "system"
      SPACE: "accumulators"
      CLIENT_ID: {{noisy-neighbor-nozzle-coconut-id}}
      CLIENT_SECRET: {{noisy-neighbor-nozzle-coconut-secret}}
      SUBSCRIPTION_ID: {{noisy-neighbor-nozzle-subscription-id}}
      USERNAME: {{coconut-username}}
      PASSWORD: {{coconut-password}}
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
      NOZZLE_COUNT: 4

###############################################################################
# SERVICE METRICS INJECTOR
###############################################################################
- name: service-metrics-tests
  serial: true
  plan:
  - aggregate:
    - get: service-metrics
      trigger: true
    - get: loggregator-ci
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    params:
      IMPORT_PATH: code.cloudfoundry.org/service-metrics
    input_mapping:
      source-repo: service-metrics

- name: service-metrics-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: service-metrics-release
      trigger: true
    - get: service-metrics
      passed: ["service-metrics-tests"]
      trigger: true
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: service-metrics-release
      source-repo: service-metrics
    output_mapping:
      bumped-release-repo: bumped-service-metrics-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/service-metrics
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-service-metrics-release
    output_mapping:
      updated-release-repo: synced-service-metrics-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-service-metrics-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-service-metrics-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race code.cloudfoundry.org/service-metrics/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit/task.yml
    input_mapping:
      release-repo: synced-service-metrics-release

    output_mapping:
      committed-repo: committed-service-metrics-release
    params:
      COMMIT_MESSAGE: "Bump service metrics"
  - put: service-metrics-release
    params:
      repository: committed-service-metrics-release
      rebase: true

- name: service-metrics-deploy
  serial: true
  serial_groups: ["cf-deploy"]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: service-metrics-release
      trigger: true
      passed: ["service-metrics-bump-submodule"]
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: on-demand-service-broker-release
      params:
        submodules:
        - src/github.com/pivotal-cf/on-demand-services-sdk
        - src/github.com/pivotal-cf/on-demand-service-broker
        - src/github.com/pivotal-cf/brokerapi
  - task: upload-service-metrics-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: service-metrics-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: upload-on-demand-service-broker-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: on-demand-service-broker-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      CREATE_RELEASE: false
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5.7.0
      inputs:
      - name: deployments-loggregator
      outputs:
      - name: ops-files
      - name: vars-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -exu

          pushd deployments-loggregator/gcp/coconut-bbl
            eval "$(bbl print-env)"
          popd

          cp deployments-loggregator/gcp/coconut-bbl/service-metrics-broker-vars.yml vars-files

          service_metrics_version=$(bosh releases | grep service-metrics | grep -v service-metrics-adapter | head -n1 | awk '{print $2}' | cut -d '*' -f 1)
          cat <<EOT >> vars-files/service-metrics-version.yml
          service-metrics-release-version: $service_metrics_version
          EOT

          odb_version=$(bosh releases | grep on-demand-service-broker | head -n1 | awk '{print $2}' | cut -d '*' -f 1)
          cat <<EOT >> ops-files/odb-version.yml
          - type: replace
            path: /releases/name=on-demand-service-broker/version
            value: $odb_version
          EOT

          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /instance_groups/name=service-metrics/jobs/name=loggregator_agent/consumes/doppler/deployment
            value: cf
          - type: replace
            path: /instance_groups/name=service-metrics/jobs/name=service-metrics/properties/service_metrics/source_id?
            value: dummy-source-id
          - type: remove
            path: /variables/name=loggregator_ca
          - type: replace
            path: /variables/name=service-metrics/options/ca
            value: /bosh-coconut-bbl/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/ca
            value: /bosh-coconut-bbl/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/alternative_names
            value:
            - metron
            - agent
            - localhost
            - 127.0.0.1
          EOT

          cat <<EOT >> ops-files/on-the-fly-odb.yml
          - type: remove
            path: /variables/name=loggregator_ca
          - type: replace
            path: /variables/name=service_metrics/options/ca
            value: /bosh-coconut-bbl/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/ca
            value: /bosh-coconut-bbl/cf/loggregator_ca
          - type: replace
            path: /variables/name=loggregator_agent/options/alternative_names
            value:
            - metron
            - agent
            - localhost
            - 127.0.0.1
          EOT
  - aggregate:
    - do:
      - task: deploy-standalone
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: deployments-loggregator
          vars-store: deployments-loggregator
          ops-files: ops-files
          cf-deployment: service-metrics-release
        params:
          SYSTEM_DOMAIN: coconut.cf-app.com
          BBL_STATE_DIR: gcp/coconut-bbl
          DEPLOYMENT_NAME: service-metrics-injector
          MANIFEST_FILE: manifests/manifest.yml
          OPS_FILES: |
            on-the-fly.yml
    - do:
      - task: deploy-odb
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: deployments-loggregator
          vars-store: deployments-loggregator
          ops-files: ops-files
          cf-deployment: service-metrics-release
        params:
          SYSTEM_DOMAIN: coconut.cf-app.com
          BBL_STATE_DIR: gcp/coconut-bbl
          DEPLOYMENT_NAME: sample-service-metrics
          MANIFEST_FILE: manifests/sample-service-metrics.yml
          VARS_FILES: service-metrics-version.yml service-metrics-broker-vars.yml
          OPS_FILES: |
            odb-version.yml
            on-the-fly-odb.yml
      - task: wait-for-service-broker
        timeout: 10m
        file: loggregator-ci/tasks/wait-for-service-broker/task.yml
        params:
          ENV_URL: sample-odb.coconut.cf-app.com
      - task: register-service-broker
        file: loggregator-ci/tasks/run-errand/task.yml
        input_mapping:
          bbl-state: deployments-loggregator
        params:
          BBL_STATE_DIR: gcp/coconut-bbl
          DEPLOYMENT_NAME: sample-service-metrics
          ERRAND: register-broker
      - task: upgrade-all-service-instances
        file: loggregator-ci/tasks/run-errand/task.yml
        input_mapping:
          bbl-state: deployments-loggregator
        params:
          BBL_STATE_DIR: gcp/coconut-bbl
          DEPLOYMENT_NAME: sample-service-metrics
          ERRAND: upgrade-all-service-instances

- name: service-metrics-system-tests
  public: false
  serial: true
  serial_groups: ["cf-deploy"]
  plan:
  - get: service-metrics-release
    passed: ["service-metrics-deploy"]
    trigger: true
  - get: loggregator-ci
  - get: 10m
    trigger: true
  - task: system-tests
    file: loggregator-ci/tasks/service-metrics-release/system-tests.yml
    params:
      CF_API: "https://api.coconut.cf-app.com"
      CF_USERNAME: {{coconut-username}}
      CF_PASSWORD: {{coconut-password}}
      DEPLOYMENT_NAME: service-metrics-injector
      DOPPLER_ADDR: wss://doppler.coconut.cf-app.com:443
      ORIGIN: service-metrics-injector

- name: service-metrics-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: service-metrics-release
      trigger: true
      passed: ["service-metrics-system-tests"]
    - get: service-metrics-release-release-elect
  - put: service-metrics-release-release-elect
    params:
      repository: develop

- name: service-metrics-master-promotion
  serial: true
  plan:
  - get: 5m
    trigger: true
  - aggregate:
    - get: service-metrics-release-release-elect
      passed: ["service-metrics-promotion"]
      trigger: true
    - get: service-metrics-release-master
    - get: bumper-tool
    - get: loggregator-ci
  - task: bumper
    file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      source: service-metrics-release-release-elect
      dest: service-metrics-release-master
    params:
      SOURCE_BRANCH: release-elect
      DEST_BRANCH: master
      FOLLOW_BUMPS_OF: src/code.cloudfoundry.org/service-metrics
  - put: service-metrics-release-master
    params:
      repository: merged-dest
###############################################################################
# SHARED
###############################################################################
- name: cf-deploy
  serial: true
  serial_groups:
  - cf-deploy
  - bosh-cf-cats
  - bosh-cfar-lats
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment-release-candidate
      trigger: true
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: logging-deployment
    - get: loggregator-release-release-elect
      trigger: true
      passed:
      - loggregator-promotion
    - get: loggregator-agent-release
      trigger: true
      passed:
      - loggregator-agent-promotion
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: cf-syslog-drain-release-release-elect
      trigger: true
      passed:
      - cf-syslog-drain-promotion
    - get: statsd-injector-release
      trigger: true
    - get: cf-drain-cli-master
  - aggregate:
    - task: upload-loggregator-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-release-release-elect
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-loggregator-agent-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-agent-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-cf-syslog-drain-release-release-elect
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: cf-syslog-drain-release-release-elect
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-statsd-injector-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: statsd-injector-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v3.19.0
      inputs:
      - name: bbl-state
      - name: cf-deployment-release-candidate
      - name: cf-deployment
      - name: loggregator-agent-release
      - name: loggregator-release-release-elect
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cp cf-deployment-release-candidate/operations/scale-to-one-az.yml ops-files/
          cp cf-deployment-release-candidate/operations/test/add-persistent-isolation-segment-diego-cell.yml ops-files/

          cp cf-deployment/operations/test/add-persistent-isolation-segment-logging-system.yml ops-files/
          cp cf-deployment/operations/test/add-persistent-isolation-segment-syslog-drain.yml ops-files/
          cp bbl-state/gcp/coconut-bbl/ops-files/clients.yml ops-files/


          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              version: latest
          - type: replace
            path: /releases/name=loggregator-agent
            value:
              name: loggregator-agent
              version: latest
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          - type: replace
            path: /releases/name=statsd-injector
            value:
              name: statsd-injector
              version: latest
          - type: replace
            path: /instance_groups/name=doppler/instances
            value: 2
          - type: replace
            path: /instance_groups/name=diego-cell/instances
            value: 6
          - type: replace
            path: /instance_groups/name=uaa/instances
            value: 2
          - type: replace
            path: /instance_groups/name=doppler/vm_type
            value: small-highmem
          - type: replace
            path: /update/max_in_flight
            value: 10
          - type: replace
            path: /instance_groups/name=adapter/jobs/name=adapter/properties/scalablesyslog?/adapter?/syslog_skip_cert_verify?
            value: true
          EOT

          cat <<EOT >> ops-files/on-the-fly-iso.yml
          - type: replace
            path: /instance_groups/name=router/jobs/name=gorouter/properties/router/routing_table_sharding_mode?
            value: all
          EOT
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      SYSTEM_DOMAIN: coconut.cf-app.com
      OPS_FILES: |
        clients.yml
        scale-to-one-az.yml
        on-the-fly.yml
        add-persistent-isolation-segment-diego-cell.yml
        add-persistent-isolation-segment-logging-system.yml
        on-the-fly-iso.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    attempts: 3
    params:
      SYSTEM_DOMAIN: coconut.cf-app.com
      BBL_STATE_DIR: gcp/coconut-bbl
      ENABLED_FEATURE_FLAGS: diego_docker
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: create-blackbox-space
    file: loggregator-ci/tasks/create-org-and-space/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      ORG: system
      SPACE: blackbox-testing
      SYSTEM_DOMAIN: coconut.cf-app.com
  - task: create-accumulators-space
    file: loggregator-ci/tasks/create-org-and-space/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      ORG: system
      SPACE: accumulators
      SYSTEM_DOMAIN: coconut.cf-app.com
  - task: add-syslog-telemetry
    file: logging-deployment/ci/tasks/push-logging-telemetry/task.yml
    input_mapping:
      cf-drain-cli: cf-drain-cli-master
    params:
      ORG: system
      SPACE: accumulators
      SYSTEM_DOMAIN: coconut.cf-app.com
      USERNAME: {{coconut-username}}
      PASSWORD: {{coconut-password}}
      SKIP_SSL_VALIDATION: true
      APP_PREFIX: syslog-telemetry
      DATADOG_API_KEY: {{datadog-loggregator-api-key}}
    input_mapping:
      cf-drain-cli: cf-drain-cli-master

- name: cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: deployments-loggregator
      - get: cf-acceptance-tests-iso
      - get: loggregator-release-release-elect
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
    - task: update-config
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: deployments-loggregator
        integration-configs: deployments-loggregator
      params:
        CATS_INTEGRATION_CONFIG_FILE: gcp/coconut-bbl/cats-config.json
        BBL_STATE_DIR: gcp/coconut-bbl
        SYSTEM_DOMAIN: coconut.cf-app.com
    - task: run-cats
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
        cf-acceptance-tests: cf-acceptance-tests-iso
      params:
        CONFIG_FILE_PATH: gcp/coconut-bbl/cats-config.json
        NODES: 9

- name: cfar-lats
  serial: true
  serial_groups:
  - bosh-cfar-lats
  plan:
    - aggregate:
      - get: cfar-logging-acceptance-tests
        trigger: true
      - get: loggregator-release-release-elect
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-ci
      - get: cf-drain-cli-master
    - task: run-cfar-lats
      input_mapping:
        cf-drain-cli: cf-drain-cli-master
      file: loggregator-ci/tasks/cfar-lats/task.yml
      params:
        CF_ADMIN_USER: {{coconut-username}}
        CF_ADMIN_PASSWORD: {{coconut-password}}
        CF_DOMAIN: coconut.cf-app.com
        SKIP_SSL_VALIDATION: true
        APP_PUSH_TIMEOUT: 180s

