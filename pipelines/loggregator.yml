groups:
- name: all
  jobs:
  - loggregator-tests
  - loggregator-bump-submodule
  - loggregator-release-tests
  - loggregator-diff-cert-generation-scripts
  - loggregator-test-bosh-templates
  - loggregator-deploy
  - cf-deploy
  - lats
  - cats
  - loggregator-benchmarks
  - loggregator-promotion
  - cf-syslog-drain-tests
  - cf-syslog-drain-bump-submodule
  - cf-syslog-drain-promotion
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-release-tests
  - statsd-injector-deploy
  - statsd-injector-diff-cert-generation-scripts
- name: loggregator
  jobs:
  - loggregator-tests
  - loggregator-bump-submodule
  - loggregator-release-tests
  - loggregator-diff-cert-generation-scripts
  - loggregator-test-bosh-templates
  - loggregator-deploy
  - cf-deploy
  - lats
  - cats
  - loggregator-benchmarks
  - loggregator-promotion
- name: cf-syslog-drain
  jobs:
  - cf-syslog-drain-tests
  - cf-syslog-drain-bump-submodule
  - cf-deploy
  - cats
  - cf-syslog-drain-promotion
- name: statsd-injector
  jobs:
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-release-tests
  - statsd-injector-deploy
  - statsd-injector-diff-cert-generation-scripts

resources:
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

- name: cf-release-develop
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release
    branch: develop

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v4.6

# This is here because concourse has a bug in which putting to a git resource
# creates a new version that can trigger jobs even if the commit has [ci skip]
# present.
- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

- name: integration-config
  type: git
  source: *deployments_loggregator

- name: etcd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release

- name: loggregator-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-src
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: master
    private_key: {{loggregator-key}}

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release-updated
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-bench-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-bench-release
    branch: master

- name: loggregator-bench-results
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-bench-results.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-syslog-drain-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry/scalable-syslog
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: statsd-injector-release-updated
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

jobs:
- name: loggregator-tests
  serial: true
  public: true
  plan:
  - get: loggregator-src
    trigger: true
  - aggregate:
    - task: run-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t ./...
                go test -race `go list ./... | grep -v lats`
              popd
            popd

    - do:
      - task: build-windows-test-binary
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: loggregator-src
          outputs:
          - name: binaries
          - name: test-binaries
          run:
            path: bash
            args:
            - -c
            - |
              #!/bin/bash
              set -ex

              mkdir -p workspace/src/code.cloudfoundry.org/loggregator
              cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

              function munge {
                echo $1 | tr '/' '_'
              }

              pushd workspace
                export GOOS=windows
                export GOPATH="$PWD"
                export PATH="$GOPATH/bin:$PATH"

                pushd src/code.cloudfoundry.org/loggregator
                  go get -t ./...
                  for pkg in $(go list ./metron/...); do
                    go test -c -o ../test-binaries/$(munge $pkg)_test.exe $pkg
                  done
                  go build -o ../binaries/metron.exe code.cloudfoundry.org/loggregator/metron
                popd
              popd

      - task: run-windows-tests
        config:
          platform: windows
          inputs:
          - name: binaries
          - name: test-binaries
          run:
            path: powershell
            args:
            - "-command"
            - |
              trap {
                write-error $_
                exit 1
              }

              $env:SKIP_BUILD = "true"
              $env:METRON_BUILD_PATH = "binaries\metron.exe"

              # Run all test binaries
              Get-ChildItem -Filter test-binaries\*.exe | ForEach {
                &$_.Fullname /s
                if ($LastExitCode -ne 0) {
                  throw "test failed"
                }
              }

- name: loggregator-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-release
      trigger: false
    - get: loggregator-src
      passed:
      - loggregator-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: loggregator-release
      - name: loggregator-src
      outputs:
      - name: bumped-loggregator-release
      params:
        PARENT: loggregator-release
        OUTPUT: bumped-loggregator-release
        CHILD: loggregator-src
        CHILD_PATH: src/code.cloudfoundry.org/loggregator
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: loggregator-release
      outputs:
        - name: synced-loggregator-release
      params:
        RELEASE: loggregator-release
        OUTPUT: synced-loggregator-release
      run:
        path: bash
        args:
        - -c
        - {{update_package_specs}}
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-loggregator-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-loggregator-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            export TERM=xterm
            ./scripts/test
          popd
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-loggregator-release
      outputs:
      - name: committed-loggregator-release
      params:
        SOURCE: synced-loggregator-release
        PATHS: "src/code.cloudfoundry.org/loggregator packages"
        COMMIT_MESSAGE: "Bump code.cloudfoundry.org/loggregator"
        OUTPUT: committed-loggregator-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: loggregator-release-updated
    params:
      repository: committed-loggregator-release
      rebase: false

- name: loggregator-release-tests
  serial: true
  plan:
  - get: loggregator-release
    trigger: true
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: loggregator-release
      outputs:
      - name: synced-loggregator-release
      params:
        RELEASE: loggregator-release
        OUTPUT: synced-loggregator-release
      run:
        path: bash
        args:
        - -c
        - {{update_package_specs}}
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-loggregator-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-loggregator-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            export TERM=xterm
            ./scripts/test
          popd

- name: cf-deploy
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
  - aggregate:
    - get: bbl-state
      resource: deployments-loggregator
      trigger: false
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
      trigger: false
    - get: loggregator-release
      trigger: true
      passed:
      - loggregator-bump-submodule
      - loggregator-release-tests
    - get: cf-syslog-drain-release
      trigger: true
      passed:
      - cf-syslog-drain-bump-submodule
    - get: vars-store
      resource: deployments-loggregator
      trigger: false
    - get: vars-files
      resource: deployments-loggregator
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: upload-releases
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: loggregator-release
      - name: cf-syslog-drain-release
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash

          set -ex

          pushd bbl-state/gcp/coconut-bbl
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          releases="loggregator-release cf-syslog-drain-release"
          for rel in $releases; do
            pushd $rel
              bosh create-release
              bosh upload-release --rebase
            popd
          done
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          cp cf-deployment/operations/scale-to-one-az.yml ops-files/
          cp bbl-state/gcp/coconut-bbl/ops-files/*.yml ops-files/

          cat <<EOT >> ops-files/dev-versions.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              version: latest
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          EOT
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
      OPS_FILES: "clients.yml scale-to-one-az.yml datadog-agent.yml diego.yml dev-versions.yml"
      VARS_FILES: "gcp/coconut-bbl/vars-files/router.yml"
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-vars-store
      rebase: true
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl

- name: loggregator-deploy
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: consul-release
      trigger: false
    - get: etcd-release
      trigger: false
    - get: loggregator-release
      passed:
      - loggregator-bump-submodule
      - loggregator-release-tests
      trigger: true
    - get: deployments-loggregator
      trigger: false
  - task: upload-loggregator
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
        - name: consul-release
        - name: etcd-release
        - name: loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux
            loggregator_dir="$PWD/loggregator-release"

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            for release in $(find consul-release -name '*.tgz')
            do
              bosh upload-release $release
            done

            for release in $(find etcd-release -name '*.tgz')
            do
              bosh upload-release $release
            done


            pushd $loggregator_dir
                bosh create-release --name=loggregator --force
                bosh upload-release --rebase
            popd
  - task: deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: loggregator-release
      outputs:
      - name: updated-deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            loggregator_dir="$PWD/loggregator-release"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -n -d loggregator deploy \
              --vars-store "$deployment_dir/loggregator-vars.yml" \
              "$loggregator_dir/templates/loggregator.yml"

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut-bbl/loggregator-vars.yml
        COMMIT_MESSAGE: "Update loggregator vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

- name: loggregator-benchmarks
  serial: true
  plan:
  - aggregate:
    - get: loggregator-bench-release
    - get: loggregator-bench-results
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: loggregator-release
      trigger: true
      passed:
      - cf-deploy
  - task: deploy-benchmarks
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: loggregator-release
      - name: loggregator-bench-release
      outputs:
      - name: updated-deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            loggregator_dir="$PWD/loggregator"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            cp -R loggregator-release loggregator-bench-release/src/loggregator-release

            pushd loggregator-bench-release
              bosh create-release --force
              bosh upload-release --rebase

              bosh -n -d loggregator-bench deploy \
                --vars-store "$deployment_dir/loggregator-bench-vars.yml" \
                "manifests/loggregator-bench.yml"
            popd

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut-bbl/loggregator-bench-vars.yml
        COMMIT_MESSAGE: "Update loggregator-bench vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true
  - task: run-benchmarks
    file: loggregator-ci/tasks/loggregator/benchmarks.yml
    params:
      BBL_STATE_DIR: deployments-loggregator/gcp/coconut-bbl
  - put: loggregator-bench-results
    params:
      repository: updated-loggregator-bench-results
      rebase: true

- name: cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cats-concourse-task
      - get: integration-config
      - get: cf-acceptance-tests
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy"]
      - get: cf-syslog-drain-release
        passed: ["cf-deploy"]
        trigger: true
    - task: run-cats
      file: cats-concourse-task/task.yml
      params:
        CONFIG_FILE_PATH: gcp/coconut-bbl/cats-config.json

- name: lats
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: loggregator
      resource: loggregator-release
      passed:
      - loggregator-deploy
      trigger: true
    - get: deployments-loggregator
      trigger: false
  - task: run-lats
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -d loggregator run-errand loggregator-acceptance-tests --keep-alive

- name: loggregator-promotion
  serial: true
  plan:
  - aggregate:
    - get: release-elect
      resource: loggregator-release-elect
      trigger: false
    - get: develop
      resource: loggregator-release
      trigger: true
      passed: ["lats", "cats", "loggregator-benchmarks"]
    - get: loggregator-ci
  - task: promote
    file: loggregator-ci/tasks/promote.yml
  - put: loggregator-release-elect
    params:
      repository: promote-develop
      rebase: false

- name: loggregator-test-bosh-templates
  plan:
  - get: loggregator
    resource: loggregator-release
    trigger: true
  - task: run-specs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ruby
      inputs:
      - name: loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -e
            cd loggregator
            bundle install
            rspec

- name: loggregator-diff-cert-generation-scripts
  plan:
  - get: loggregator
    resource: loggregator-release
    trigger: true
  - get: cf-release
    resource: cf-release-develop
    trigger: true
  - task: diff
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: loggregator
      - name: cf-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -e
            echo diffing loggregator cert generation
            diff --unified loggregator/scripts/generate-loggregator-certs \
                           cf-release/scripts/generate-loggregator-certs

- name: cf-syslog-drain-tests
  serial: true
  public: true
  plan:
  - get: scalable-syslog
    trigger: true
  - task: run-tests
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: scalable-syslog
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          mkdir -p workspace/src/code.cloudfoundry.org/scalable-syslog
          cp -r scalable-syslog/. workspace/src/code.cloudfoundry.org/scalable-syslog/

          pushd workspace
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            pushd src/code.cloudfoundry.org/scalable-syslog
              go get -t ./...
              go test ./... -race
            popd
          popd

- name: cf-syslog-drain-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: cf-syslog-drain-release
      trigger: false
    - get: scalable-syslog
      passed:
      - cf-syslog-drain-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: cf-syslog-drain-release
      - name: scalable-syslog
      outputs:
      - name: updated-cf-syslog-drain-release
      params:
        PARENT: cf-syslog-drain-release
        OUTPUT: updated-cf-syslog-drain-release
        CHILD: scalable-syslog
        CHILD_PATH: src/code.cloudfoundry.org/scalable-syslog
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-cf-syslog-drain-release
      outputs:
      - name: synced-cf-syslog-drain-release
      params:
        OUTPUT: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -e -x

          pushd updated-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"

            ./scripts/sync-package-specs
          popd

          cp -r updated-cf-syslog-drain-release/. $OUTPUT/
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race code.cloudfoundry.org/scalable-syslog/...
          popd
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      outputs:
      - name: bumped-cf-syslog-drain-release
      params:
        SOURCE: synced-cf-syslog-drain-release
        PATHS: src/code.cloudfoundry.org/scalable-syslog packages/
        COMMIT_MESSAGE: "Bump scalable-syslog"
        OUTPUT: bumped-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: cf-syslog-drain-release
    params:
      repository: bumped-cf-syslog-drain-release
      rebase: true

- name: cf-syslog-drain-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: cf-syslog-drain-release
      trigger: true
      passed: ["cats"]
    - get: release-elect
      resource: cf-syslog-drain-release-release-elect
    - get: loggregator-ci
  - put: cf-syslog-drain-release-release-elect
    params:
      repository: develop

- name: statsd-injector-tests
  serial: true
  public: true
  plan:
  - get: statsd-injector
    trigger: true
  - task: run-units
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: statsd-injector
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          mkdir -p workspace/src/github.com/cloudfoundry/statsd-injector
          cp -r statsd-injector/. workspace/src/github.com/cloudfoundry/statsd-injector/

          pushd workspace
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"

            pushd src/github.com/cloudfoundry/statsd-injector
              go get -t ./...
              go test -race ./...
            popd
          popd

- name: statsd-injector-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: statsd-injector-release
      trigger: false
    - get: statsd-injector
      passed:
      - statsd-injector-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: statsd-injector-release
      - name: statsd-injector
      outputs:
      - name: bumped-statsd-injector-release
      params:
        PARENT: statsd-injector-release
        OUTPUT: bumped-statsd-injector-release
        CHILD: statsd-injector
        CHILD_PATH: src/github.com/cloudfoundry/statsd-injector
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: statsd-injector-release
      outputs:
        - name: synced-statsd-injector-release
      params:
        RELEASE: statsd-injector-release
        OUTPUT: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - {{update_package_specs}}
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-statsd-injector-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race github.com/cloudfoundry/statsd-injector/...
          popd
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      outputs:
      - name: committed-statsd-injector-release
      params:
        SOURCE: synced-statsd-injector-release
        PATHS: src/github.com/cloudfoundry/statsd-injector
        COMMIT_MESSAGE: "Bump statsd-injector"
        OUTPUT: committed-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: statsd-injector-release-updated
    params:
      repository: committed-statsd-injector-release
      rebase: false

- name: statsd-injector-release-tests
  serial: true
  plan:
  - get: statsd-injector-release
    trigger: true
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: statsd-injector-release
      outputs:
      - name: synced-statsd-injector-release
      params:
        RELEASE: statsd-injector-release
        OUTPUT: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - {{update_package_specs}}
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-statsd-injector-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race github.com/cloudfoundry/statsd-injector/...
          popd
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-statsd-injector-release
      outputs:
      - name: committed-statsd-injector-release
      params:
        SOURCE: synced-statsd-injector-release
        PATHS: src/github.com/cloudfoundry/statsd-injector
        COMMIT_MESSAGE: "Updated statsd-injector-release"
        OUTPUT: committed-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: statsd-injector-release-updated
    params:
      repository: committed-statsd-injector-release
      rebase: false

- name: statsd-injector-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: statsd-injector-release-updated
      trigger: true
      passed:
      - statsd-injector-bump-submodule
      - statsd-injector-release-tests
    - get: deployments-loggregator
      trigger: false
  - task: deploy
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: statsd-injector-release-updated
      - name: deployments-loggregator
      outputs:
      - name: updated-deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -e

            bbl_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"
            statsd_dir="$PWD/statsd-injector-release-updated"

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            pushd "$statsd_dir"
              bosh create-release
              bosh upload-release --rebase

              bosh -n -d statsd-injector deploy \
                --vars-store "$bbl_dir/statsd-injector-vars.yml" \
                --vars-file "$bbl_dir/deployment-vars.yml" \
                "$statsd_dir/manifests/statsd-injector.yml"
            popd

            set +e
            pushd deployments-loggregator
              git config user.email "cf-loggregator@pivotal.io"
              git config user.name "Loggregator CI"
              git add . --all
              git commit -m "Updated statsd-injector deployment vars

              [ci-skip]"
            popd

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - put: deployments-loggregator
    params:
      repository: updated-deployments-loggregator
      rebase: true

- name: statsd-injector-diff-cert-generation-scripts
  plan:
  - get: statsd-injector-release
    trigger: true
  - get: cf-release
    resource: cf-release-develop
    trigger: true
  - task: diff
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: statsd-injector-release
      - name: cf-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -e
            echo diffing statsd-injector cert generation
            diff --unified statsd-injector-release/scripts/generate-certs \
                           cf-release/scripts/generate-statsd-injector-certs
