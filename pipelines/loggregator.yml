groups:
- name: all
  jobs:
  - loggregator-tests
  - loggregator-bump-submodule
  - loggregator-deploy
  - cf-deploy
  - lats
  - cats
  - loggregator-benchmarks
  - loggregator-promotion
  - cf-syslog-drain-tests
  - cf-syslog-drain-bump-submodule
  - cf-syslog-drain-promotion
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-deploy
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-bump-submodule
  - noisy-neighbor-nozzle-deploy
- name: loggregator
  jobs:
  - loggregator-tests
  - loggregator-bump-submodule
  - loggregator-deploy
  - cf-deploy
  - lats
  - cats
  - loggregator-benchmarks
  - loggregator-promotion
- name: cf-syslog-drain
  jobs:
  - cf-syslog-drain-tests
  - cf-syslog-drain-bump-submodule
  - cf-deploy
  - cats
  - cf-syslog-drain-promotion
- name: statsd-injector
  jobs:
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-deploy
- name: noisy-neighbor-nozzle
  jobs:
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-bump-submodule
  - noisy-neighbor-nozzle-deploy
- name: director-lifecycle
  jobs:
  - coconut-bbl-up
  - coconut-bbl-destroy

resources:
- name: 10m
  type: time
  source:
    interval: 10m

- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v4.6

- name: integration-config
  type: git
  source: *deployments_loggregator

- name: loggregator-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release-updated
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-src
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: master
    private_key: {{loggregator-key}}

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-bench-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-bench-release
    branch: master

- name: loggregator-bench-results
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-bench-results.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-syslog-drain-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry/scalable-syslog
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: statsd-injector-release-updated
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: noisy-neighbor-nozzle-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/noisy-neighbor-nozzle-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: noisy-neighbor-nozzle
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/noisy-neighbor-nozzle
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

jobs:
- name: coconut-bbl-up
  public: false
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
    - get: ops-files
      resource: deployments-loggregator
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/coconut-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: coconut-bbl
      LB_DOMAIN: coconut.cf-app.com
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: coconut-bbl-destroy
  public: false
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-src
      trigger: true
    - get: 10m
      trigger: true
  - aggregate:
    - task: run-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test -race $(go list ./... | grep -v integration_tests) \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - task: run-integration-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test ./integration_tests/... -race \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd

    - do:
      - task: build-windows-test-binary
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: loggregator-src
          outputs:
          - name: binaries
          - name: test-binaries
          run:
            path: bash
            args:
            - -c
            - |
              #!/bin/bash
              set -ex

              ci_root=$PWD
              mkdir -p workspace/src/code.cloudfoundry.org/loggregator
              cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

              function munge {
                echo $1 | tr '/' '_'
              }

              pushd workspace
                export GOOS=windows
                export GOPATH="$PWD"
                export PATH="$GOPATH/bin:$PATH"

                pushd src/code.cloudfoundry.org/loggregator
                  go get -t -d ./...
                  for pkg in $(go list ./agent/...); do
                    go test -c -o $ci_root/test-binaries/$(munge $pkg)_test.exe $pkg &
                  done
                  go build -o $ci_root/binaries/agent.exe code.cloudfoundry.org/loggregator/agent &
                popd
              popd
              wait

      - task: run-windows-tests
        config:
          platform: windows
          inputs:
          - name: binaries
          - name: test-binaries
          run:
            path: powershell
            args:
            - "-command"
            - |
              trap {
                write-error $_
                exit 1
              }

              $env:SKIP_BUILD = "true"
              $env:AGENT_BUILD_PATH = "binaries\agent.exe"

              # Run all test binaries
              Get-ChildItem -Filter test-binaries\*.exe | ForEach {
                &$_.Fullname /s
                if ($LastExitCode -ne 0) {
                  throw "test failed"
                }
              }

- name: loggregator-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-release
      trigger: true
    - get: loggregator-src
      passed:
      - loggregator-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: loggregator-release
      - name: loggregator-src
      outputs:
      - name: bumped-loggregator-release
      params:
        PARENT: loggregator-release
        OUTPUT: bumped-loggregator-release
        CHILD: loggregator-src
        CHILD_PATH: src/code.cloudfoundry.org/loggregator
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-release
    output_mapping:
      updated-release-repo: synced-loggregator-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test ~integration
    - task: run-integration-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test integration
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-release
    output_mapping:
      committed-repo: committed-loggregator-release
    params:
      PATHS: "src/code.cloudfoundry.org/loggregator packages"
  - put: loggregator-release-updated
    params:
      repository: committed-loggregator-release
      rebase: true

- name: cf-deploy
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
  - aggregate:
    - get: bbl-state
      resource: deployments-loggregator
      trigger: false
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
      trigger: false
    - get: loggregator-release-updated
      trigger: true
      passed:
      - loggregator-bump-submodule
    - get: cf-syslog-drain-release
      trigger: true
      passed:
      - cf-syslog-drain-bump-submodule
    - get: vars-store
      resource: deployments-loggregator
      trigger: false
    - get: vars-files
      resource: deployments-loggregator
  - task: upload-releases
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      inputs:
      - name: bbl-state
      - name: loggregator-release-updated
      - name: cf-syslog-drain-release
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash

          set -ex

          pushd bbl-state/gcp/coconut-bbl
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          releases="loggregator-release-updated cf-syslog-drain-release"
          for rel in $releases; do
            pushd $rel
              bosh create-release
              bosh upload-release --rebase
            popd
          done
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          cp cf-deployment/operations/windows-cell.yml ops-files/
          cp cf-deployment/operations/scale-to-one-az.yml ops-files/
          cp bbl-state/gcp/coconut-bbl/ops-files/*.yml ops-files/

          cat <<EOT >> ops-files/dev-versions.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              version: latest
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          EOT
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
      OPS_FILES: "clients.yml scale-to-one-az.yml datadog-agent.yml diego.yml dev-versions.yml windows-cell.yml"
      VARS_FILES: "gcp/coconut-bbl/vars-files/router.yml"
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
  - put: deployments-loggregator
    params:
      repository: updated-vars-store
      rebase: true
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl

- name: loggregator-deploy
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: consul-release
    - get: loggregator-release-updated
      trigger: true
      passed:
      - loggregator-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: upload-loggregator
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: consul-release
      - name: loggregator-release-updated
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux
          loggregator_dir="$PWD/loggregator-release-updated"

          pushd deployments-loggregator/gcp/coconut-bbl
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          for release in $(find consul-release -name '*.tgz'); do
            bosh upload-release $release
          done

          pushd $loggregator_dir
            bosh create-release --name=loggregator --force
            bosh upload-release --rebase
          popd
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: loggregator-release-updated
    output_mapping:
      updated-vars-store: updated-deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: loggregator
      MANIFEST_FILE: manifests/loggregator.yml
      VARS_STORE_FILE: gcp/coconut-bbl/loggregator-vars.yml
  - put: deployments-loggregator
    params:
      repository: updated-deployments-loggregator
      rebase: true

- name: loggregator-benchmarks
  serial: true
  plan:
  - aggregate:
    - get: loggregator-bench-release
    - get: loggregator-bench-results
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: loggregator-release
      resource: loggregator-release-updated
      trigger: true
      passed:
      - cf-deploy
  - task: deploy-benchmarks
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: loggregator-release
      - name: loggregator-bench-release
      outputs:
      - name: updated-deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            deployment_dir="$PWD/deployments-loggregator/gcp/coconut-bbl"

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            cp -R loggregator-release loggregator-bench-release/src/loggregator-release

            pushd loggregator-bench-release
              bosh create-release --force
              bosh upload-release --rebase

              bosh -n -d loggregator-bench deploy \
                --vars-store "$deployment_dir/loggregator-bench-vars.yml" \
                "manifests/loggregator-bench.yml"
            popd

            rsync -ac deployments-loggregator/ updated-deployments-loggregator
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut-bbl/loggregator-bench-vars.yml
        COMMIT_MESSAGE: "Update loggregator-bench vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator
    params:
      repository: committed-deployments-loggregator
      rebase: true
  - task: run-benchmarks
    file: loggregator-ci/tasks/loggregator-bench/task.yml
    params:
      BBL_STATE_DIR: deployments-loggregator/gcp/coconut-bbl
  - put: loggregator-bench-results
    params:
      repository: updated-loggregator-bench-results
      rebase: true

- name: cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cats-concourse-task
      - get: integration-config
      - get: cf-acceptance-tests
      - get: loggregator-release-updated
        trigger: true
        passed: ["cf-deploy"]
      - get: cf-syslog-drain-release
        passed: ["cf-deploy"]
        trigger: true
    - task: run-cats
      file: cats-concourse-task/task.yml
      params:
        CONFIG_FILE_PATH: gcp/coconut-bbl/cats-config.json

- name: lats
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: loggregator-release-updated
      passed:
      - loggregator-deploy
      trigger: true
    - get: deployments-loggregator
      trigger: false
  - task: run-lats
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -d loggregator run-errand loggregator-acceptance-tests --keep-alive

- name: loggregator-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-release-updated
      trigger: true
      passed: ["lats", "cats", "loggregator-benchmarks"]
    - get: loggregator-release-elect
  - put: loggregator-release-elect
    params:
      repository: develop

- name: cf-syslog-drain-tests
  serial: true
  public: true
  plan:
  - get: scalable-syslog
    trigger: true
  - task: run-tests
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: scalable-syslog
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          mkdir -p workspace/src/code.cloudfoundry.org/scalable-syslog
          cp -r scalable-syslog/. workspace/src/code.cloudfoundry.org/scalable-syslog/

          pushd workspace
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            pushd src/code.cloudfoundry.org/scalable-syslog
              go get -t -d ./...
              go test ./... -race
            popd
          popd

- name: cf-syslog-drain-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-syslog-drain-release
      trigger: true
    - get: scalable-syslog
      passed:
      - cf-syslog-drain-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: cf-syslog-drain-release
      - name: scalable-syslog
      outputs:
      - name: updated-cf-syslog-drain-release
      params:
        PARENT: cf-syslog-drain-release
        OUTPUT: updated-cf-syslog-drain-release
        CHILD: scalable-syslog
        CHILD_PATH: src/code.cloudfoundry.org/scalable-syslog
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: updated-cf-syslog-drain-release
    output_mapping:
      updated-release-repo: synced-cf-syslog-drain-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race code.cloudfoundry.org/scalable-syslog/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-cf-syslog-drain-release
    output_mapping:
      committed-repo: committed-cf-syslog-drain-release
    params:
      PATHS: "src/code.cloudfoundry.org/scalable-syslog packages"
  - put: cf-syslog-drain-release
    params:
      repository: committed-cf-syslog-drain-release
      rebase: true

- name: cf-syslog-drain-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: cf-syslog-drain-release
      trigger: true
      passed: ["cats"]
    - get: cf-syslog-drain-release-release-elect
  - put: cf-syslog-drain-release-release-elect
    params:
      repository: develop

- name: statsd-injector-tests
  serial: true
  public: true
  plan:
  - get: statsd-injector
    trigger: true
  - task: run-units
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: statsd-injector
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          mkdir -p workspace/src/github.com/cloudfoundry/statsd-injector
          cp -r statsd-injector/. workspace/src/github.com/cloudfoundry/statsd-injector/

          pushd workspace
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"

            pushd src/github.com/cloudfoundry/statsd-injector
              go get -t -d ./...
              go test -race ./...
            popd
          popd

- name: statsd-injector-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: statsd-injector-release
      trigger: true
    - get: statsd-injector
      passed:
      - statsd-injector-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: statsd-injector-release
      - name: statsd-injector
      outputs:
      - name: bumped-statsd-injector-release
      params:
        PARENT: statsd-injector-release
        OUTPUT: bumped-statsd-injector-release
        CHILD: statsd-injector
        CHILD_PATH: src/github.com/cloudfoundry/statsd-injector
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: statsd-injector-release
    output_mapping:
      updated-release-repo: synced-statsd-injector-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-statsd-injector-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race github.com/cloudfoundry/statsd-injector/...
          popd
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      outputs:
      - name: committed-statsd-injector-release
      params:
        SOURCE: synced-statsd-injector-release
        PATHS: src/github.com/cloudfoundry/statsd-injector
        COMMIT_MESSAGE: "Bump statsd-injector"
        OUTPUT: committed-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: statsd-injector-release-updated
    params:
      repository: committed-statsd-injector-release
      rebase: true

- name: statsd-injector-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: statsd-injector-release-updated
      trigger: true
      passed:
      - statsd-injector-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: statsd-injector-release-updated
    output_mapping:
      updated-vars-store: updated-deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: statsd-injector
      MANIFEST_FILE: manifests/statsd-injector.yml
      VARS_STORE_FILE: gcp/coconut-bbl/statsd-injector-vars.yml
      VARS_FILES: "gcp/coconut-bbl/deployment-vars.yml"
  - put: deployments-loggregator
    params:
      repository: updated-deployments-loggregator
      rebase: true

- name: noisy-neighbor-nozzle-tests
  serial: true
  public: true
  plan:
  - get: noisy-neighbor-nozzle
    trigger: true
  - task: run-tests
    config:
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      platform: linux
      inputs:
      - name: noisy-neighbor-nozzle
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          mkdir -p workspace/src/code.cloudfoundry.org/noisy-neighbor-nozzle
          cp -r noisy-neighbor-nozzle/. workspace/src/code.cloudfoundry.org/noisy-neighbor-nozzle/

          pushd workspace
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            pushd src/code.cloudfoundry.org/noisy-neighbor-nozzle
              go get -t -d ./...
              go test ./... -race
            popd
          popd

- name: noisy-neighbor-nozzle-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: noisy-neighbor-nozzle-release
      trigger: true
    - get: noisy-neighbor-nozzle
      passed:
      - noisy-neighbor-nozzle-tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: noisy-neighbor-nozzle-release
      - name: noisy-neighbor-nozzle
      outputs:
      - name: updated-noisy-neighbor-nozzle-release
      params:
        PARENT: noisy-neighbor-nozzle-release
        OUTPUT: updated-noisy-neighbor-nozzle-release
        CHILD: noisy-neighbor-nozzle
        CHILD_PATH: src/code.cloudfoundry.org/noisy-neighbor-nozzle
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: updated-noisy-neighbor-nozzle-release
    output_mapping:
      updated-release-repo: synced-noisy-neighbor-nozzle-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: synced-noisy-neighbor-nozzle-release
    params:
      SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-noisy-neighbor-nozzle-release
    output_mapping:
      committed-repo: committed-noisy-neighbor-nozzle-release
    params:
      PATHS: "src/code.cloudfoundry.org/noisy-neighbor-nozzle packages"
  - put: noisy-neighbor-nozzle-release
    params:
      repository: committed-noisy-neighbor-nozzle-release
      rebase: true

- name: noisy-neighbor-nozzle-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: noisy-neighbor-nozzle-release
      trigger: true
      passed:
      - noisy-neighbor-nozzle-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: noisy-neighbor-nozzle-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: noisy-neighbor-nozzle
      MANIFEST_FILE: manifests/noisy-neighbor-nozzle.yml
      VARS_STORE_FILE: gcp/coconut-bbl/throw-away.yml # We do not want to save this vars store.
      VARS_FILES: "gcp/coconut-bbl/noisy-neighbor-nozzle-vars.yml"