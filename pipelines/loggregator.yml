resources:
- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cfar-logging-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cfar-logging-acceptance-tests.git

- name: agent-image
  type: docker-image
  source:
    repository: loggregator/agent
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: router-image
  type: docker-image
  source:
    repository: loggregator/router
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: rlp-image
  type: docker-image
  source:
    repository: loggregator/rlp
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: pipeline-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/loggregator-locks.git
    branch: master
    pool: pipelines
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci.git
    private_key: {{loggregator-key}}

- name: loggregator-develop
  type: git
  source: &loggregator_develop
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-master
  type: git
  source:
    disable_ci_skip: true
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: master
    private_key: {{loggregator-key}}

- name: loggregator-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-release-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: master
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-github-release-drafts
  type: github-release
  source:
    user: cloudfoundry
    repository: loggregator-release
    access_token: {{access-token}}
    drafts: true

- name: loggregator-src
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: master
    private_key: {{loggregator-key}}

- name: 10m
  type: time
  source:
    interval: 10m

- name: loggregator-agent
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: go-loggregator
  type: git
  source:
    uri: https://github.com/cloudfoundry/go-loggregator
    branch: master

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: logging-acceptance-tests-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/logging-acceptance-tests-release
    branch: master

- name: loggregator-bench-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-bench-release
    branch: master

- name: loggregator-bench-results
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-bench-results.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-ci-docker-images
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    paths:
    - docker-images

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master
    private_key: {{loggregator-key}}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v6.5

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

jobs:
- name: loggregator-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-src
      trigger: true
    - get: 10m
      trigger: true
  - aggregate:
    - task: run-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test -race $(go list ./... | grep -v integration_tests) \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - task: run-integration-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test ./integration_tests/... -race \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - do:
      - task: build-windows-test-binary
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: loggregator-src
          outputs:
          - name: binaries
          - name: test-binaries
          run:
            path: bash
            args:
            - -c
            - |
              #!/bin/bash
              set -ex

              ci_root=$PWD
              mkdir -p workspace/src/code.cloudfoundry.org/loggregator
              cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

              function munge {
                echo $1 | tr '/' '_'
              }

              pushd workspace
                export GOOS=windows
                export GOPATH="$PWD"
                export PATH="$GOPATH/bin:$PATH"

                pushd src/code.cloudfoundry.org/loggregator
                  go get -t -d ./...
                  for pkg in $(go list ./agent/...); do
                    go test -c -o $ci_root/test-binaries/$(munge $pkg)_test.exe $pkg &
                  done
                  go build -o $ci_root/binaries/agent.exe code.cloudfoundry.org/loggregator/agent &
                popd
              popd
              wait
      - task: run-windows-tests
        config:
          platform: windows
          inputs:
          - name: binaries
          - name: test-binaries
          run:
            path: powershell
            args:
            - "-command"
            - |
              trap {
                write-error $_
                exit 1
              }

              $env:SKIP_BUILD = "true"
              $env:AGENT_BUILD_PATH = "binaries\agent.exe"

              # Run all test binaries
              Get-ChildItem -Filter test-binaries\*.exe | ForEach {
                &$_.Fullname /s
                if ($LastExitCode -ne 0) {
                  throw "test failed"
                }
              }

- name: loggregator-agent-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: loggregator-agent
    params:
      IMPORT_PATH: code.cloudfoundry.org/loggregator-agent

- name: loggregator-docker-images
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-ci-docker-images
      trigger: true
    - get: loggregator-src
      trigger: true
      passed: ["loggregator-tests"]
    - get: loggregator-agent
      trigger: true
      passed: ["loggregator-agent-tests"]
  - aggregate:
    - task: build-agent-image
      file: loggregator-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: loggregator-ci-docker-images
        source-repo: loggregator-agent
      output_mapping:
        build-image: build-agent-image
      params:
        CONTEXT_PATH: docker-images/agent
        BASE_PACKAGE: code.cloudfoundry.org/loggregator-agent
    - task: build-router-image
      file: loggregator-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: loggregator-ci-docker-images
        source-repo: loggregator-src
      output_mapping:
        build-image: build-router-image
      params:
        CONTEXT_PATH: docker-images/router
        BASE_PACKAGE: code.cloudfoundry.org/loggregator
    - task: build-rlp-image
      file: loggregator-ci/tasks/build-go-docker-image/task.yml
      input_mapping:
        context-repo: loggregator-ci-docker-images
        source-repo: loggregator-src
      output_mapping:
        build-image: build-rlp-image
      params:
        CONTEXT_PATH: docker-images/rlp
        BASE_PACKAGE: code.cloudfoundry.org/loggregator
  - aggregate:
    - put: agent-image
      params:
        build: build-agent-image/build
        tag: build-agent-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: router-image
      params:
        build: build-router-image/build
        tag: build-router-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: rlp-image
      params:
        build: build-rlp-image/build
        tag: build-rlp-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest

- name: loggregator-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-release
      trigger: true
    - get: loggregator-src
      trigger: true
      passed: ["loggregator-tests"]
    - get: loggregator-agent
      trigger: true
      passed: ["loggregator-agent-tests"]
    - get: go-loggregator
      trigger: true
  - task: update-loggregator-agent
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-release
      source-repo: loggregator-agent
    output_mapping:
      bumped-release-repo: bumped-loggregator-agent-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator-agent
  - task: update-loggregator
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: bumped-loggregator-agent-release
      source-repo: loggregator-src
    output_mapping:
      bumped-release-repo: bumped-loggregator-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator
  - task: update-go-loggregator
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: bumped-loggregator-release
      source-repo: go-loggregator
    output_mapping:
      bumped-release-repo: bumped-go-loggregator
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/go-loggregator
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-go-loggregator
    output_mapping:
      updated-release-repo: synced-loggregator-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test ~integration
    - task: run-integration-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test integration
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-release
    output_mapping:
      committed-repo: committed-loggregator-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/loggregator
        src/code.cloudfoundry.org/go-loggregator
        src/code.cloudfoundry.org/loggregator-agent
        packages
  - put: loggregator-release
    params:
      repository: committed-loggregator-release
      rebase: true

- name: loggregator-agent-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent-release
      trigger: true
    - get: loggregator-agent
      trigger: true
      passed: ["loggregator-agent-tests"]
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-agent-release
      source-repo: loggregator-agent
    output_mapping:
      bumped-release-repo: bumped-loggregator-agent-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator-agent
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-agent-release
    output_mapping:
      updated-release-repo: synced-loggregator-agent-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-agent-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-agent-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-agent-release
      params:
        SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-agent-release
    output_mapping:
      committed-repo: committed-loggregator-agent-release
    params:
      PATHS: "src/code.cloudfoundry.org/loggregator-agent packages"
  - put: loggregator-agent-release
    params:
      repository: committed-loggregator-agent-release
      rebase: true

- name: loggregator-deploy
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: consul-release
    - get: pipeline-pool
      passed: ["cf-deploy"]
      trigger: true
    - get: loggregator-release
      passed: ["cf-deploy"]
    - get: loggregator-agent-release
      passed: ["cf-deploy"]
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: logging-acceptance-tests-release
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
    - get: ops-files
      resource: deployments-loggregator
    - get: bbl-state
      resource: deployments-loggregator
  - do:
    - task: upload-loggregator-release
      file: loggregator-ci/tasks/env-pool-tasks/upload-release.yml
      input_mapping:
        bosh-release-dir: loggregator-release
        environment: pipeline-pool
    - task: loggregator-deploy
      file: loggregator-ci/tasks/env-pool-tasks/bosh-deploy.yml
      input_mapping:
        bosh-release: loggregator-release
        environment: pipeline-pool
      output_mapping:
        updated-vars-store: updated-deployments-loggregator
      params:
        SYSTEM_DOMAIN: loggr.cf-app.com
        DEPLOYMENT_NAME: loggregator
        MANIFEST_FILE: manifests/loggregator.yml
        VARS_STORE_FILE: loggregator-vars.yml
    - task: upload-lats
      file: loggregator-ci/tasks/env-pool-tasks/upload-release.yml
      input_mapping:
        bosh-release-dir: loggregator-release
        environment: pipeline-pool
    - task: lats-deploy
      file: loggregator-ci/tasks/env-pool-tasks/bosh-deploy.yml
      input_mapping:
        bbl-state: updated-deployments-loggregator
        vars-files: updated-deployments-loggregator
        bosh-release: logging-acceptance-tests-release
        environment: pipeline-pool
      params:
        SYSTEM_DOMAIN: loggr.cf-app.com
        DEPLOYMENT_NAME: lats
        MANIFEST_FILE: manifests/lats.yml
        VARS_FILES: $BBL_STATE_DIR/loggregator-vars.yml
        VARS_STORE_FILE: lats-vars.yml
    - put: deployments-loggregator
      params:
        repository: updated-deployments-loggregator
        rebase: true
    on_failure:
      put: pipeline-pool
      params: {release: pipeline-pool}

- name: loggregator-benchmarks
  serial: true
  plan:
  - aggregate:
    - get: loggregator-bench-release
    - get: loggregator-bench-results
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: loggregator-release
      trigger: true
      passed: ["loggregator-deploy"]
    - get: pipeline-pool
      passed: ["loggregator-deploy"]
      trigger: true
  - do:
    - task: bump-loggregator-release
      file: loggregator-ci/tasks/bump-submodule/task.yml
      input_mapping:
        release-repo: loggregator-bench-release
        source-repo: loggregator-release
      output_mapping:
        bumped-release-repo: bumped-loggregator-bench-release
      params:
        SUBMODULE_PATH: src/loggregator-release
    - task: update-submodules
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: bumped-loggregator-bench-release
      output_mapping:
        updated-release-repo: updated-loggregator-bench-release
      params:
        SCRIPT: git submodule update --init --recursive
    - task: sync-package-specs
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: updated-loggregator-bench-release
      output_mapping:
        updated-release-repo: synced-loggregator-bench-release
      params:
        SCRIPT: ./scripts/sync-package-specs-with-gopath
    - task: upload-benchmark-release
      file: loggregator-ci/tasks/env-pool-tasks/upload-release.yml
      input_mapping:
        environment: pipeline-pool
        bosh-release-dir: synced-loggregator-bench-release
      params:
        FORCE: true
    - task: deploy-benchmarks
      file: loggregator-ci/tasks/env-pool-tasks/bosh-deploy.yml
      input_mapping:
        bosh-release: synced-loggregator-bench-release
        vars-store: deployments-loggregator
        ops-files: deployments-loggregator
        vars-files: deployments-loggregator
        environment: pipeline-pool
      output_mapping:
        updated-vars-store: updated-deployments-loggregator
      params:
        DEPLOYMENT_NAME: loggregator-bench
        MANIFEST_FILE: manifests/loggregator-bench.yml
        VARS_STORE_FILE: loggregator-bench-vars.yml
    - task: commit
      file: loggregator-ci/tasks/commit/task.yml
      input_mapping:
        release-repo: updated-deployments-loggregator
      output_mapping:
        committed-repo: committed-deployments-loggregator
      params:
        COMMIT_MESSAGE: "Update loggregator-bench vars store"
    - put: deployments-loggregator
      params:
        repository: committed-deployments-loggregator
        rebase: true
    - task: run-benchmarks
      file: loggregator-ci/tasks/env-pool-tasks/loggregator-bench.yml
      input_mapping:
        environment: pipeline-pool
      params:
        DATADOG_VARS_DIR: deployments-loggregator
    - put: loggregator-bench-results
      params:
        repository: updated-loggregator-bench-results
        rebase: true
    on_failure:
      put: pipeline-pool
      params: {release: pipeline-pool}

- name: loggregator-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-release
      trigger: true
      passed: ["lats", "cats", "loggregator-benchmarks", "cfar-lats"]
    - get: loggregator-release-elect
  - put: loggregator-release-elect
    params:
      repository: develop

- name: loggregator-agent-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-agent-release
      trigger: true
      passed: ["cats", "cfar-lats", "lats"]
    - get: loggregator-agent-release-elect
  - put: loggregator-agent-release-elect
    params:
      repository: develop

- name: lats
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: deployments-loggregator
    - get: logging-acceptance-tests-release
      trigger: true
    - get: loggregator-release
      passed: ["loggregator-deploy"]
      trigger: true
    - get: loggregator-agent-release
      passed: ["loggregator-deploy"]
      trigger: true
    - get: pipeline-pool
      passed: ["loggregator-deploy"]
      trigger: true
  - do:
    - task: run-lats
      file: loggregator-ci/tasks/env-pool-tasks/run-errand.yml
      params:
        DEPLOYMENT_NAME: lats
        ERRAND: lats
        KEEP_ALIVE: true
      input_mapping:
        bbl-state: deployments-loggregator
        environment: pipeline-pool
    on_failure:
      put: pipeline-pool
      params: {release: pipeline-pool}

- name: loggregator-create-release
  serial: true
  plan:
  - aggregate:
    - get: loggregator-develop
    - get: loggregator-master
      resource: loggregator-master
    - get: loggregator-ci
    - get: loggregator-release-elect
      passed: ["loggregator-promotion"]

  - task: create-final-release
    file: loggregator-ci/tasks/create-final-release/task.yml
    input_mapping:
      to-repo: loggregator-develop
      from-repo: loggregator-master
    params:
      S3_ACCESS_KEY: {{s3-access-key}}
      S3_SECRET_KEY: {{s3-secret-key}}
      BLOBSTORE_BUCKET: loggregator-release-blobs
      SSH_KEY: {{loggregator-key}}
      NEW_VERSION: "102.1"
      RELEASE_NAME: Loggregator
      TO_BRANCH: develop
      FROM_BRANCH: master
  - put: loggregator-release-master
    params:
      repository: repos/from-repo
      rebase: false
  - put: loggregator-release-develop
    params:
      repository: repos/to-repo
      rebase: false
  - put: loggregator-github-release-drafts
    params:
      name: github-release/name
      tag: github-release/tag
      body: github-release/body
      globs:
      - github-release/*.tgz

- name: cf-deploy
  serial: true
  serial_groups:
  - cf-deploy
  - bosh-cf-cats
  - bosh-cfar-lats
  plan:
  - put: pipeline-pool
    params: {acquire: true}
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: loggregator-release
      trigger: true
      passed: ["loggregator-bump-submodule"]
    - get: loggregator-agent-release
      trigger: true
      passed: ["loggregator-agent-bump-submodule"]
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
  - aggregate:
    - task: upload-loggregator-release
      file: loggregator-ci/tasks/env-pool-tasks/upload-release.yml
      input_mapping:
        bosh-release-dir: loggregator-release
        environment: pipeline-pool
    - task: upload-loggregator-agent-release
      file: loggregator-ci/tasks/env-pool-tasks/upload-release.yml
      input_mapping:
        bosh-release-dir: loggregator-agent-release
        environment: pipeline-pool
  - do:
    - task: copy-ops-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
            tag: v3.19.0
        inputs:
        - name: bbl-state
        - name: cf-deployment
        - name: loggregator-agent-release
        outputs:
        - name: ops-files
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            set -e

            cp cf-deployment/operations/windows-cell.yml ops-files/
            cp cf-deployment/operations/scale-to-one-az.yml ops-files/
            cp cf-deployment/operations/experimental/use-bosh-dns.yml ops-files/
            cp cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml ops-files/
            cp cf-deployment/operations/use-compiled-releases.yml ops-files/

            cat <<EOT >> ops-files/on-the-fly.yml
            - type: replace
              path: /releases/name=loggregator
              value:
                name: loggregator
                version: latest
            - type: replace
              path: /update/max_in_flight
              value: 5
            - type: replace
              path: /releases/name=diego
              value:
                name: diego
                version: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/version)
                url: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/url)
                sha1: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/sha1)
            - type: replace
              path: /instance_groups/name=doppler/instances
              value: 2
            - path: /releases/name=consul/url
              type: replace
              value: https://bosh.io/d/github.com/cloudfoundry-incubator/consul-release?v=194
            - path: /releases/name=consul/sha1
              type: replace
              value: 085921377ca2ad804060f2e6d1143f81dc490736
            EOT
    - task: upload-stemcell
      file: loggregator-ci/tasks/env-pool-tasks/bosh-upload-stemcell-from-cf-deployment.yml
      input_mapping:
        environment: pipeline-pool
    - task: cf-deploy
      file: loggregator-ci/tasks/env-pool-tasks/cf-deploy.yml
      input_mapping:
        environment: pipeline-pool
      params:
        SYSTEM_DOMAIN: loggr.cf-app.com #TODO: this could be included in the lock file
        OPS_FILES: |
          scale-to-one-az.yml
          use-compiled-releases.yml
          on-the-fly.yml
          windows-cell.yml
          use-bosh-dns.yml
          use-bosh-dns-for-containers.yml
    - put: deployments-loggregator
      input_mapping:
        environment: pipeline-pool
      params:
        repository: updated-vars-store
        rebase: true
    - task: enable-feature-flags
      file: loggregator-ci/tasks/env-pool-tasks/set-feature-flags.yml
      input_mapping:
        environment: pipeline-pool
        vars-store: updated-vars-store
      params:
        SYSTEM_DOMAIN: loggr.cf-app.com
        ENABLED_FEATURE_FLAGS: diego_docker
    - task: cleanup
      input_mapping:
        environment: pipeline-pool
      file: loggregator-ci/tasks/env-pool-tasks/bosh-cleanup.yml
    on_failure:
      put: pipeline-pool
      params: {release: pipeline-pool}

- name: cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: deployments-loggregator
      - get: cf-acceptance-tests
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
      - get: environment
        resource: pipeline-pool
        passed: ["cf-deploy"]
        trigger: true
      - get: loggregator-ci
    - task: run-cats
      file: loggregator-ci/tasks/env-pool-tasks/run-cats.yml
      input_mapping:
        integration-config: deployments-loggregator
      params:
        NODES: 9
      on_failure:
        put: pipeline-pool
        params: {release: environment}

- name: cfar-lats
  serial: true
  serial_groups:
  - bosh-cfar-lats
  plan:
    - aggregate:
      - get: cfar-logging-acceptance-tests
        trigger: true
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-ci
      - get: environment
        resource: pipeline-pool
        passed: ["cf-deploy"]
        trigger: true
      - get: bbl-state
        resource: deployments-loggregator
        passed: ["cf-deploy"]
    - task: run-cfar-lats
      file: loggregator-ci/tasks/env-pool-tasks/cfar-lats.yml
      params:
        SYSTEM_DOMAIN: loggr.cf-app.com
        SKIP_SSL_VALIDATION: true
      on_failure:
        put: pipeline-pool
        params: {release: environment}

- name: unclaim-environment
  serial: true
  plan:
    - get: pipeline-pool
      passed: ["loggregator-benchmarks", "lats", "cats", "cfar-lats"]
      trigger: true
    - put: pipeline-pool
      params: {release: pipeline-pool}

