groups:
- name: all
  jobs:
  - loggregator-tests
  - loggregator-agent-tests
  - loggregator-docker-images
  - loggregator-bump-submodule
  - loggregator-agent-bump-submodule
  - loggregator-deploy
  - cf-deploy
  - lats
  - cfar-lats
  - cats
  - loggregator-benchmarks
  - loggregator-promotion
  - loggregator-agent-promotion
  - cf-syslog-drain-tests
  - cf-drain-cli-tests
  - cf-syslog-drain-bump-submodule
  - cf-syslog-drain-promotion
  - log-cache-tests
  - log-cache-cli-tests
  - log-cache-bump-submodule
  - log-cache-merge-branches
  - log-cache-cats
  - log-cache-promotion
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-deploy
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-bump-submodule
  - noisy-neighbor-nozzle-deploy
- name: loggregator
  jobs:
  - loggregator-tests
  - loggregator-agent-tests
  - loggregator-docker-images
  - loggregator-bump-submodule
  - loggregator-agent-bump-submodule
  - loggregator-deploy
  - cf-deploy
  - lats
  - cats
  - cfar-lats
  - loggregator-benchmarks
  - loggregator-promotion
  - loggregator-agent-promotion
- name: cf-syslog-drain
  jobs:
  - cf-syslog-drain-tests
  - cf-drain-cli-tests
  - cf-syslog-drain-bump-submodule
  - cf-deploy
  - cats
  - cfar-lats
  - cf-syslog-drain-promotion
- name: log-cache
  jobs:
  - log-cache-tests
  - log-cache-cli-tests
  - log-cache-bump-submodule
  - cfar-lats
  - cf-deploy
  - log-cache-promotion
  - log-cache-merge-branches
  - log-cache-cats
- name: statsd-injector
  jobs:
  - statsd-injector-tests
  - statsd-injector-bump-submodule
  - statsd-injector-deploy
- name: noisy-neighbor-nozzle
  jobs:
  - noisy-neighbor-nozzle-tests
  - noisy-neighbor-nozzle-bump-submodule
  - noisy-neighbor-nozzle-deploy
- name: director-lifecycle
  jobs:
  - coconut-bbl-up
  - coconut-bbl-destroy

resources:
- name: 10m
  type: time
  source:
    interval: 10m

- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: log-cache-cf-acceptance-tests
  type: git
  source:
    branch: cf-log-cache-tests
    uri: https://github.com/loggregator/cf-acceptance-tests.git

- name: cfar-logging-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cfar-logging-acceptance-tests.git

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: develop

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v4.21

- name: integration-config
  type: git
  source: *deployments_loggregator

- name: loggregator-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: develop
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: logging-acceptance-tests-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/logging-acceptance-tests-release
    branch: master

- name: loggregator-src
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator.git
    branch: master
    private_key: {{loggregator-key}}

- name: loggregator-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-release.git
    branch: release-elect
    private_key: {{loggregator-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-bench-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/loggregator-bench-release
    branch: master

- name: loggregator-bench-results
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/loggregator-bench-results.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent.git
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: loggregator-agent-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-agent-release.git
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: cf-syslog-drain-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: cf-syslog-drain-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-syslog-drain-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry/scalable-syslog
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: statsd-injector-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/statsd-injector-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: noisy-neighbor-nozzle-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/noisy-neighbor-nozzle-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: noisy-neighbor-nozzle
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/noisy-neighbor-nozzle
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: log-cache-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/log-cache-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false

- name: log-cache-release-elect-get
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/log-cache-release
    branch: release-elect

- name: log-cache-release-elect-put
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/log-cache-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: log-cache-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/log-cache-release
    branch: master

- name: log-cache-release-master-put
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/log-cache-release
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: log-cache
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/log-cache
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: go-log-cache
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/go-log-cache
    branch: master

- name: log-cache-cli
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/log-cache-cli
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: bumper-tool
  type: git
  source:
    uri: https://github.com/loggregator/bumper

- name: cf-drain-cli
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-drain-cli
    branch: master

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/loggregator/bosh-deployment
    branch: local-dns

- name: agent-image
  type: docker-image
  source:
    repository: loggregator/agent
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: router-image
  type: docker-image
  source:
    repository: loggregator/router
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: rlp-image
  type: docker-image
  source:
    repository: loggregator/rlp
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

jobs:
- name: coconut-bbl-up
  public: false
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
    - get: ops-files
      resource: bosh-deployment
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/coconut-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_bbl_lb_cert}}
      BBL_LB_KEY: {{coconut_bbl_lb_key}}
      BBL_ENV_NAME: coconut-bbl
      LB_DOMAIN: coconut.cf-app.com
      OPS_FILES: local-dns.yml
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: coconut-bbl-destroy
  public: false
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: deployments-loggregator
  - task: delete-deployments
    file: loggregator-ci/tasks/bosh-delete-all-deployments/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - put: deployments-loggregator
    params:
      repository: updated-bbl-state
      rebase: true

- name: loggregator-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-src
      trigger: true
    - get: 10m
      trigger: true
  - aggregate:
    - task: run-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test -race $(go list ./... | grep -v integration_tests) \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd
    - task: run-integration-tests
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: loggregator-src
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -ex

            mkdir -p workspace/src/code.cloudfoundry.org/loggregator
            cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

            pushd workspace
              export GOPATH="$PWD"
              export PATH="$GOPATH/bin:$PATH"

              pushd src/code.cloudfoundry.org/loggregator
                go get -t -d ./...
                go test ./integration_tests/... -race \
                  -ginkgo.randomizeAllSpecs \
                  -ginkgo.slowSpecThreshold 20
              popd
            popd

    - do:
      - task: build-windows-test-binary
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: loggregator/base
          inputs:
          - name: loggregator-src
          outputs:
          - name: binaries
          - name: test-binaries
          run:
            path: bash
            args:
            - -c
            - |
              #!/bin/bash
              set -ex

              ci_root=$PWD
              mkdir -p workspace/src/code.cloudfoundry.org/loggregator
              cp -r loggregator-src/. workspace/src/code.cloudfoundry.org/loggregator/

              function munge {
                echo $1 | tr '/' '_'
              }

              pushd workspace
                export GOOS=windows
                export GOPATH="$PWD"
                export PATH="$GOPATH/bin:$PATH"

                pushd src/code.cloudfoundry.org/loggregator
                  go get -t -d ./...
                  for pkg in $(go list ./agent/...); do
                    go test -c -o $ci_root/test-binaries/$(munge $pkg)_test.exe $pkg &
                  done
                  go build -o $ci_root/binaries/agent.exe code.cloudfoundry.org/loggregator/agent &
                popd
              popd
              wait

      - task: run-windows-tests
        config:
          platform: windows
          inputs:
          - name: binaries
          - name: test-binaries
          run:
            path: powershell
            args:
            - "-command"
            - |
              trap {
                write-error $_
                exit 1
              }

              $env:SKIP_BUILD = "true"
              $env:AGENT_BUILD_PATH = "binaries\agent.exe"

              # Run all test binaries
              Get-ChildItem -Filter test-binaries\*.exe | ForEach {
                &$_.Fullname /s
                if ($LastExitCode -ne 0) {
                  throw "test failed"
                }
              }

- name: loggregator-docker-images
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-src
      trigger: true
      passed:
      - loggregator-tests
    - get: loggregator-agent
      trigger: true
      passed:
      - loggregator-agent-tests
  - aggregate:
    - task: build-agent-image
      file: loggregator-ci/tasks/build-docker-image/task.yml
      input_mapping:
        source-repo: loggregator-agent
      output_mapping:
        build-image: build-agent-image
      params:
        BASE_PACKAGE: code.cloudfoundry.org/loggregator-agent
        IMAGE_NAME: agent
    - task: build-router-image
      file: loggregator-ci/tasks/build-docker-image/task.yml
      input_mapping:
        source-repo: loggregator-src
      output_mapping:
        build-image: build-router-image
      params:
        BASE_PACKAGE: code.cloudfoundry.org/loggregator
        IMAGE_NAME: router
    - task: build-rlp-image
      file: loggregator-ci/tasks/build-docker-image/task.yml
      input_mapping:
        source-repo: loggregator-src
      output_mapping:
        build-image: build-rlp-image
      params:
        BASE_PACKAGE: code.cloudfoundry.org/loggregator
        IMAGE_NAME: rlp
  - aggregate:
    - put: agent-image
      params:
        build: build-agent-image/build
        tag: build-agent-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: router-image
      params:
        build: build-router-image/build
        tag: build-router-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest
    - put: rlp-image
      params:
        build: build-rlp-image/build
        tag: build-rlp-image/tag
        tag_as_latest: true
        cache: true
        cache_tag: latest

- name: loggregator-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-release
      trigger: true
    - get: loggregator-src
      trigger: true
      passed:
      - loggregator-tests
    - get: loggregator-agent
      trigger: true
      passed:
        - loggregator-agent-tests
  - task: update-loggregator-agent
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-release
      source-repo: loggregator-agent
    output_mapping:
      bumped-release-repo: bumped-loggregator-agent-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator-agent
  - task: update-loggregator
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: bumped-loggregator-agent-release
      source-repo: loggregator-src
    output_mapping:
      bumped-release-repo: bumped-loggregator-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-release
    output_mapping:
      updated-release-repo: synced-loggregator-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test ~integration
    - task: run-integration-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-release
      params:
        SCRIPT: scripts/test integration
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-release
    output_mapping:
      committed-repo: committed-loggregator-release
    params:
      PATHS: "src/code.cloudfoundry.org/loggregator packages"
  - put: loggregator-release
    params:
      repository: committed-loggregator-release
      rebase: true

- name: loggregator-agent-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: loggregator-agent
    params:
      IMPORT_PATH: code.cloudfoundry.org/loggregator-agent

- name: loggregator-agent-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: loggregator-agent-release
      trigger: true
    - get: loggregator-agent
      trigger: true
      passed:
      - loggregator-agent-tests
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-agent-release
      source-repo: loggregator-agent
    output_mapping:
      bumped-release-repo: bumped-loggregator-agent-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/loggregator-agent
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-agent-release
    output_mapping:
      updated-release-repo: synced-loggregator-agent-release
    params:
      SCRIPT: scripts/sync-package-specs
  - aggregate:
    - task: run-specs
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ruby
        inputs:
        - name: synced-loggregator-agent-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e
              cd synced-loggregator-agent-release
              bundle install
              rspec
    - task: run-tests
      file: loggregator-ci/tasks/run-release-script/task.yml
      input_mapping:
        release-repo: synced-loggregator-agent-release
      params:
        SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-loggregator-agent-release
    output_mapping:
      committed-repo: committed-loggregator-agent-release
    params:
      PATHS: "src/code.cloudfoundry.org/loggregator-agent packages"
  - put: loggregator-agent-release
    params:
      repository: committed-loggregator-agent-release
      rebase: true

- name: cf-deploy
  serial: true
  serial_groups:
  - bosh-cf-cats
  - bosh-cfar-lats
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: loggregator-release
      trigger: true
      passed:
      - loggregator-bump-submodule
    - get: loggregator-agent-release
      trigger: true
      passed:
      - loggregator-agent-bump-submodule
    - get: cf-syslog-drain-release
      trigger: true
      passed:
      - cf-syslog-drain-bump-submodule
    - get: log-cache-release
      trigger: true
      passed:
      - log-cache-bump-submodule
    - get: vars-store
      resource: deployments-loggregator
    - get: vars-files
      resource: deployments-loggregator
  - aggregate:
    - task: upload-loggregator-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-loggregator-agent-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: loggregator-agent-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-cf-syslog-drain-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: cf-syslog-drain-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
    - task: upload-log-cache-release
      file: loggregator-ci/tasks/upload-release/task.yml
      input_mapping:
        bosh-release-dir: log-cache-release
      params:
        BBL_STATE_DIR: gcp/coconut-bbl
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v3.19.0
      inputs:
      - name: bbl-state
      - name: cf-deployment
      - name: log-cache-release
      - name: loggregator-agent-release
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          set -e

          cp cf-deployment/operations/windows-cell.yml ops-files/
          cp cf-deployment/operations/scale-to-one-az.yml ops-files/
          cp cf-deployment/operations/experimental/use-bosh-dns.yml ops-files/
          cp cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml ops-files/
          cp cf-deployment/operations/use-compiled-releases.yml ops-files/
          cp bbl-state/gcp/coconut-bbl/ops-files/*.yml ops-files/
          cp log-cache-release/manifests/operations/deploy-in-cf-doppler-colocated.yml ops-files/add-log-cache.yml
          cp loggregator-agent-release/manifests/operations/cf-deployment-addon.yml ops-files/use-loggregator-agent.yml
          cp loggregator-agent-release/manifests/operations/cf-deployment-windows-addon.yml ops-files/use-loggregator-agent-windows.yml

          cat <<EOT >> ops-files/on-the-fly.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              version: latest
          - type: replace
            path: /releases/name=diego
            value:
              name: diego
              version: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/version)
              url: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/url)
              sha1: $(bosh int cf-deployment/cf-deployment.yml --path=/releases/name=diego/sha1)
          - type: replace
            path: /releases/name=cf-syslog-drain
            value:
              name: cf-syslog-drain
              version: latest
          - type: replace
            path: /instance_groups/name=doppler/instances
            value: 2
          EOT
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
      OPS_FILES: |
        clients.yml
        scale-to-one-az.yml
        diego.yml
        use-compiled-releases.yml
        on-the-fly.yml
        windows-cell.yml
        add-log-cache.yml
        use-bosh-dns.yml
        use-bosh-dns-for-containers.yml
        use-loggregator-agent.yml
        use-loggregator-agent-windows.yml
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    params:
      SYSTEM_DOMAIN: coconut.cf-app.com
      VARS_STORE_FILE: gcp/coconut-bbl/deployment-vars.yml
  - put: deployments-loggregator
    params:
      repository: updated-vars-store
      rebase: true
  - task: cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: gcp/coconut-bbl

- name: loggregator-deploy
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: consul-release
    - get: loggregator-release
      trigger: true
      passed:
      - loggregator-bump-submodule
    - get: loggregator-agent-release
      trigger: true
      passed:
      - loggregator-agent-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: logging-acceptance-tests-release
      trigger: true
  - task: upload-loggregator
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: consul-release
      - name: loggregator-release
      - name: logging-acceptance-tests-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux
          loggregator_dir="$PWD/loggregator-release"

          pushd deployments-loggregator/gcp/coconut-bbl
            export BOSH_CLIENT=`bbl director-username`
            export BOSH_CLIENT_SECRET=`bbl director-password`
            export BOSH_CA_CERT=`bbl director-ca-cert`
            export BOSH_ENVIRONMENT=`bbl director-address`
          popd

          for release in $(find consul-release -name '*.tgz'); do
            bosh upload-release $release
          done

          pushd $loggregator_dir
            bosh create-release --name=loggregator --force
            bosh upload-release --rebase
          popd

          pushd logging-acceptance-tests-release
            bosh create-release --force
            bosh upload-release --rebase
          popd
  - task: loggregator-deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: loggregator-release
    output_mapping:
      updated-vars-store: updated-deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: loggregator
      MANIFEST_FILE: manifests/loggregator.yml
      VARS_STORE_FILE: gcp/coconut-bbl/loggregator-vars.yml
  - task: lats-deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: logging-acceptance-tests-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: lats
      MANIFEST_FILE: manifests/lats.yml
      VARS_STORE_FILE: gcp/coconut-bbl/lats-vars.yml
      VARS_FILES: gcp/coconut-bbl/loggregator-vars.yml
  - put: deployments-loggregator
    params:
      repository: updated-deployments-loggregator
      rebase: true

- name: loggregator-benchmarks
  serial: true
  plan:
  - aggregate:
    - get: loggregator-bench-release
    - get: loggregator-bench-results
    - get: deployments-loggregator
    - get: loggregator-ci
    - get: loggregator-release
      resource: loggregator-release
      trigger: true
      passed:
      - cf-deploy
  - task: bump-loggregator-release
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: loggregator-bench-release
      source-repo: loggregator-release
    output_mapping:
      bumped-release-repo: bumped-loggregator-bench-release
    params:
      SUBMODULE_PATH: src/loggregator-release
  - task: update-submodules
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-loggregator-bench-release
    output_mapping:
      updated-release-repo: updated-loggregator-bench-release
    params:
      SCRIPT: git submodule update --init --recursive
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: updated-loggregator-bench-release
    output_mapping:
      updated-release-repo: synced-loggregator-bench-release
    params:
      SCRIPT: ./scripts/sync-package-specs-with-gopath
  - task: upload-benchmark-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: synced-loggregator-bench-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      FORCE: true
  - task: deploy-benchmarks
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release: synced-loggregator-bench-release
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
    output_mapping:
      updated-vars-store: updated-deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: loggregator-bench
      MANIFEST_FILE: manifests/loggregator-bench.yml
      VARS_STORE_FILE: gcp/coconut-bbl/loggregator-bench-vars.yml
  - task: commit
    file: loggregator-ci/tasks/commit/task.yml
    input_mapping:
      release-repo: updated-deployments-loggregator
    output_mapping:
      committed-repo: committed-deployments-loggregator
    params:
      COMMIT_MESSAGE: "Update loggregator-bench vars store"
  - put: deployments-loggregator
    params:
      repository: committed-deployments-loggregator
      rebase: true
  - task: run-benchmarks
    file: loggregator-ci/tasks/loggregator-bench/task.yml
    params:
      BBL_STATE_DIR: deployments-loggregator/gcp/coconut-bbl
  - put: loggregator-bench-results
    params:
      repository: updated-loggregator-bench-results
      rebase: true

- name: cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cats-concourse-task
      - get: integration-config
      - get: cf-acceptance-tests
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
      - get: cf-syslog-drain-release
        passed: ["cf-deploy"]
        trigger: true
    - task: run-cats
      file: cats-concourse-task/task.yml
      params:
        CONFIG_FILE_PATH: gcp/coconut-bbl/cats-config.json
        NODES: 9

- name: cfar-lats
  serial: true
  serial_groups:
  - bosh-cfar-lats
  plan:
    - aggregate:
      - get: cfar-logging-acceptance-tests
        trigger: true
      - get: loggregator-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-agent-release
        trigger: true
        passed: ["cf-deploy"]
      - get: cf-syslog-drain-release
        trigger: true
        passed: ["cf-deploy"]
      - get: log-cache-release
        trigger: true
        passed: ["cf-deploy"]
      - get: loggregator-ci
    - task: run-cfar-lats
      file: loggregator-ci/tasks/cfar-lats/task.yml
      params:
        USERNAME: {{coconut-username}}
        PASSWORD: {{coconut-password}}
        API_ENDPOINT: api.coconut.cf-app.com

- name: log-cache-cats
  serial: true
  serial_groups:
  - bosh-cf-cats
  plan:
    - aggregate:
      - get: cats-concourse-task
      - get: integration-config
      - get: cf-acceptance-tests
        resource: log-cache-cf-acceptance-tests
      - get: loggregator-release
      - get: cf-syslog-drain-release
      - get: log-cache-cli
        passed: ["log-cache-cli-tests"]
        trigger: true
      - get: log-cache-release
        passed: ["cf-deploy"]
        trigger: true
    - task: run-cats
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: relintdockerhubpushbot/cats-concourse-task
        inputs:
        - name: log-cache-cli
        - name: cats-concourse-task
        - name: cf-acceptance-tests
        - name: integration-config
        outputs:
        - name: cats-trace-output
        params:
          SKIP_REGEXP:
          CAPTURE_LOGS: falses
          CONFIG_FILE_PATH: gcp/coconut-bbl/cats-config.json
          NODES: 9
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -xeu

            mkdir -p $GOPATH/src/code.cloudfoundry.org/
            cp -R log-cache-cli $GOPATH/src/code.cloudfoundry.org/
            pushd $GOPATH/src/code.cloudfoundry.org/log-cache-cli
              go get ./...
              go build -o lcli
              cf install-plugin -f lcli
            popd

            build_dir=${PWD}

            export CONFIG
            original_config="$PWD/integration-config/${CONFIG_FILE_PATH}"

            if ${CAPTURE_LOGS}; then
              CONFIG=$(mktemp)
              jq ".artifacts_directory=\"${build_dir}/cats-trace-output\"" ${original_config} > ${CONFIG}
            else
              CONFIG=${original_config}
            fi

            CF_GOPATH=/go/src/github.com/cloudfoundry/

            echo "Moving cf-acceptance-tests onto the gopath..."
            mkdir -p $CF_GOPATH
            cp -R cf-acceptance-tests $CF_GOPATH

            cd /go/src/github.com/cloudfoundry/cf-acceptance-tests

            export CF_DIAL_TIMEOUT=11

            export CF_PLUGIN_HOME=$HOME

            ./bin/test \
            -keepGoing \
            -randomizeAllSpecs \
            -skipPackage=helpers \
            -slowSpecThreshold=120 \
            -nodes="${NODES}" \
            -skip="${SKIP_REGEXP}" \
            -flakeAttempts=2 \
            -noisySkippings=false

- name: lats
  serial: true
  serial_groups:
  - bosh-loggregator
  plan:
  - aggregate:
    - get: deployments-loggregator
    - get: logging-acceptance-tests-release
    - get: loggregator-release
      passed:
      - loggregator-deploy
      trigger: true
    - get: loggregator-agent-release
      passed:
      - loggregator-deploy
      trigger: true
  - task: run-lats
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/coconut-bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            bosh -d lats run-errand lats --keep-alive

- name: loggregator-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-release
      trigger: true
      passed: ["lats", "cats", "loggregator-benchmarks", "cfar-lats"]
    - get: loggregator-release-elect
  - put: loggregator-release-elect
    params:
      repository: develop

- name: loggregator-agent-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: loggregator-agent-release
      trigger: true
      passed: ["cats", "cfar-lats", "lats"]
    - get: loggregator-agent-release-elect
  - put: loggregator-agent-release-elect
    params:
      repository: develop

- name: cf-syslog-drain-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: scalable-syslog
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: scalable-syslog
    params:
      IMPORT_PATH: code.cloudfoundry.org/scalable-syslog

- name: cf-drain-cli-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-drain-cli
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: cf-drain-cli
    params:
      IMPORT_PATH: code.cloudfoundry.org/cf-drain-cli

- name: cf-syslog-drain-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: cf-syslog-drain-release
      trigger: true
    - get: scalable-syslog
      passed:
      - cf-syslog-drain-tests
      trigger: true
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: cf-syslog-drain-release
      source-repo: scalable-syslog
    output_mapping:
      bumped-release-repo: updated-cf-syslog-drain-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/scalable-syslog
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: updated-cf-syslog-drain-release
    output_mapping:
      updated-release-repo: synced-cf-syslog-drain-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
      - name: synced-cf-syslog-drain-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-cf-syslog-drain-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race code.cloudfoundry.org/scalable-syslog/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-cf-syslog-drain-release
    output_mapping:
      committed-repo: committed-cf-syslog-drain-release
    params:
      PATHS: "src/code.cloudfoundry.org/scalable-syslog packages"
  - put: cf-syslog-drain-release
    params:
      repository: committed-cf-syslog-drain-release
      rebase: true

- name: cf-syslog-drain-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: cf-syslog-drain-release
      trigger: true
      passed: ["cats", "cfar-lats"]
    - get: cf-syslog-drain-release-release-elect
  - put: cf-syslog-drain-release-release-elect
    params:
      repository: develop

- name: statsd-injector-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: statsd-injector
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: statsd-injector
    params:
      IMPORT_PATH: github.com/cloudfoundry/statsd-injector

- name: statsd-injector-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: statsd-injector-release
      trigger: true
    - get: statsd-injector
      passed:
      - statsd-injector-tests
      trigger: true
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: statsd-injector-release
      source-repo: statsd-injector
    output_mapping:
      bumped-release-repo: bumped-statsd-injector-release
    params:
      SUBMODULE_PATH: src/github.com/cloudfoundry/statsd-injector
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-statsd-injector-release
    output_mapping:
      updated-release-repo: synced-statsd-injector-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: synced-statsd-injector-release
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash

          set -ex

          pushd synced-statsd-injector-release
            export GOPATH="$PWD"
            export PATH="$GOPATH/bin:$PATH"
            go test -race github.com/cloudfoundry/statsd-injector/...
          popd
  - task: commit
    file: loggregator-ci/tasks/commit/task.yml
    input_mapping:
      release-repo: synced-statsd-injector-release
    output_mapping:
      committed-repo: committed-statsd-injector-release
    params:
      COMMIT_MESSAGE: "Bump statsd-injector"
  - put: statsd-injector-release
    params:
      repository: committed-statsd-injector-release
      rebase: true

- name: statsd-injector-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: statsd-injector-release
      trigger: true
      passed:
      - statsd-injector-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: statsd-injector-release
    output_mapping:
      updated-vars-store: updated-deployments-loggregator
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: statsd-injector
      MANIFEST_FILE: manifests/statsd-injector.yml
      VARS_STORE_FILE: gcp/coconut-bbl/statsd-injector-vars.yml
      VARS_FILES: "gcp/coconut-bbl/deployment-vars.yml"
  - put: deployments-loggregator
    params:
      repository: updated-deployments-loggregator
      rebase: true

- name: noisy-neighbor-nozzle-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: noisy-neighbor-nozzle
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: noisy-neighbor-nozzle
    params:
      IMPORT_PATH: code.cloudfoundry.org/noisy-neighbor-nozzle

- name: noisy-neighbor-nozzle-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: noisy-neighbor-nozzle-release
      trigger: true
    - get: noisy-neighbor-nozzle
      trigger: true
      passed:
      - noisy-neighbor-nozzle-tests
  - task: update-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: noisy-neighbor-nozzle-release
      source-repo: noisy-neighbor-nozzle
    output_mapping:
      bumped-release-repo: bumped-noisy-neighbor-nozzle-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/noisy-neighbor-nozzle
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-noisy-neighbor-nozzle-release
    output_mapping:
      updated-release-repo: synced-noisy-neighbor-nozzle-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: synced-noisy-neighbor-nozzle-release
    params:
      SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-noisy-neighbor-nozzle-release
    output_mapping:
      committed-repo: committed-noisy-neighbor-nozzle-release
    params:
      PATHS: "src/code.cloudfoundry.org/noisy-neighbor-nozzle packages"
  - put: noisy-neighbor-nozzle-release
    params:
      repository: committed-noisy-neighbor-nozzle-release
      rebase: true

- name: noisy-neighbor-nozzle-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: noisy-neighbor-nozzle-release
      trigger: true
      passed:
      - noisy-neighbor-nozzle-bump-submodule
    - get: deployments-loggregator
    - get: loggregator-ci
  - task: upload-noisy-neighbor-nozzle-release
    file: loggregator-ci/tasks/upload-release/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      bosh-release-dir: noisy-neighbor-nozzle-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
  - task: deploy
    file: loggregator-ci/tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: deployments-loggregator
      vars-store: deployments-loggregator
      ops-files: deployments-loggregator
      vars-files: deployments-loggregator
      bosh-release: noisy-neighbor-nozzle-release
    params:
      BBL_STATE_DIR: gcp/coconut-bbl
      DEPLOYMENT_NAME: noisy-neighbor-nozzle
      MANIFEST_FILE: manifests/noisy-neighbor-nozzle.yml
      VARS_STORE_FILE: gcp/coconut-bbl/throw-away.yml # We do not want to save this vars store.
      VARS_FILES: "gcp/coconut-bbl/noisy-neighbor-nozzle-vars.yml"

- name: log-cache-cli-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: log-cache-cli
      trigger: true
    - get: 10m
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: log-cache-cli
    params:
      IMPORT_PATH: code.cloudfoundry.org/log-cache-cli

- name: log-cache-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: log-cache
      trigger: true
  - task: run-tests
    file: loggregator-ci/tasks/go-test-with-latest-packages/task.yml
    input_mapping:
      source-repo: log-cache
    params:
      IMPORT_PATH: code.cloudfoundry.org/log-cache

- name: log-cache-bump-submodule
  serial: true
  plan:
  - aggregate:
    - get: loggregator-ci
    - get: log-cache-release
      trigger: true
    - get: log-cache
      trigger: true
      passed:
      - log-cache-tests
    - get: go-log-cache
      trigger: true
  - task: update-log-cache-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: log-cache-release
      source-repo: log-cache
    output_mapping:
      bumped-release-repo: bumped-log-cache-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/log-cache
  - task: update-go-log-cache-submodule
    file: loggregator-ci/tasks/bump-submodule/task.yml
    input_mapping:
      release-repo: bumped-log-cache-release
      source-repo: go-log-cache
    output_mapping:
      bumped-release-repo: bumped-go-log-cache-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/go-log-cache
  - task: sync-package-specs
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: bumped-go-log-cache-release
    output_mapping:
      updated-release-repo: synced-log-cache-release
    params:
      SCRIPT: scripts/sync-package-specs
  - task: run-tests
    file: loggregator-ci/tasks/run-release-script/task.yml
    input_mapping:
      release-repo: synced-log-cache-release
    params:
      SCRIPT: scripts/test
  - task: commit
    file: loggregator-ci/tasks/commit-with-shortlog/task.yml
    input_mapping:
      release-repo: synced-log-cache-release
    output_mapping:
      committed-repo: committed-log-cache-release
    params:
      PATHS: |
        src/code.cloudfoundry.org/log-cache
        src/code.cloudfoundry.org/go-log-cache
        packages
  - put: log-cache-release
    params:
      repository: committed-log-cache-release
      rebase: true

- name: log-cache-promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: log-cache-release
      trigger: true
      passed: ["cfar-lats"]
    - get: log-cache-release-elect-get
  - put: log-cache-release-elect-put
    params:
      repository: develop

- name: log-cache-merge-branches
  serial: true
  plan:
  - aggregate:
    - get: release-elect
      resource: log-cache-release-elect-get
      passed: ["log-cache-promotion"]
      trigger: true
    - get: master
      resource: log-cache-release-master
    - get: bumper-tool
  - task: build-bumper
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: bumper-tool
      outputs:
        - name: bumper
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          workspace=$(pwd)
          pushd bumper-tool
            go build -o $workspace/bumper/bumper
          popd
  - task: use-bumper
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: bumper
        - name: release-elect
      outputs:
        - name: bumper-sha
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          workspace=$(pwd)
          pushd release-elect
            git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
            git fetch origin
            git checkout master

            FOLLOW_BUMPS_OF='src/code.cloudfoundry.org/log-cache' $workspace/bumper/bumper --verbose
            FOLLOW_BUMPS_OF='src/code.cloudfoundry.org/log-cache' $workspace/bumper/bumper > $workspace/bumper-sha/sha
          popd
  - task: merge
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/base
      inputs:
        - name: bumper-sha
        - name: master
      outputs:
        - name: merged-master
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          pushd master
            git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
            git fetch origin
          popd
          cp -R master/. merged-master

          bump_sha=$(cat bumper-sha/sha)
          if [ -z $bump_sha ]; then
            echo "There are no commits to bump!"
            exit 0
          fi

          pushd merged-master
            git checkout release-elect
            git checkout master
            git merge $bump_sha --ff-only
          popd

  - put: log-cache-release-master-put
    params:
      repository: merged-master
