# This pipeline deploys loggregator to the staging environment for load
# testing

resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: ouroboros
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/ouroboros-release
- name: scalable-syslog
  type: git
  source:
    uri: https://github.com/cloudfoundry/scalable-syslog-release
- name: datadog-firehose-nozzle-release
  type: bosh-io-release
  source:
    repository: DataDog/datadog-firehose-nozzle-release
- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release
- name: loggregator-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/loggregator
- name: prod-aws
  type: git
  source:
    uri: git@github.com:pivotal-cf/prod-aws.git
    branch: loggregator-staging
    private_key: {{ci_concourse_github_key}}
- name: loggregator-staging
  type: bosh-deployment
  source:
    target: {{prod_bosh_target}}
    client: {{prod_bosh_client_id}}
    client_secret: {{prod_bosh_client_secret}}
    ca_cert: {{prod_bosh_ca_cert}}
    deployment: loggregator-staging
jobs:
- name: deploy-staging
  plan:
  - aggregate:
    - get: prod-aws
      params:
        submodules: none
    - get: ouroboros
    - get: scalable-syslog
    - get: consul-release
    - get: loggregator-release
    - get: datadog-firehose-nozzle-release
  - aggregate:
    - task: create-ouroboros-release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: ouroboros
        outputs:
        - name: ouroboros-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              pushd ouroboros
                bosh -n create-release \
                  --name ouroboros \
                  --tarball ../ouroboros-release/release.tgz \
                  --version 0.0.6
              popd
    - task: create-scalable-syslog-release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
          - name: scalable-syslog
        outputs:
        - name: scalable-syslog-release
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              pushd scalable-syslog
                bosh -n create-release \
                  --name scalablesyslog \
                  --tarball ../scalable-syslog-release/release.tgz
              popd
  - put: loggregator-staging
    tags: [ prod ]
    params:
      manifest: prod-aws/deployments/loggregator-staging.yml
      releases:
      - scalable-syslog-release/*.tgz
      - ouroboros-release/*.tgz
      - loggregator-release/*.tgz
      - consul-release/*.tgz
      - datadog-firehose-nozzle-release/*.tgz
