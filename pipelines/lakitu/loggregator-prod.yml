# This pipeline deploys scalable syslog to production

resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: scalable-syslog-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/scalable-syslog-release
- name: loggregator
  type: git
  source:
    uri: https://github.com/cloudfoundry/loggregator
- name: prod-aws
  type: git
  source:
    uri: git@github.com:pivotal-cf/prod-aws.git
    private_key: {{ci_concourse_github_key}}
    branch: master
- name: secrets-prod
  type: git
  source:
    uri: git@github.com:pivotal-cloudops/secrets-prod.git
    private_key: {{ci_concourse_github_key}}
jobs:
- name: update-scalable-syslog-manifest
  serial: true
  plan:
    - aggregate:
      - get: scalable-syslog-release
      - get: loggregator
        params:
          submodules: none
      - get: prod-aws
        params:
          submodules: none
      - get: secrets-prod
    - task: diff
      tags: [ prod ]
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: scalable-syslog-release
        - name: loggregator
        - name: prod-aws
        - name: secrets-prod
        outputs:
        - name: updated-prod-aws
        params:
          BOSH_CLIENT: {{prod_bosh_client_id}}
          BOSH_CLIENT_SECRET: {{prod_bosh_client_secret}}
          BOSH_CA_CERT: {{prod_bosh_ca_cert}}
          BOSH_ENVIRONMENT: {{prod_bosh_target}}
          BOSH_DEPLOYMENT: scalablesyslog
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e

              gem install secrets-sanitizer --no-rdoc --no-ri

              function release_version {
                echo $(bosh int $1 --path=/builds | grep version | cut -d ":" -f 2 | cut -d " " -f 2 | cut -d '"' -f 2 | sort -n | tail -n 1)
              }

              SECRETS_DIR=$PWD/secrets-prod
              CF_VERSION=$(bosh int prod-aws/deployments/cf-cfapps-io2.yml --path=/releases/name=cf/version)
              LOGGREGATOR_VERSION=$(release_version "loggregator/releases/loggregator/index.yml")
              SCALABLE_SYSLOG_VERSION=$(release_version "scalable-syslog-release/releases/scalablesyslog/index.yml")

              echo
              echo "CF Version: $CF_VERSION"
              echo "Loggregator Version: $LOGGREGATOR_VERSION"
              echo "Scalable Syslog Version: $SCALABLE_SYSLOG_VERSION"
              echo

              pushd prod-aws/deployments
                opsfile=`mktemp`
                manifest=`mktemp`

                cat > $opsfile << OPSFILE
              - type: replace
                path: /releases/name=cf/version
                value: $CF_VERSION
              - type: replace
                path: /releases/name=loggregator/version
                value: $LOGGREGATOR_VERSION
              - type: replace
                path: /releases/name=scalablesyslog/version
                value: $SCALABLE_SYSLOG_VERSION
              OPSFILE

                bosh int scalablesyslog.yml -o $opsfile > $manifest
                mv $manifest scalablesyslog.yml

                git config user.email "cf-loggregator@pivotal.io"
                git config user.name "Loggregator CI"
                git add . --all
                git commit -m "Updating release versions for scalablesyslog deployment"

                desanitize -f -i scalablesyslog.yml -s $SECRETS_DIR/deployments
                bosh deploy scalablesyslog.yml -n --dry-run

                git reset --hard
              popd

              rsync -ac prod-aws/ updated-prod-aws/
    - put: prod-aws
      params:
        repository: updated-prod-aws
- name: deploy-scalable-syslog
  serial: true
  plan:
    - aggregate:
      - get: scalable-syslog-release
        passed: ["update-scalable-syslog-manifest"]
      - get: loggregator
        params:
          submodules: none
      - get: prod-aws
        params:
          submodules: none
      - get: secrets-prod
    - task: diff
      tags: [ prod ]
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: loggregator/base
        inputs:
        - name: scalable-syslog-release
        - name: loggregator
        - name: prod-aws
        - name: secrets-prod
        params:
          BOSH_CLIENT: {{prod_bosh_client_id}}
          BOSH_CLIENT_SECRET: {{prod_bosh_client_secret}}
          BOSH_CA_CERT: {{prod_bosh_ca_cert}}
          BOSH_ENVIRONMENT: {{prod_bosh_target}}
          BOSH_DEPLOYMENT: scalablesyslog
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -e

              gem install secrets-sanitizer --no-rdoc --no-ri

              SECRETS_DIR=$PWD/secrets-prod
              LOGGREGATOR_VERSION=$(bosh int prod-aws/deployments/scalablesyslog.yml --path=/releases/name=loggregator/version)
              SCALABLE_SYSLOG_VERSION=$(bosh int prod-aws/deployments/scalablesyslog.yml --path=/releases/name=scalablesyslog/version)

              pushd loggregator
                bosh upload-release "releases/loggregator/loggregator-$LOGGREGATOR_VERSION.yml"
              popd

              pushd scalable-syslog-release
                bosh upload-release "releases/scalablesyslog/scalablesyslog-$SCALABLE_SYSLOG_VERSION.yml"
              popd

              pushd prod-aws/deployments
                desanitize -f -i scalablesyslog.yml -s $SECRETS_DIR/deployments
                bosh deploy scalablesyslog.yml -n
              popd
