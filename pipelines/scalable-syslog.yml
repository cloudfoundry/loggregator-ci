resources:
- name: scalable-syslog-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/scalable-syslog-release
    branch: develop
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: scalable-syslog-release-release-elect
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/scalable-syslog-release
    branch: release-elect
    private_key: {{cf-loggregator-oauth-bot-key}}
    ignore_paths:
    - .final_builds
    - releases

- name: loggregator-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/loggregator-ci
    branch: master
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: scalable-syslog
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/scalable-syslog
    private_key: {{cf-loggregator-oauth-bot-key}}

- name: deployments-loggregator
  type: git
  source: &deployments_loggregator
    uri: git@github.com:cloudfoundry/deployments-loggregator.git
    branch: master
    private_key: {{deployments-loggregator-key}}

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

# This is here because concourse has a bug in which putting to a git resource
# creates a new version that can trigger jobs even if the commit has [ci skip]
# present.
- name: deployments-loggregator-with-changes
  type: git
  source: *deployments_loggregator

jobs:
- name: tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: scalable-syslog-release
      trigger: false
    - get: scalable-syslog
      trigger: true
  - task: run-tests
    config:
      image_resource:
        type: docker-image
        source:
        - repository: loggregator/go17
      platform: linux
      inputs:
      - name: scalable-syslog-release
      - name: scalable-syslog
      run:
        path: bash
        args:
        - -c
        - {{scalable_syslog_tests}}

- name: bump-release-submodule
  serial: true
  plan:
  - aggregate:
    - get: scalable-syslog-release
      trigger: false
    - get: scalable-syslog
      passed:
      - tests
      trigger: true
  - task: update-submodule
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/go17
      inputs:
      - name: scalable-syslog-release
      - name: scalable-syslog
      outputs:
      - name: updated-scalable-syslog-release
      params:
        PARENT: scalable-syslog-release
        OUTPUT: updated-scalable-syslog-release
        CHILD: scalable-syslog
        CHILD_PATH: src/github.com/cloudfoundry-incubator/scalable-syslog
      run:
        path: bash
        args:
        - -c
        - {{update_submodule}}
  - task: sync-package-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/go17
      inputs:
      - name: updated-scalable-syslog-release
      outputs:
      - name: synced-scalable-syslog-release
      params:
        OUTPUT: synced-scalable-syslog-release
      run:
        path: bash
        args:
        - -c
        - {{scalable_syslog_sync_package_specs}}
  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/go17
      inputs:
      - name: synced-scalable-syslog-release
      outputs:
      - name: bumped-scalable-syslog-release
      params:
        SOURCE: synced-scalable-syslog-release
        PATHS: src/github.com/cloudfoundry-incubator/scalable-syslog packages/
        COMMIT_MESSAGE: "Bump scalable-syslog"
        OUTPUT: bumped-scalable-syslog-release
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: scalable-syslog-release
    params:
      repository: bumped-scalable-syslog-release
      rebase: true

- name: scalable-syslog-deploy
  serial: true
  plan:
  - aggregate:
    - get: scalable-syslog-release
      passed:
      - bump-release-submodule
      trigger: true
    - get: deployments-loggregator
      trigger: false
    - get: consul-release
      trigger: false
  - task: upload-scalable-syslog
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
        - name: scalable-syslog-release
        - name: consul-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux
            pushd deployments-loggregator/gcp/bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            for release in $(find consul-release -name '*.tgz'); do
              bosh upload-release $release
            done

            pushd scalable-syslog-release
                bosh create-release
                bosh upload-release --rebase
            popd

  - task: deploy-scalable-syslog
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: scalable-syslog-release
      outputs:
      - name: updated-deployments-loggregator
      params:
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            ss_dir="$PWD/scalable-syslog-release"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut"

            bosh -n -d scalablesyslog deploy \
              --vars-store "$deployment_dir/scalable-syslog-vars.yml" \
              --ops-file "$ss_dir/manifests/fake-ops.yml" \
              "$ss_dir/manifests/scalable-syslog.yml"

            rsync -ac deployments-loggregator/ updated-deployments-loggregator

  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/ubuntu-base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut/scalable-syslog-vars.yml
        COMMIT_MESSAGE: "Update scalable-syslog vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

- name: cf-scalable-syslog-deploy
  serial: true
  plan:
  - aggregate:
    - get: scalable-syslog-release
      passed:
      - bump-release-submodule
      trigger: true
    - get: deployments-loggregator
      trigger: false
    - get: consul-release
      trigger: false
  - task: upload-scalable-syslog
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
        - name: deployments-loggregator
        - name: scalable-syslog-release
        - name: consul-release
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux
            pushd deployments-loggregator/gcp/bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            for release in $(find consul-release -name '*.tgz'); do
              bosh upload-release $release
            done

            pushd scalable-syslog-release
                bosh create-release
                bosh upload-release --rebase
            popd

  - task: deploy-scalable-syslog
    config:
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
      platform: linux
      inputs:
      - name: deployments-loggregator
      - name: scalable-syslog-release
      outputs:
      - name: updated-deployments-loggregator
      params:
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            pushd deployments-loggregator/gcp/bbl
              export BOSH_CLIENT=`bbl director-username`
              export BOSH_CLIENT_SECRET=`bbl director-password`
              export BOSH_CA_CERT=`bbl director-ca-cert`
              export BOSH_ENVIRONMENT=`bbl director-address`
            popd

            ss_dir="$PWD/scalable-syslog-release"
            deployment_dir="$PWD/deployments-loggregator/gcp/coconut"
            bbl_dir="$PWD/deployments-loggregator/gcp/bbl"

            bosh int "$bbl_dir/deployment-vars.yml" --path /loggregator_ca > /tmp/vars.yml
            sed -i -e 's/^/  /' /tmp/vars.yml
            echo "loggregator_ca:" > /tmp/loggregator_ca.yml
            cat /tmp/vars.yml >> /tmp/loggregator_ca.yml

            bosh int "$bbl_dir/deployment-vars.yml" --path /service_cf_internal_ca > /tmp/vars.yml
            sed -i -e 's/^/  /' /tmp/vars.yml
            echo "service_cf_internal_ca:" >> /tmp/loggregator_ca.yml
            cat /tmp/vars.yml >> /tmp/loggregator_ca.yml

            bosh -n -d cf-scalablesyslog deploy \
              --vars-store "$deployment_dir/cf-scalable-syslog-vars.yml" \
              --ops-file "$bbl_dir/ops-files/scalable-syslog/coconut.yml" \
              --vars-file /tmp/loggregator_ca.yml \
              "$ss_dir/manifests/scalable-syslog.yml"

            rsync -ac deployments-loggregator/ updated-deployments-loggregator

  - task: commit
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: loggregator/ubuntu-base
      inputs:
      - name: updated-deployments-loggregator
      outputs:
      - name: committed-deployments-loggregator
      params:
        SOURCE: updated-deployments-loggregator
        PATHS: gcp/coconut/cf-scalable-syslog-vars.yml
        COMMIT_MESSAGE: "Update cf-scalable-syslog vars store"
        OUTPUT: committed-deployments-loggregator
      run:
        path: bash
        args:
        - -c
        - {{commit}}
  - put: deployments-loggregator-with-changes
    params:
      repository: committed-deployments-loggregator
      rebase: true

- name: promotion
  serial: true
  plan:
  - aggregate:
    - get: develop
      resource: scalable-syslog-release
      trigger: true
      passed: ["scalable-syslog-deploy", "cf-scalable-syslog-deploy"]
    - get: release-elect
      resource: scalable-syslog-release-release-elect
    - get: loggregator-ci
  - task: promote
    file: loggregator-ci/tasks/promote.yml
  - put: scalable-syslog-release-release-elect
    params:
      repository: promote-develop
      rebase: true
