resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
  - name: loggregator-release-elect
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: release-elect
      private_key: {{loggregator-key}}
      ignore_paths:
        - .final_builds
        - releases

  - name: loggregator-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/loggregator.git
      branch: develop
      private_key: {{loggregator-key}}
      ignore_paths:
      - .final_builds
      - releases

  - name: loggregator-latest
    type: bosh-io-release
    source:
      repository: cloudfoundry/loggregator

  - name: deployments-loggregator
    type: git
    source: &deployments_loggregator
      uri: git@github.com:cloudfoundry/deployments-loggregator.git
      branch: master
      private_key: {{deployments-loggregator-key}}

  - name: deployments-loggregator-with-changes
    type: git
    source: *deployments_loggregator

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: develop

  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: v2.1

  - name: 5m
    type: time
    source: {interval: 5m}

  - name: loggregator-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/loggregator-ci

  - name: regression-test-control
    type: gcs-resource
    source:
      bucket: regression-test-control
      json_key: {{bbl_gcp_service_account_key}}
      regexp: timestamp-(.*)

jobs:
- name: loggregator-elect-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/loggregator-elect-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-elect-bbl
      LB_DOMAIN: loggregator-elect.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-elect-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-elect-bbl
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-latest-bbl-create
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: service-account.key.json
      BBL_GCP_PROJECT_ID: cff-loggregator
      BBL_GCP_ZONE: us-central1-a
      BBL_GCP_REGION: us-central1
      BBL_STATE_DIR: gcp/loggregator-latest-bbl
      BBL_IAAS: gcp
      BBL_LB_CERT: {{coconut_director_cert}}
      BBL_LB_KEY: {{coconut_director_key}}
      BBL_ENV_NAME: loggregator-latest-bbl
      LB_DOMAIN: loggregator-latest.cf-app.com
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true
- name: loggregator-latest-bbl-destroy
  plan:
  - get: cf-deployment-concourse-tasks
    trigger: false
  - get: bbl-state
    resource: deployments-loggregator
    trigger: false
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-latest-bbl
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-bbl-state
      rebase: true

- name: start-pipeline
  serial: true
  plan:
  - task: start-pipeline
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      outputs:
      - name: regression-test-control
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -ex

          now=$(date "+%s")

          echo $now > regression-test-control/timestamp-$now
  - put: regression-test-control
    params:
      file: regression-test-control/timestamp-*

- name: loggregator-elect-deploy
  serial: true
  serial_groups: ["loggregator-elect"]
  plan:
  - aggregate:
    - get: regression-test-control
      passed: ["start-pipeline"]
      trigger: true
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: release
      resource: loggregator-release-elect
    - get: vars-store
      resource: deployments-loggregator
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-elect-bbl
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      inputs:
      - name: bbl-state
      - name: cf-deployment
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -ex

          cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
          cp bbl-state/gcp/loggregator-elect-bbl/ops-files/*.yml ops-files/

  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-elect-bbl
      SYSTEM_DOMAIN: loggregator-elect.cf-app.com
      VARS_STORE_FILE: gcp/loggregator-elect-bbl/deployment-vars.yml
      OPS_FILES: "clients.yml use-4-azs-for-router.yml"
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-vars-store
      rebase: true


- name: loggregator-latest-deploy
  serial: true
  serial_groups: ["loggregator-latest"]
  plan:
  - aggregate:
    - get: regression-test-control
      passed: ["start-pipeline"]
      trigger: true
    - get: bbl-state
      resource: deployments-loggregator
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
    - get: vars-store
      resource: deployments-loggregator
    - get: release
      resource: loggregator-latest
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-latest-bbl
  - task: copy-ops-files
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: ubuntu }
      inputs:
      - name: bbl-state
      - name: cf-deployment
      - name: release
      outputs:
      - name: ops-files
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -ex

          cp cf-deployment/operations/workarounds/use-4-azs-for-router.yml ops-files/
          cp bbl-state/gcp/loggregator-latest-bbl/ops-files/*.yml ops-files/

          version=$(cat release/version)
          sha=$(cat release/sha1)

          echo <<EOT >> ops-files/loggregator-version.yml
          - type: replace
            path: /releases/name=loggregator
            value:
              name: loggregator
              url: https://bosh.io/d/github.com/cloudfoundry/loggregator?v=$version
              version: "$version"
              sha1: "$sha"
          EOT
  - task: cf-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: gcp/loggregator-latest-bbl
      SYSTEM_DOMAIN: loggregator-latest.cf-app.com
      VARS_STORE_FILE: gcp/loggregator-latest-bbl/deployment-vars.yml
      OPS_FILES: "clients.yml use-4-azs-for-router.yml loggregator-version.yml"
  - put: deployments-loggregator-with-changes
    params:
      repository: updated-vars-store
      rebase: true

- name: cf-setup
  serial: true
  serial_groups: ["loggregator-elect", "loggregator-latest"]
  plan:
  - aggregate:
    - get: regression-test-control
      passed: ["loggregator-latest-deploy", "loggregator-elect-deploy"]
      trigger: true
    - get: vars-store
      resource: deployments-loggregator-with-changes
    - get: loggregator
      resource: loggregator-develop
    - get: release-elect
      passed:
        - loggregator-elect-deploy
      resource: loggregator-release-elect
    - get: release-latest
      passed:
        - loggregator-latest-deploy
      resource: loggregator-latest
    - get: loggregator-ci
  - aggregate:
    - task: setup-loggregator-elect
      file: loggregator-ci/tasks/release-elect-regression/setup-cf.yml
      params:
        SYSTEM_DOMAIN: loggregator-elect.cf-app.com
        VARS_STORE_FILE: gcp/loggregator-elect-bbl/deployment-vars.yml
        ORG: cf-lamb
        SPACE: development
    - task: setup-loggregator-latest
      file: loggregator-ci/tasks/release-elect-regression/setup-cf.yml
      params:
        SYSTEM_DOMAIN: loggregator-latest.cf-app.com
        VARS_STORE_FILE: gcp/loggregator-latest-bbl/deployment-vars.yml
        ORG: cf-lamb
        SPACE: development

- name: setup-datadog
  serial: true
  serial_groups: ["loggregator-elect", "loggregator-latest"]
  plan:
  - aggregate:
    - get: regression-test-control
      passed: ["cf-setup"]
      trigger: true
    - get: release-latest
      resource: loggregator-latest
      passed:
      - cf-setup
    - get: release-elect
      resource: loggregator-release-elect
      passed:
      - cf-setup
    - get: loggregator-ci
  - task: setup-dashboard
    file: loggregator-ci/tasks/release-elect-regression/setup-datadog-dashboard.yml
    params:
      DATADOG_API_KEY: {{datadog-dev-api-key}}
      DATADOG_APP_KEY: {{datadog-dev-app-key}}
      LATEST_SYSTEM_DOMAIN: loggregator-latest.cf-app.com
      ELECT_SYSTEM_DOMAIN: loggregator-elect.cf-app.com

- name: smoke-tests
  serial: true
  serial_groups: ["loggregator-elect", "loggregator-latest"]
  plan:
    - aggregate:
      - get: regression-test-control
        passed: ["setup-datadog"]
        trigger: true
      - get: release-elect
        resource: loggregator-release-elect
        passed:
        - setup-datadog
      - get: release-latest
        resource: loggregator-latest
        passed:
        - setup-datadog
      - get: loggregator-ci
    - get: 5m
      trigger: true
    - aggregate:
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/bosh20
            inputs:
              - name: release-elect
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cd release-elect
                git rev-parse HEAD > ../release-info/version
        - task: loggregator-elect
          file: loggregator-ci/tasks/release-elect-regression/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-elect.cf-app.com
            USERNAME: admin
            PASSWORD: {{loggregator-elect-password}}
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true
      - do:
        - task: get-release-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: loggregator/bosh20
            inputs:
              - name: release-latest
            outputs:
              - name: release-info
            run:
              path: bash
              args:
              - -c
              - |
                #/bin/bash
                set -ex

                cp release-latest/version release-info/version
        - task: loggregator-latest
          file: loggregator-ci/tasks/release-elect-regression/cf-logs-smoke-test.yml
          params:
            PREFIX: "regression."
            CYCLES: 10000
            DELAY: "2"
            DELAY_UNIT: "us"
            MESSAGE: "FIFTEEN-MINUTE"
            APP_NAME: "floodspinner"
            WAIT: 60
            API_ENDPOINT: api.loggregator-latest.cf-app.com
            USERNAME: admin
            PASSWORD: {{loggregator-latest-password}}
            DATADOG_API_KEY: {{datadog-dev-api-key}}
            SKIP_SSL_VALIDATION: true

