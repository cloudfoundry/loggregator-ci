<%
releases = [
  'backup-and-restore-sdk',
  'binary-offline-buildpack',
  'bosh-dns-aliases',
  'bosh-system-metrics-forwarder',
  'bpm',
  'capi',
  'cf-autoscaling',
  'cf-backup-and-restore',
  'cf-cli',
  'cf-networking',
  'cf-smoke-tests',
  'cf-syslog-drain',
  'cflinuxfs3',
  'consul',
  'consul-drain',
  'credhub',
  'diego',
  'dotnet-core-offline-buildpack',
  'garden-runc',
  'go-offline-buildpack',
  'haproxy',
  'istio',
  'java-offline-buildpack',
  'leadership-election',
  'log-cache',
  'loggregator',
  'loggregator-agent',
  'mapfs',
  'metric-registrar',
  'mysql-monitoring',
  'nats',
  'nfs-volume',
  'nginx-offline-buildpack',
  'nodejs-offline-buildpack',
  'notifications',
  'notifications-ui',
  'php-offline-buildpack',
  'push-apps-manager-release',
  'push-usage-service-release',
  'pxc',
  'python-offline-buildpack',
  'r-offline-buildpack',
  'routing',
  'ruby-offline-buildpack',
  'silk',
  'smb-volume',
  'staticfile-offline-buildpack',
  'statsd-injector',
  'syslog',
  'uaa',
]

  stemcell_version = '315.13'
%>

resources:
<% releases.each do |name| %>
- name: <%= name %>
  type: s3
  source:
    bucket: compiled-releases
    region_name: us-west-1
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    regexp: ^2.7/.+/<%= name %>-(?P<release_version>v?[0-9\.]+)-ubuntu-xenial-<%= stemcell_version %>(\.0)?\.tgz$
<% end %>
- name: p-runtime
  type: git
  source:
    uri: git@github.com:pivotal-cf/p-runtime.git
    private_key: {{loggregator-pivotal-ci-key}}

jobs:
- name: build
  public: false
  serial: true
  plan:
    - aggregate:
<% releases.each do |name| %>
      - get: <%= name %>
<% end %>
      - get: p-runtime
    - task: build-pas
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: pivotalcfreleng/ruby
        outputs:
          - name: tile-output
        inputs:
          - name: p-runtime
<% releases.each do |name| %>
          - name: <%= name %>
            path: releases/<%= name %>
<% end %>
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              workspace=$PWD
              mkdir -p p-runtime/releases
              cp releases/**/*.tgz p-runtime/releases

              pushd p-runtime
                ./bin/build $workspace/tile-output
              popd


