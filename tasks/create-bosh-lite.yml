platform: linux
image_resource:
  type: docker-image
  source:
    repository: loggregator/bosh20
inputs:
- name: bosh-deployment
- name: deployments-loggregator
outputs:
- name: updated-deployments-loggregator
params:
  deploy_dir:
  subnet_prefix:
run:
  path: bash
  args:
    - -c
    - |
      #!/bin/bash
      set -ex
      mkdir -p $deploy_dir

      if [ -f $deploy_dir/state.json ]; then
        echo Deploy already exists, delete it first
        exit 1
      fi

      # create director
      bosh create-env bosh-deployment/bosh.yml \
        --state $deploy_dir/state.json \
        -o bosh-deployment/gcp/cpi.yml \
        -o bosh-deployment/bosh-lite.yml \
        -o bosh-deployment/jumpbox-user.yml \
        -o $deploy_dir/lite-ops.yml \
        --vars-store $deploy_dir/creds.yml \
        -v director_name="Bosh Lite Director" \
        -v internal_ip="$subnet_prefix".6 \
        -v internal_gw="$subnet_prefix".1 \
        -v internal_cidr="$subnet_prefix".0/24 \
        -v network_name=litenet0 \
        -v outbound_network_name=NatNetwork \
        --var-file gcp_credentials_json=deployments-loggregator/gcp/coconut/tf/terraform-bosh.key.json \
        -v network=cf-network \
        -v subnetwork=bosh-lite \
        -v project_id=cff-loggregator \
        -v tags="[bosh]" \
        -v zone="us-central1-a"

      # upload stemcell needed for bosh-lite "vms"
      bosh alias-env lite -e "$subnet_prefix".6 --ca-cert <(bosh interpolate $deploy_dir/creds.yml --path /director_ssl/ca)
      export BOSH_CLIENT=admin
      export BOSH_CLIENT_SECRET=$(bosh interpolate $deploy_dir/creds.yml --path /admin_password)
      bosh -e lite upload-stemcell https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent

      rsync -ac deployments-loggregator/ updated-deployments-loggregator
